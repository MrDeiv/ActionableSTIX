[2025-04-08 11:20:00,861 INFO] Application started with interaction level: LOW (0.000000)
[2025-04-08 11:20:00,862 INFO] Starting time: 2025-04-08 11:20:00
[2025-04-08 11:20:04,058 INFO] Documents loaded: 301
[2025-04-08 11:20:31,416 INFO] Selected malware: Smooth Operator
[2025-04-08 11:20:31,417 INFO] Extracted 43 IOCs from the STIX file
[2025-04-08 11:20:31,418 INFO] Inserted state with id: 1c98e3dd-6ccb-4ab6-92be-5632d02fb9e0
[2025-04-08 11:20:38,568 INFO] Processing step relative to tactic: initial-access
[2025-04-08 11:20:38,568 INFO] + Processing action: Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware
[2025-04-08 11:20:41,952 INFO] ++ Embedding computed for: Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware. The vector has shape: (384,)
[2025-04-08 11:20:42,104 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [content injection]: tensor([[0.3919]])
[2025-04-08 11:20:42,205 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [drive-by compromise]: tensor([[0.3679]])
[2025-04-08 11:20:42,375 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [exploit public-facing application]: tensor([[0.4411]])
[2025-04-08 11:20:42,502 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [external remote services]: tensor([[0.2276]])
[2025-04-08 11:20:42,667 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [hardware additions]: tensor([[0.4064]])
[2025-04-08 11:20:42,865 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [phishing]: tensor([[0.2354]])
[2025-04-08 11:20:43,049 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [phishing: spearphishing attachment]: tensor([[0.1925]])
[2025-04-08 11:20:43,170 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [phishing: spearphishing link]: tensor([[0.1834]])
[2025-04-08 11:20:43,247 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [phishing: spearphishing via service]: tensor([[0.2450]])
[2025-04-08 11:20:43,371 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [phishing: spearphishing voice]: tensor([[0.1864]])
[2025-04-08 11:20:43,628 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [replication through removable media]: tensor([[0.3818]])
[2025-04-08 11:20:43,853 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [supply chain compromise]: tensor([[0.5589]])
[2025-04-08 11:20:44,050 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [supply chain compromise: compromise software dependencies and development tools]: tensor([[0.7173]])
[2025-04-08 11:20:44,152 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [supply chain compromise: compromise software supply chain]: tensor([[0.6812]])
[2025-04-08 11:20:44,256 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [supply chain compromise: compromise hardware supply chain]: tensor([[0.6528]])
[2025-04-08 11:20:44,339 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [trusted relationship]: tensor([[0.4231]])
[2025-04-08 11:20:44,472 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [valid accounts]: tensor([[0.3736]])
[2025-04-08 11:20:44,612 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [valid accounts: default accounts]: tensor([[0.2040]])
[2025-04-08 11:20:44,737 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [valid accounts: domain accounts]: tensor([[0.2046]])
[2025-04-08 11:20:44,968 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [valid accounts: local accounts]: tensor([[0.2452]])
[2025-04-08 11:20:45,100 INFO] ++ Similarity between [Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware] and [valid accounts: cloud accounts]: tensor([[0.1647]])
[2025-04-08 11:20:45,105 INFO] ++ Scores: [('supply chain compromise: compromise software dependencies and development tools', tensor([[0.7173]])), ('supply chain compromise: compromise software supply chain', tensor([[0.6812]])), ('supply chain compromise: compromise hardware supply chain', tensor([[0.6528]])), ('supply chain compromise', tensor([[0.5589]])), ('exploit public-facing application', tensor([[0.4411]]))]
[2025-04-08 11:20:45,106 INFO] ++ Similar techniques found:
['supply chain compromise: compromise software dependencies and development tools', 'supply chain compromise: compromise software supply chain', 'supply chain compromise: compromise hardware supply chain', 'supply chain compromise', 'exploit public-facing application']
[2025-04-08 11:20:45,106 INFO] ++ Querying the QA model for action Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware with the following context:
supply chain compromise: compromise software dependencies and development tools
supply chain compromise: compromise software supply chain
supply chain compromise: compromise hardware supply chain
supply chain compromise
exploit public-facing application
[2025-04-08 11:20:50,432 INFO] ++ QA suggested technique: supply chain compromise: compromise software dependencies and development tools
[2025-04-08 11:20:50,432 INFO] ++ Selected technique: supply chain compromise: compromise software dependencies and development tools
[2025-04-08 11:20:54,608 INFO] ++ Refining the action: Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='adf8761d-c6e4-4b44-bf70-83b15a600b5f', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Execution of the rest of the functionality in the second -\nstage  continue s in the child process.\n\nThe UpdateAgent  binary delete s itself  from disk immediately \nafter execution .\n\nSmooth Operator  writes configuration files and further  executable stages  to the legitimate 3CX \ninstallation directory in an attempt to appear legitima te.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Tactic  ID Technique  Procedure  \nInitial \nAccess  T1195.001  Supply Chain \nCompromise: \nCompromise Software \nDependencies and \nDevelopment Tools  Smooth Operator is distributed via legitimate \nchannels as  trojanised,  signed and notarized \n3CX software.\n\nPersistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='We speculate that threat actors might have introduced these malicious libraries during the build process of the 3CXDesktopApp application.\n\nBecause malicious content was added to this legitimate application in order to compromise the users of 3CXDesktopApp, it could suggest that this is intended to be a supply chain attack.3CX products are widely used across the globe.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• Smooth Operator was distributed to victims as part of the 3CX supply  chain attack.\n\n• The infected  software package  was signed by 3CX  and notarized by Apple .\n\n• Malicious code inserted into a dynamic library (dylib) packaged with the 3CX software \ndownloads and runs a second -stage payload.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='Due to blocking the shellcode, we were unable to obtain the secondary payload used in this attack, so we cannot determine its capabilities or any post-exploitation activities carried out by the threat actor.Related Unit 42 TopicsThreat Brief,Supply ChainDetails of the IncidentThe 3CXDesktopApp supply chain attack began with threat actors introducing malicious libraries into the legitimate 3CXDesktopApp installation application, likely by including these libraries during the build process of 3CXDesktopApp.')]
[2025-04-08 11:21:25,951 INFO] ++ Pre-conditions computed for action: Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware using 9 documents:
[Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='a54adcd5-c433-4c6b-b44e-928cfc041173', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Tactic  ID Technique  Procedure  \nInitial \nAccess  T1195.001  Supply Chain \nCompromise: \nCompromise Software \nDependencies and \nDevelopment Tools  Smooth Operator is distributed via legitimate \nchannels as  trojanised,  signed and notarized \n3CX software.\n\nPersistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• Smooth Operator was distributed to victims as part of the 3CX supply  chain attack.\n\n• The infected  software package  was signed by 3CX  and notarized by Apple .\n\n• Malicious code inserted into a dynamic library (dylib) packaged with the 3CX software \ndownloads and runs a second -stage payload.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='We speculate that threat actors might have introduced these malicious libraries during the build process of the 3CXDesktopApp application.\n\nBecause malicious content was added to this legitimate application in order to compromise the users of 3CXDesktopApp, it could suggest that this is intended to be a supply chain attack.3CX products are widely used across the globe.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The victim ID is used \nthroughout both stages of Smooth Operator  and is included in both malware  beacon s and exfiltration .\n\nThe second -stage will not run without the presence of the .main_storage  file.\n\nSupply chain compromise  \nThe file libffmpeg.dylib  is a legitimate dependency of the 3CX software and is loaded when the \nsoftware is run .'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='Due to blocking the shellcode, we were unable to obtain the secondary payload used in this attack, so we cannot determine its capabilities or any post-exploitation activities carried out by the threat actor.Related Unit 42 TopicsThreat Brief,Supply ChainDetails of the IncidentThe 3CXDesktopApp supply chain attack began with threat actors introducing malicious libraries into the legitimate 3CXDesktopApp installation application, likely by including these libraries during the build process of 3CXDesktopApp.')]
[2025-04-08 11:21:42,553 INFO] ++ Post-conditions computed for action: Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware using 9 documents:
[Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='e5a744dc-dc18-41b4-8ba3-0802383fe3fa', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='adf8761d-c6e4-4b44-bf70-83b15a600b5f', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Execution of the rest of the functionality in the second -\nstage  continue s in the child process.\n\nThe UpdateAgent  binary delete s itself  from disk immediately \nafter execution .\n\nSmooth Operator  writes configuration files and further  executable stages  to the legitimate 3CX \ninstallation directory in an attempt to appear legitima te.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Tactic  ID Technique  Procedure  \nInitial \nAccess  T1195.001  Supply Chain \nCompromise: \nCompromise Software \nDependencies and \nDevelopment Tools  Smooth Operator is distributed via legitimate \nchannels as  trojanised,  signed and notarized \n3CX software.\n\nPersistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• Smooth Operator was distributed to victims as part of the 3CX supply  chain attack.\n\n• The infected  software package  was signed by 3CX  and notarized by Apple .\n\n• Malicious code inserted into a dynamic library (dylib) packaged with the 3CX software \ndownloads and runs a second -stage payload.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='We speculate that threat actors might have introduced these malicious libraries during the build process of the 3CXDesktopApp application.\n\nBecause malicious content was added to this legitimate application in order to compromise the users of 3CXDesktopApp, it could suggest that this is intended to be a supply chain attack.3CX products are widely used across the globe.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The victim ID is used \nthroughout both stages of Smooth Operator  and is included in both malware  beacon s and exfiltration .\n\nThe second -stage will not run without the presence of the .main_storage  file.\n\nSupply chain compromise  \nThe file libffmpeg.dylib  is a legitimate dependency of the 3CX software and is loaded when the \nsoftware is run .'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='Due to blocking the shellcode, we were unable to obtain the secondary payload used in this attack, so we cannot determine its capabilities or any post-exploitation activities carried out by the threat actor.Related Unit 42 TopicsThreat Brief,Supply ChainDetails of the IncidentThe 3CXDesktopApp supply chain attack began with threat actors introducing malicious libraries into the legitimate 3CXDesktopApp installation application, likely by including these libraries during the build process of 3CXDesktopApp.')]
[2025-04-08 11:21:46,541 INFO] ++ Indicators computed for action: Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware. The indicators are:
['Domain names may be registered for malicious purposes.', 'Files with unusual or generic names may be created.', 'URLs may point to malicious websites or servers.']
[2025-04-08 11:21:47,205 INFO] ++ Removed pre-condition: 
Access to the 3CX software source code or build environment.
, due to similarity with: 
The 3CX software development process is accessible.
 (tensor([[0.7853]]))
[2025-04-08 11:22:23,480 INFO] Processing step relative to tactic: persistence
[2025-04-08 11:22:23,481 INFO] + Processing action: Compromise Client Software Binary as used by the malware
[2025-04-08 11:22:25,119 INFO] ++ Embedding computed for: Compromise Client Software Binary as used by the malware. The vector has shape: (384,)
[2025-04-08 11:22:25,232 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [account manipulation]: tensor([[0.2045]])
[2025-04-08 11:22:25,340 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [account manipulation: additional cloud credentials]: tensor([[0.2527]])
[2025-04-08 11:22:25,437 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [account manipulation: additional email delegate permissions]: tensor([[0.2206]])
[2025-04-08 11:22:25,585 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [account manipulation: additional cloud roles]: tensor([[0.1961]])
[2025-04-08 11:22:25,825 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [account manipulation: ssh authorized keys]: tensor([[0.1052]])
[2025-04-08 11:22:25,962 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [account manipulation: device registration]: tensor([[0.1662]])
[2025-04-08 11:22:26,086 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [account manipulation: additional container cluster roles]: tensor([[0.2053]])
[2025-04-08 11:22:26,186 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [account manipulation: additional local or domain groups]: tensor([[0.2068]])
[2025-04-08 11:22:26,367 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [bits jobs]: tensor([[0.3154]])
[2025-04-08 11:22:26,560 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution]: tensor([[0.3329]])
[2025-04-08 11:22:26,703 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: registry run keys / startup folder]: tensor([[0.1432]])
[2025-04-08 11:22:26,911 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: authentication package]: tensor([[0.3025]])
[2025-04-08 11:22:27,070 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: time providers]: tensor([[0.2662]])
[2025-04-08 11:22:27,243 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: winlogon helper dll]: tensor([[0.2714]])
[2025-04-08 11:22:27,377 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: security support provider]: tensor([[0.2230]])
[2025-04-08 11:22:27,530 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: kernel modules and extensions]: tensor([[0.1983]])
[2025-04-08 11:22:27,735 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: re-opened applications]: tensor([[0.1784]])
[2025-04-08 11:22:27,938 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: lsass driver]: tensor([[0.2613]])
[2025-04-08 11:22:28,080 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: shortcut modification]: tensor([[0.2440]])
[2025-04-08 11:22:28,186 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: port monitors]: tensor([[0.1858]])
[2025-04-08 11:22:28,308 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: print processors]: tensor([[0.3136]])
[2025-04-08 11:22:28,483 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: xdg autostart entries]: tensor([[0.2671]])
[2025-04-08 11:22:28,663 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: active setup]: tensor([[0.1251]])
[2025-04-08 11:22:28,917 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon autostart execution: login items]: tensor([[0.1197]])
[2025-04-08 11:22:29,057 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon initialization scripts]: tensor([[0.1935]])
[2025-04-08 11:22:29,187 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon initialization scripts: logon script (windows)]: tensor([[0.0897]])
[2025-04-08 11:22:29,309 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon initialization scripts: login hook]: tensor([[0.0983]])
[2025-04-08 11:22:29,455 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon initialization scripts: network logon script]: tensor([[0.1255]])
[2025-04-08 11:22:29,647 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon initialization scripts: rc scripts]: tensor([[0.1674]])
[2025-04-08 11:22:29,848 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [boot or logon initialization scripts: startup items]: tensor([[0.1728]])
[2025-04-08 11:22:30,011 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [browser extensions]: tensor([[0.3399]])
[2025-04-08 11:22:30,120 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [compromise host software binary]: tensor([[0.5383]])
[2025-04-08 11:22:30,227 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create account]: tensor([[0.1836]])
[2025-04-08 11:22:30,337 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create account: local account]: tensor([[0.1477]])
[2025-04-08 11:22:30,427 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create account: domain account]: tensor([[0.0538]])
[2025-04-08 11:22:30,562 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create account: cloud account]: tensor([[0.1055]])
[2025-04-08 11:22:30,739 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create or modify system process]: tensor([[0.3978]])
[2025-04-08 11:22:30,978 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create or modify system process: launch agent]: tensor([[0.4283]])
[2025-04-08 11:22:31,099 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create or modify system process: systemd service]: tensor([[0.2901]])
[2025-04-08 11:22:31,220 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create or modify system process: windows service]: tensor([[0.3546]])
[2025-04-08 11:22:31,395 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create or modify system process: launch daemon]: tensor([[0.3649]])
[2025-04-08 11:22:31,493 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [create or modify system process: container service]: tensor([[0.2332]])
[2025-04-08 11:22:31,623 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution]: tensor([[0.2888]])
[2025-04-08 11:22:31,727 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: change default file association]: tensor([[0.3686]])
[2025-04-08 11:22:31,820 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: screensaver]: tensor([[0.3533]])
[2025-04-08 11:22:31,937 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: windows management instrumentation event subscription]: tensor([[0.2550]])
[2025-04-08 11:22:32,083 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: unix shell configuration modification]: tensor([[0.2409]])
[2025-04-08 11:22:32,179 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: trap]: tensor([[0.3080]])
[2025-04-08 11:22:32,306 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: lc_load_dylib addition]: tensor([[0.4616]])
[2025-04-08 11:22:32,393 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: netsh helper dll]: tensor([[0.3369]])
[2025-04-08 11:22:32,486 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: accessibility features]: tensor([[0.3448]])
[2025-04-08 11:22:32,582 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: appcert dlls]: tensor([[0.4389]])
[2025-04-08 11:22:32,694 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: appinit dlls]: tensor([[0.4891]])
[2025-04-08 11:22:32,839 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: application shimming]: tensor([[0.4284]])
[2025-04-08 11:22:32,980 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: image file execution options injection]: tensor([[0.3901]])
[2025-04-08 11:22:33,059 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: powershell profile]: tensor([[0.2601]])
[2025-04-08 11:22:33,147 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: emond]: tensor([[0.2302]])
[2025-04-08 11:22:33,249 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: component object model hijacking]: tensor([[0.4467]])
[2025-04-08 11:22:33,342 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: installer packages]: tensor([[0.3484]])
[2025-04-08 11:22:33,536 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [event triggered execution: udev rules]: tensor([[0.2190]])
[2025-04-08 11:22:33,645 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [external remote services]: tensor([[0.1943]])
[2025-04-08 11:22:33,773 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow]: tensor([[0.4803]])
[2025-04-08 11:22:33,910 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: dll search order hijacking]: tensor([[0.4859]])
[2025-04-08 11:22:34,067 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: dll side-loading]: tensor([[0.4528]])
[2025-04-08 11:22:34,186 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: dylib hijacking]: tensor([[0.4610]])
[2025-04-08 11:22:34,341 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: executable installer file permissions weakness]: tensor([[0.5365]])
[2025-04-08 11:22:34,471 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: dynamic linker hijacking]: tensor([[0.4690]])
[2025-04-08 11:22:34,553 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: path interception by path environment variable]: tensor([[0.4981]])
[2025-04-08 11:22:34,642 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: path interception by search order hijacking]: tensor([[0.5242]])
[2025-04-08 11:22:34,724 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: path interception by unquoted path]: tensor([[0.4273]])
[2025-04-08 11:22:34,848 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: services file permissions weakness]: tensor([[0.5067]])
[2025-04-08 11:22:35,003 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: services registry permissions weakness]: tensor([[0.4349]])
[2025-04-08 11:22:35,121 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: cor_profiler]: tensor([[0.4411]])
[2025-04-08 11:22:35,206 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: kernelcallbacktable]: tensor([[0.4960]])
[2025-04-08 11:22:35,333 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [hijack execution flow: appdomainmanager]: tensor([[0.3993]])
[2025-04-08 11:22:35,461 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [implant internal image]: tensor([[0.3507]])
[2025-04-08 11:22:35,700 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process]: tensor([[0.2982]])
[2025-04-08 11:22:35,798 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: domain controller authentication]: tensor([[0.2105]])
[2025-04-08 11:22:35,890 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: password filter dll]: tensor([[0.3979]])
[2025-04-08 11:22:36,040 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: pluggable authentication modules]: tensor([[0.1653]])
[2025-04-08 11:22:36,189 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: network device authentication]: tensor([[0.3219]])
[2025-04-08 11:22:36,295 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: reversible encryption]: tensor([[0.1977]])
[2025-04-08 11:22:36,385 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: multi-factor authentication]: tensor([[0.2189]])
[2025-04-08 11:22:36,500 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: hybrid identity]: tensor([[0.2673]])
[2025-04-08 11:22:36,719 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: network provider dll]: tensor([[0.3327]])
[2025-04-08 11:22:36,894 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [modify authentication process: conditional access policies]: tensor([[0.2124]])
[2025-04-08 11:22:36,983 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [office application startup]: tensor([[0.2714]])
[2025-04-08 11:22:37,093 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [office application startup: office template macros]: tensor([[0.3690]])
[2025-04-08 11:22:37,240 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [office application startup: office test]: tensor([[0.3245]])
[2025-04-08 11:22:37,346 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [office application startup: outlook forms]: tensor([[0.3254]])
[2025-04-08 11:22:37,479 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [office application startup: outlook home page]: tensor([[0.3905]])
[2025-04-08 11:22:37,670 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [office application startup: outlook rules]: tensor([[0.2618]])
[2025-04-08 11:22:37,924 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [office application startup: add-ins]: tensor([[0.3314]])
[2025-04-08 11:22:38,052 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [power settings]: tensor([[0.2644]])
[2025-04-08 11:22:38,177 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [pre-os boot]: tensor([[0.3973]])
[2025-04-08 11:22:38,305 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [pre-os boot: system firmware]: tensor([[0.2067]])
[2025-04-08 11:22:38,406 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [pre-os boot: component firmware]: tensor([[0.4632]])
[2025-04-08 11:22:38,585 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [pre-os boot: bootkit]: tensor([[0.3274]])
[2025-04-08 11:22:38,831 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [pre-os boot: rommonkit]: tensor([[0.4851]])
[2025-04-08 11:22:39,042 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [pre-os boot: tftp boot]: tensor([[0.2219]])
[2025-04-08 11:22:39,112 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [scheduled task/job]: tensor([[0.3053]])
[2025-04-08 11:22:39,224 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [scheduled task/job: at]: tensor([[0.3346]])
[2025-04-08 11:22:39,339 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [scheduled task/job: cron]: tensor([[0.3230]])
[2025-04-08 11:22:39,475 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [scheduled task/job: scheduled task]: tensor([[0.2925]])
[2025-04-08 11:22:39,586 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [scheduled task/job: systemd timers]: tensor([[0.1940]])
[2025-04-08 11:22:39,691 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [scheduled task/job: container orchestration job]: tensor([[0.2413]])
[2025-04-08 11:22:39,817 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [server software component]: tensor([[0.4359]])
[2025-04-08 11:22:39,921 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [server software component: sql stored procedures]: tensor([[0.2722]])
[2025-04-08 11:22:40,009 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [server software component: transport agent]: tensor([[0.2902]])
[2025-04-08 11:22:40,106 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [server software component: web shell]: tensor([[0.3139]])
[2025-04-08 11:22:40,212 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [server software component: iis components]: tensor([[0.3592]])
[2025-04-08 11:22:40,312 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [server software component: terminal services dll]: tensor([[0.3179]])
[2025-04-08 11:22:40,442 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [traffic signaling]: tensor([[0.2517]])
[2025-04-08 11:22:40,567 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [traffic signaling: port knocking]: tensor([[0.2146]])
[2025-04-08 11:22:40,724 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [traffic signaling: socket filters]: tensor([[0.2201]])
[2025-04-08 11:22:40,899 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [valid accounts]: tensor([[0.3369]])
[2025-04-08 11:22:41,056 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [valid accounts: default accounts]: tensor([[0.1340]])
[2025-04-08 11:22:41,196 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [valid accounts: domain accounts]: tensor([[0.1426]])
[2025-04-08 11:22:41,289 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [valid accounts: local accounts]: tensor([[0.2124]])
[2025-04-08 11:22:41,392 INFO] ++ Similarity between [Compromise Client Software Binary as used by the malware] and [valid accounts: cloud accounts]: tensor([[0.0850]])
[2025-04-08 11:22:41,411 INFO] ++ Scores: [('compromise host software binary', tensor([[0.5383]])), ('hijack execution flow: executable installer file permissions weakness', tensor([[0.5365]])), ('hijack execution flow: path interception by search order hijacking', tensor([[0.5242]])), ('hijack execution flow: services file permissions weakness', tensor([[0.5067]])), ('hijack execution flow: path interception by path environment variable', tensor([[0.4981]]))]
[2025-04-08 11:22:41,411 INFO] ++ Similar techniques found:
['compromise host software binary', 'hijack execution flow: executable installer file permissions weakness', 'hijack execution flow: path interception by search order hijacking', 'hijack execution flow: services file permissions weakness', 'hijack execution flow: path interception by path environment variable']
[2025-04-08 11:22:41,411 INFO] ++ Querying the QA model for action Compromise Client Software Binary as used by the malware with the following context:
compromise host software binary
hijack execution flow: executable installer file permissions weakness
hijack execution flow: path interception by search order hijacking
hijack execution flow: services file permissions weakness
hijack execution flow: path interception by path environment variable
[2025-04-08 11:22:42,521 INFO] ++ QA suggested technique: compromise host software binary
[2025-04-08 11:22:42,521 INFO] ++ Selected technique: compromise host software binary
[2025-04-08 11:22:46,543 INFO] ++ Refining the action: Compromise Client Software Binary as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='1db16ff2-0239-473f-ad5f-863483c2316b', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Persistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.\n\nDefence \nEvasion  T1140 Deobfuscate/Decode \nFiles or Information  Smooth Operator uses a custom algorithm to \nobfuscate data exfiltrated over the C2 channel.\n\nSmooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Tactic  ID Technique  Procedure  \nInitial \nAccess  T1195.001  Supply Chain \nCompromise: \nCompromise Software \nDependencies and \nDevelopment Tools  Smooth Operator is distributed via legitimate \nchannels as  trojanised,  signed and notarized \n3CX software.\n\nPersistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Universal \nbinaries allow developers to compile their software for multiple instruction sets by packaging multiple \ncompiled Mach -O binaries into one file .\n\nThe target device  will execute the  compatible binary.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The second -stage \nhas an adhoc signature and is not notarized.\n\nNote:  An adhoc signature is code  signed with the pseudo -identity ‘-’ and provides no ch ain of trust  or \ncertificate from the developer.3 \nThe trojanised component of the 3CX software package,  libffmpeg.dylib , is a universal binary  \nwhich contains binaries for both Intel and ARM macOS.')]
[2025-04-08 11:23:16,193 INFO] ++ Pre-conditions computed for action: Compromise Client Software Binary as used by the malware using 9 documents:
[Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(id='d66dca3e-03f1-464e-82c4-4f895aa04eff', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Tactic  ID Technique  Procedure  \nInitial \nAccess  T1195.001  Supply Chain \nCompromise: \nCompromise Software \nDependencies and \nDevelopment Tools  Smooth Operator is distributed via legitimate \nchannels as  trojanised,  signed and notarized \n3CX software.\n\nPersistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='3 https://developer.apple.com/documentation/security/seccodesignatureflags/1397793 -adhoc    \n \n \nPersistence  \nDue to the fact Smooth Operator abuses a legitimate component of the 3CX software package to \nlaunch  itself, it is pers isted as part of the 3CX software  and run s every time libffmpeg.dylib  is \nloaded.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The victim ID is used \nthroughout both stages of Smooth Operator  and is included in both malware  beacon s and exfiltration .\n\nThe second -stage will not run without the presence of the .main_storage  file.\n\nSupply chain compromise  \nThe file libffmpeg.dylib  is a legitimate dependency of the 3CX software and is loaded when the \nsoftware is run .'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• Smooth Operator was distributed to victims as part of the 3CX supply  chain attack.\n\n• The infected  software package  was signed by 3CX  and notarized by Apple .\n\n• Malicious code inserted into a dynamic library (dylib) packaged with the 3CX software \ndownloads and runs a second -stage payload.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Persistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.\n\nDefence \nEvasion  T1140 Deobfuscate/Decode \nFiles or Information  Smooth Operator uses a custom algorithm to \nobfuscate data exfiltrated over the C2 channel.\n\nSmooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.')]
[2025-04-08 11:23:31,419 INFO] ++ Post-conditions computed for action: Compromise Client Software Binary as used by the malware using 9 documents:
[Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='10ff8b9a-bf7b-49ac-bc0c-7c28d3388c0c', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Tasking Commands  \nThe below table highlights the taskable functionality supported by Smooth Operator.\n\nSee the \n‘Communications (Tasking) ’ section for semantics on how they are implemented in the command and \ncontrol protocol.\n\nCommand ID  Description  \n0x3849 (8I)  Run a  payload.\n\nWrite s tasking data into  the file UpdateAgent , in the 3CX \ndirectory.'), Document(id='adf8761d-c6e4-4b44-bf70-83b15a600b5f', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Execution of the rest of the functionality in the second -\nstage  continue s in the child process.\n\nThe UpdateAgent  binary delete s itself  from disk immediately \nafter execution .\n\nSmooth Operator  writes configuration files and further  executable stages  to the legitimate 3CX \ninstallation directory in an attempt to appear legitima te.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Tactic  ID Technique  Procedure  \nInitial \nAccess  T1195.001  Supply Chain \nCompromise: \nCompromise Software \nDependencies and \nDevelopment Tools  Smooth Operator is distributed via legitimate \nchannels as  trojanised,  signed and notarized \n3CX software.\n\nPersistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='3 https://developer.apple.com/documentation/security/seccodesignatureflags/1397793 -adhoc    \n \n \nPersistence  \nDue to the fact Smooth Operator abuses a legitimate component of the 3CX software package to \nlaunch  itself, it is pers isted as part of the 3CX software  and run s every time libffmpeg.dylib  is \nloaded.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The victim ID is used \nthroughout both stages of Smooth Operator  and is included in both malware  beacon s and exfiltration .\n\nThe second -stage will not run without the presence of the .main_storage  file.\n\nSupply chain compromise  \nThe file libffmpeg.dylib  is a legitimate dependency of the 3CX software and is loaded when the \nsoftware is run .'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• Smooth Operator was distributed to victims as part of the 3CX supply  chain attack.\n\n• The infected  software package  was signed by 3CX  and notarized by Apple .\n\n• Malicious code inserted into a dynamic library (dylib) packaged with the 3CX software \ndownloads and runs a second -stage payload.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Persistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.\n\nDefence \nEvasion  T1140 Deobfuscate/Decode \nFiles or Information  Smooth Operator uses a custom algorithm to \nobfuscate data exfiltrated over the C2 channel.\n\nSmooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.')]
[2025-04-08 11:23:34,178 INFO] ++ Indicators computed for action: Compromise Client Software Binary as used by the malware. The indicators are:
['Filename: UpdateAgent', 'Filename: .main_storage']
[2025-04-08 11:23:36,092 INFO] ++ Removed pre-condition: 
The infected libffmpeg.dylib file is loaded by the 3CX software.
, due to similarity with: 
The malicious code has been inserted into the libffmpeg.dylib file.
 (tensor([[0.8031]]))
[2025-04-08 11:24:08,007 INFO] Processing step relative to tactic: defense-evasion
[2025-04-08 11:24:08,007 INFO] + Processing action: Deobfuscate/Decode Files or Information as used by the malware
[2025-04-08 11:24:09,634 INFO] ++ Embedding computed for: Deobfuscate/Decode Files or Information as used by the malware. The vector has shape: (384,)
[2025-04-08 11:24:09,816 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [abuse elevation control mechanism]: tensor([[0.2722]])
[2025-04-08 11:24:09,938 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [abuse elevation control mechanism: setuid and setgid]: tensor([[0.2479]])
[2025-04-08 11:24:10,029 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [abuse elevation control mechanism: bypass user account control]: tensor([[0.2936]])
[2025-04-08 11:24:10,095 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [abuse elevation control mechanism: sudo and sudo caching]: tensor([[0.2767]])
[2025-04-08 11:24:10,170 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [abuse elevation control mechanism: elevated execution with prompt]: tensor([[0.3428]])
[2025-04-08 11:24:10,242 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [abuse elevation control mechanism: temporary elevated cloud access]: tensor([[0.2154]])
[2025-04-08 11:24:10,316 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [abuse elevation control mechanism: tcc manipulation]: tensor([[0.4383]])
[2025-04-08 11:24:10,381 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [access token manipulation]: tensor([[0.3783]])
[2025-04-08 11:24:10,459 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [access token manipulation: token impersonation/theft]: tensor([[0.3197]])
[2025-04-08 11:24:10,515 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [access token manipulation: create process with token]: tensor([[0.2793]])
[2025-04-08 11:24:10,586 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [access token manipulation: make and impersonate token]: tensor([[0.2293]])
[2025-04-08 11:24:10,679 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [access token manipulation: parent pid spoofing]: tensor([[0.2658]])
[2025-04-08 11:24:10,768 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [access token manipulation: sid-history injection]: tensor([[0.3183]])
[2025-04-08 11:24:10,864 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [bits jobs]: tensor([[0.4176]])
[2025-04-08 11:24:10,941 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [build image on host]: tensor([[0.1811]])
[2025-04-08 11:24:11,024 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [debugger evasion]: tensor([[0.5458]])
[2025-04-08 11:24:11,091 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [deobfuscate/decode files or information]: tensor([[0.8420]])
[2025-04-08 11:24:11,170 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [deploy container]: tensor([[0.2437]])
[2025-04-08 11:24:11,234 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [direct volume access]: tensor([[0.5021]])
[2025-04-08 11:24:11,344 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [domain or tenant policy modification]: tensor([[0.1425]])
[2025-04-08 11:24:11,440 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [domain or tenant policy modification: group policy modification]: tensor([[0.1888]])
[2025-04-08 11:24:11,580 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [domain or tenant policy modification: trust modification]: tensor([[0.1002]])
[2025-04-08 11:24:11,706 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [execution guardrails]: tensor([[0.3635]])
[2025-04-08 11:24:11,823 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [execution guardrails: environmental keying]: tensor([[0.4528]])
[2025-04-08 11:24:11,908 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [execution guardrails: mutual exclusion]: tensor([[0.3929]])
[2025-04-08 11:24:12,011 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [exploitation for defense evasion]: tensor([[0.4420]])
[2025-04-08 11:24:12,095 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [file and directory permissions modification]: tensor([[0.4008]])
[2025-04-08 11:24:12,191 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [file and directory permissions modification: windows file and directory permissions modification]: tensor([[0.4084]])
[2025-04-08 11:24:12,265 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [file and directory permissions modification: linux and mac file and directory permissions modification]: tensor([[0.3522]])
[2025-04-08 11:24:12,367 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts]: tensor([[0.5086]])
[2025-04-08 11:24:12,560 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: hidden files and directories]: tensor([[0.4392]])
[2025-04-08 11:24:12,723 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: hidden users]: tensor([[0.2536]])
[2025-04-08 11:24:12,878 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: hidden window]: tensor([[0.4390]])
[2025-04-08 11:24:13,044 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: ntfs file attributes]: tensor([[0.4557]])
[2025-04-08 11:24:13,165 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: hidden file system]: tensor([[0.5071]])
[2025-04-08 11:24:13,276 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: run virtual instance]: tensor([[0.3958]])
[2025-04-08 11:24:13,347 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: vba stomping]: tensor([[0.4846]])
[2025-04-08 11:24:13,480 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: email hiding rules]: tensor([[0.2867]])
[2025-04-08 11:24:13,663 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: resource forking]: tensor([[0.4112]])
[2025-04-08 11:24:13,797 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: process argument spoofing]: tensor([[0.4189]])
[2025-04-08 11:24:13,898 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: ignore process interrupts]: tensor([[0.3759]])
[2025-04-08 11:24:14,044 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hide artifacts: file/path exclusions]: tensor([[0.4963]])
[2025-04-08 11:24:14,134 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow]: tensor([[0.4831]])
[2025-04-08 11:24:14,228 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: dll search order hijacking]: tensor([[0.5170]])
[2025-04-08 11:24:14,356 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: dll side-loading]: tensor([[0.4331]])
[2025-04-08 11:24:14,497 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: dylib hijacking]: tensor([[0.3926]])
[2025-04-08 11:24:14,681 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: executable installer file permissions weakness]: tensor([[0.4677]])
[2025-04-08 11:24:14,876 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: dynamic linker hijacking]: tensor([[0.3914]])
[2025-04-08 11:24:15,007 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: path interception by path environment variable]: tensor([[0.4154]])
[2025-04-08 11:24:15,093 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: path interception by search order hijacking]: tensor([[0.5153]])
[2025-04-08 11:24:15,186 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: path interception by unquoted path]: tensor([[0.4161]])
[2025-04-08 11:24:15,301 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: services file permissions weakness]: tensor([[0.4704]])
[2025-04-08 11:24:15,412 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: services registry permissions weakness]: tensor([[0.3927]])
[2025-04-08 11:24:15,523 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: cor_profiler]: tensor([[0.3762]])
[2025-04-08 11:24:15,695 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: kernelcallbacktable]: tensor([[0.4287]])
[2025-04-08 11:24:15,937 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [hijack execution flow: appdomainmanager]: tensor([[0.3326]])
[2025-04-08 11:24:16,049 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses]: tensor([[0.4145]])
[2025-04-08 11:24:16,142 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: disable or modify tools]: tensor([[0.4276]])
[2025-04-08 11:24:16,238 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: disable windows event logging]: tensor([[0.4483]])
[2025-04-08 11:24:16,332 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: impair command history logging]: tensor([[0.3828]])
[2025-04-08 11:24:16,424 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: disable or modify system firewall]: tensor([[0.3918]])
[2025-04-08 11:24:16,567 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: indicator blocking]: tensor([[0.4072]])
[2025-04-08 11:24:16,664 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: disable or modify cloud firewall]: tensor([[0.2968]])
[2025-04-08 11:24:16,856 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: disable or modify cloud logs]: tensor([[0.3403]])
[2025-04-08 11:24:17,041 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: safe mode boot]: tensor([[0.2877]])
[2025-04-08 11:24:17,122 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: downgrade attack]: tensor([[0.3956]])
[2025-04-08 11:24:17,217 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: spoof security alerting]: tensor([[0.3097]])
[2025-04-08 11:24:17,363 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impair defenses: disable or modify linux audit system]: tensor([[0.4128]])
[2025-04-08 11:24:17,581 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [impersonation]: tensor([[0.2832]])
[2025-04-08 11:24:17,692 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal]: tensor([[0.4116]])
[2025-04-08 11:24:17,851 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: clear windows event logs]: tensor([[0.2752]])
[2025-04-08 11:24:18,031 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: clear linux or mac system logs]: tensor([[0.2467]])
[2025-04-08 11:24:18,112 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: clear command history]: tensor([[0.2732]])
[2025-04-08 11:24:18,204 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: file deletion]: tensor([[0.5078]])
[2025-04-08 11:24:18,291 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: network share connection removal]: tensor([[0.3155]])
[2025-04-08 11:24:18,367 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: timestomp]: tensor([[0.4496]])
[2025-04-08 11:24:18,464 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: clear network connection history and configurations]: tensor([[0.3673]])
[2025-04-08 11:24:18,597 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: clear mailbox data]: tensor([[0.2919]])
[2025-04-08 11:24:18,710 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: clear persistence]: tensor([[0.3675]])
[2025-04-08 11:24:18,803 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indicator removal: relocate malware]: tensor([[0.5252]])
[2025-04-08 11:24:18,961 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [indirect command execution]: tensor([[0.3359]])
[2025-04-08 11:24:19,058 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading]: tensor([[0.4220]])
[2025-04-08 11:24:19,141 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: invalid code signature]: tensor([[0.3640]])
[2025-04-08 11:24:19,251 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: right-to-left override]: tensor([[0.2612]])
[2025-04-08 11:24:19,377 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: rename system utilities]: tensor([[0.3464]])
[2025-04-08 11:24:19,448 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: masquerade task or service]: tensor([[0.2182]])
[2025-04-08 11:24:19,536 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: match legitimate name or location]: tensor([[0.4336]])
[2025-04-08 11:24:19,604 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: space after filename]: tensor([[0.4487]])
[2025-04-08 11:24:19,694 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: double file extension]: tensor([[0.3743]])
[2025-04-08 11:24:19,786 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: masquerade file type]: tensor([[0.4556]])
[2025-04-08 11:24:19,866 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: break process trees]: tensor([[0.4057]])
[2025-04-08 11:24:19,956 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [masquerading: masquerade account name]: tensor([[0.1335]])
[2025-04-08 11:24:20,063 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process]: tensor([[0.3194]])
[2025-04-08 11:24:20,126 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: domain controller authentication]: tensor([[0.1736]])
[2025-04-08 11:24:20,197 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: password filter dll]: tensor([[0.3668]])
[2025-04-08 11:24:20,272 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: pluggable authentication modules]: tensor([[0.2118]])
[2025-04-08 11:24:20,339 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: network device authentication]: tensor([[0.2741]])
[2025-04-08 11:24:20,458 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: reversible encryption]: tensor([[0.2881]])
[2025-04-08 11:24:20,582 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: multi-factor authentication]: tensor([[0.2209]])
[2025-04-08 11:24:20,729 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: hybrid identity]: tensor([[0.2427]])
[2025-04-08 11:24:20,868 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: network provider dll]: tensor([[0.2796]])
[2025-04-08 11:24:20,968 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify authentication process: conditional access policies]: tensor([[0.2738]])
[2025-04-08 11:24:21,078 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify cloud compute infrastructure]: tensor([[0.2808]])
[2025-04-08 11:24:21,175 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify cloud compute infrastructure: create snapshot]: tensor([[0.2128]])
[2025-04-08 11:24:21,264 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify cloud compute infrastructure: create cloud instance]: tensor([[0.1127]])
[2025-04-08 11:24:21,364 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify cloud compute infrastructure: delete cloud instance]: tensor([[0.2853]])
[2025-04-08 11:24:21,478 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify cloud compute infrastructure: revert cloud instance]: tensor([[0.2561]])
[2025-04-08 11:24:21,604 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify cloud compute infrastructure: modify cloud compute configurations]: tensor([[0.2342]])
[2025-04-08 11:24:21,736 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify cloud resource hierarchy]: tensor([[0.3007]])
[2025-04-08 11:24:21,963 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify registry]: tensor([[0.3222]])
[2025-04-08 11:24:22,059 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify system image]: tensor([[0.3760]])
[2025-04-08 11:24:22,142 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify system image: patch system image]: tensor([[0.4047]])
[2025-04-08 11:24:22,230 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [modify system image: downgrade system image]: tensor([[0.3696]])
[2025-04-08 11:24:22,370 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [network boundary bridging]: tensor([[0.2742]])
[2025-04-08 11:24:22,479 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [network boundary bridging: network address translation traversal]: tensor([[0.3276]])
[2025-04-08 11:24:22,625 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information]: tensor([[0.7465]])
[2025-04-08 11:24:22,799 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: binary padding]: tensor([[0.6894]])
[2025-04-08 11:24:22,985 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: software packing]: tensor([[0.5964]])
[2025-04-08 11:24:23,098 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: steganography]: tensor([[0.5995]])
[2025-04-08 11:24:23,187 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: compile after delivery]: tensor([[0.6614]])
[2025-04-08 11:24:23,276 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: indicator removal from tools]: tensor([[0.5692]])
[2025-04-08 11:24:23,389 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: html smuggling]: tensor([[0.5892]])
[2025-04-08 11:24:23,583 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: dynamic api resolution]: tensor([[0.7065]])
[2025-04-08 11:24:23,713 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: stripped payloads]: tensor([[0.6151]])
[2025-04-08 11:24:23,905 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: embedded payloads]: tensor([[0.6130]])
[2025-04-08 11:24:24,041 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: command obfuscation]: tensor([[0.6366]])
[2025-04-08 11:24:24,149 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: fileless storage]: tensor([[0.5949]])
[2025-04-08 11:24:24,231 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: lnk icon smuggling]: tensor([[0.4604]])
[2025-04-08 11:24:24,352 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: encrypted/encoded file]: tensor([[0.7583]])
[2025-04-08 11:24:24,548 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [obfuscated files or information: polymorphic code]: tensor([[0.6408]])
[2025-04-08 11:24:24,755 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [plist file modification]: tensor([[0.4271]])
[2025-04-08 11:24:24,907 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [pre-os boot]: tensor([[0.3567]])
[2025-04-08 11:24:25,047 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [pre-os boot: system firmware]: tensor([[0.2852]])
[2025-04-08 11:24:25,140 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [pre-os boot: component firmware]: tensor([[0.4356]])
[2025-04-08 11:24:25,219 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [pre-os boot: bootkit]: tensor([[0.3054]])
[2025-04-08 11:24:25,286 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [pre-os boot: rommonkit]: tensor([[0.3349]])
[2025-04-08 11:24:25,377 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [pre-os boot: tftp boot]: tensor([[0.2404]])
[2025-04-08 11:24:25,558 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection]: tensor([[0.4738]])
[2025-04-08 11:24:25,724 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: dynamic-link library injection]: tensor([[0.4538]])
[2025-04-08 11:24:25,861 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: portable executable injection]: tensor([[0.4710]])
[2025-04-08 11:24:26,054 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: thread execution hijacking]: tensor([[0.4912]])
[2025-04-08 11:24:26,147 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: asynchronous procedure call]: tensor([[0.3961]])
[2025-04-08 11:24:26,234 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: thread local storage]: tensor([[0.4802]])
[2025-04-08 11:24:26,349 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: ptrace system calls]: tensor([[0.4324]])
[2025-04-08 11:24:26,442 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: proc memory]: tensor([[0.5378]])
[2025-04-08 11:24:26,608 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: extra window memory injection]: tensor([[0.4573]])
[2025-04-08 11:24:26,718 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: process hollowing]: tensor([[0.4379]])
[2025-04-08 11:24:26,800 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: process doppelgänging]: tensor([[0.4705]])
[2025-04-08 11:24:26,894 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: vdso hijacking]: tensor([[0.4629]])
[2025-04-08 11:24:26,998 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [process injection: listplanting]: tensor([[0.4904]])
[2025-04-08 11:24:27,090 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [reflective code loading]: tensor([[0.4451]])
[2025-04-08 11:24:27,219 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [rogue domain controller]: tensor([[0.2860]])
[2025-04-08 11:24:27,319 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [rootkit]: tensor([[0.4569]])
[2025-04-08 11:24:27,434 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [subvert trust controls]: tensor([[0.4015]])
[2025-04-08 11:24:27,570 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [subvert trust controls: gatekeeper bypass]: tensor([[0.4270]])
[2025-04-08 11:24:27,747 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [subvert trust controls: code signing]: tensor([[0.3451]])
[2025-04-08 11:24:27,961 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [subvert trust controls: sip and trust provider hijacking]: tensor([[0.3733]])
[2025-04-08 11:24:28,112 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [subvert trust controls: install root certificate]: tensor([[0.2772]])
[2025-04-08 11:24:28,280 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [subvert trust controls: mark-of-the-web bypass]: tensor([[0.4520]])
[2025-04-08 11:24:28,404 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [subvert trust controls: code signing policy modification]: tensor([[0.3430]])
[2025-04-08 11:24:28,598 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution]: tensor([[0.4086]])
[2025-04-08 11:24:28,738 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: compiled html file]: tensor([[0.4800]])
[2025-04-08 11:24:28,931 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: control panel]: tensor([[0.4035]])
[2025-04-08 11:24:29,064 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: cmstp]: tensor([[0.3398]])
[2025-04-08 11:24:29,231 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: installutil]: tensor([[0.2985]])
[2025-04-08 11:24:29,357 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: mshta]: tensor([[0.3994]])
[2025-04-08 11:24:29,484 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: msiexec]: tensor([[0.3449]])
[2025-04-08 11:24:29,674 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: odbcconf]: tensor([[0.2831]])
[2025-04-08 11:24:29,820 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: regsvcs/regasm]: tensor([[0.4027]])
[2025-04-08 11:24:30,028 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: regsvr32]: tensor([[0.4370]])
[2025-04-08 11:24:30,181 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: rundll32]: tensor([[0.3996]])
[2025-04-08 11:24:30,334 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: verclsid]: tensor([[0.3140]])
[2025-04-08 11:24:30,462 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: mavinject]: tensor([[0.3729]])
[2025-04-08 11:24:30,614 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: mmc]: tensor([[0.3753]])
[2025-04-08 11:24:30,826 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system binary proxy execution: electron applications]: tensor([[0.2799]])
[2025-04-08 11:24:30,927 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system script proxy execution]: tensor([[0.4119]])
[2025-04-08 11:24:31,105 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system script proxy execution: pubprn]: tensor([[0.2021]])
[2025-04-08 11:24:31,222 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [system script proxy execution: syncappvpublishingserver]: tensor([[0.3399]])
[2025-04-08 11:24:31,358 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [template injection]: tensor([[0.4107]])
[2025-04-08 11:24:31,532 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [traffic signaling]: tensor([[0.3031]])
[2025-04-08 11:24:31,769 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [traffic signaling: port knocking]: tensor([[0.2808]])
[2025-04-08 11:24:31,963 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [traffic signaling: socket filters]: tensor([[0.3604]])
[2025-04-08 11:24:32,061 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [trusted developer utilities proxy execution]: tensor([[0.3896]])
[2025-04-08 11:24:32,188 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [trusted developer utilities proxy execution: msbuild]: tensor([[0.3740]])
[2025-04-08 11:24:32,368 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [trusted developer utilities proxy execution: clickonce]: tensor([[0.3657]])
[2025-04-08 11:24:32,616 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [unused/unsupported cloud regions]: tensor([[0.2459]])
[2025-04-08 11:24:32,847 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [use alternate authentication material]: tensor([[0.2299]])
[2025-04-08 11:24:33,044 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [use alternate authentication material: application access token]: tensor([[0.2337]])
[2025-04-08 11:24:33,133 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [use alternate authentication material: pass the hash]: tensor([[0.1062]])
[2025-04-08 11:24:33,240 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [use alternate authentication material: pass the ticket]: tensor([[0.0525]])
[2025-04-08 11:24:33,359 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [use alternate authentication material: web session cookie]: tensor([[0.1541]])
[2025-04-08 11:24:33,479 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [valid accounts]: tensor([[0.3143]])
[2025-04-08 11:24:33,642 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [valid accounts: default accounts]: tensor([[0.1202]])
[2025-04-08 11:24:33,832 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [valid accounts: domain accounts]: tensor([[0.1099]])
[2025-04-08 11:24:34,005 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [valid accounts: local accounts]: tensor([[0.1582]])
[2025-04-08 11:24:34,112 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [valid accounts: cloud accounts]: tensor([[0.0930]])
[2025-04-08 11:24:34,225 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [virtualization/sandbox evasion]: tensor([[0.4179]])
[2025-04-08 11:24:34,409 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [virtualization/sandbox evasion: system checks]: tensor([[0.4227]])
[2025-04-08 11:24:34,632 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [virtualization/sandbox evasion: user activity based checks]: tensor([[0.4192]])
[2025-04-08 11:24:34,883 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [virtualization/sandbox evasion: time based evasion]: tensor([[0.3746]])
[2025-04-08 11:24:35,064 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [weaken encryption]: tensor([[0.3832]])
[2025-04-08 11:24:35,280 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [weaken encryption: reduce key space]: tensor([[0.4282]])
[2025-04-08 11:24:35,398 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [weaken encryption: disable crypto hardware]: tensor([[0.5012]])
[2025-04-08 11:24:35,505 INFO] ++ Similarity between [Deobfuscate/Decode Files or Information as used by the malware] and [xsl script processing]: tensor([[0.3016]])
[2025-04-08 11:24:35,532 INFO] ++ Scores: [('deobfuscate/decode files or information', tensor([[0.8420]])), ('obfuscated files or information: encrypted/encoded file', tensor([[0.7583]])), ('obfuscated files or information', tensor([[0.7465]])), ('obfuscated files or information: dynamic api resolution', tensor([[0.7065]])), ('obfuscated files or information: binary padding', tensor([[0.6894]]))]
[2025-04-08 11:24:35,532 INFO] ++ Similar techniques found:
['deobfuscate/decode files or information', 'obfuscated files or information: encrypted/encoded file', 'obfuscated files or information', 'obfuscated files or information: dynamic api resolution', 'obfuscated files or information: binary padding']
[2025-04-08 11:24:35,532 INFO] ++ Querying the QA model for action Deobfuscate/Decode Files or Information as used by the malware with the following context:
deobfuscate/decode files or information
obfuscated files or information: encrypted/encoded file
obfuscated files or information
obfuscated files or information: dynamic api resolution
obfuscated files or information: binary padding
[2025-04-08 11:24:36,738 INFO] ++ QA suggested technique: deobfuscate/decode files or information
[2025-04-08 11:24:36,738 INFO] ++ Selected technique: deobfuscate/decode files or information
[2025-04-08 11:24:40,883 INFO] ++ Refining the action: Deobfuscate/Decode Files or Information as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Persistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.\n\nDefence \nEvasion  T1140 Deobfuscate/Decode \nFiles or Information  Smooth Operator uses a custom algorithm to \nobfuscate data exfiltrated over the C2 channel.\n\nSmooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='For example, the sleep timestamp varies depending on the following conditions: First, it checks if the manifest file is present, as well as if it is using a specified date.\n\nIf the file is not present or if it is using the specified date, the timestamp will generate a random number and use the formularand() % 1800000 + current date + 604800(604,800 is seven days).'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='?0F[3 -6]3D01900000} // C2 \ncodes \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and al l of them  \n} \n \nDescription  This rule identifies algorithms used by the malware developer to generate \nrandom time values in Smooth Operator.')]
[2025-04-08 11:25:18,045 INFO] ++ Pre-conditions computed for action: Deobfuscate/Decode Files or Information as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(id='21fa9905-b3c9-4551-a4ee-a85d21ffec8f', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='More information will be provided as this blog is updated.AppData\\Local\\Google\\Chrome\\User DataAppData\\Local\\Microsoft\\Edge\\User DataAppData\\Local\\BraveSoftware\\Brave-Browser\\User DataAppData\\Roaming\\Mozilla\\Firefox\\ProfilesBrowserTarget informationChromeHistoryEdgeHistoryBraveHistoryFirefoxplaces.sqliteTable 1.\n\nThe targeted section of each browser.'), Document(id='7c18b793-0cc5-4ae0-a0e4-87707afc232f', metadata={'source': './documents\\other\\IoC_AL03_0330.csv'}, page_content='hash;11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Persistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.\n\nDefence \nEvasion  T1140 Deobfuscate/Decode \nFiles or Information  Smooth Operator uses a custom algorithm to \nobfuscate data exfiltrated over the C2 channel.\n\nSmooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Write s tasking data into  the file UpdateAgent , in the 3CX \ndirectory.\n\nThis file is then executed via popen  using the generated command  line \n‘"/path/to/UpdateAgent " >/dev/null 2>&1 ’.\n\nNo checks are carried out by \nthe malware on the payload written to disk, such as whether it is a valid Macho -O.\n\n0x8001 Smooth Operator  will sleep  for an arbitrary time.')]
[2025-04-08 11:25:35,168 INFO] ++ Post-conditions computed for action: Deobfuscate/Decode Files or Information as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(id='21fa9905-b3c9-4551-a4ee-a85d21ffec8f', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='More information will be provided as this blog is updated.AppData\\Local\\Google\\Chrome\\User DataAppData\\Local\\Microsoft\\Edge\\User DataAppData\\Local\\BraveSoftware\\Brave-Browser\\User DataAppData\\Roaming\\Mozilla\\Firefox\\ProfilesBrowserTarget informationChromeHistoryEdgeHistoryBraveHistoryFirefoxplaces.sqliteTable 1.\n\nThe targeted section of each browser.'), Document(id='7c18b793-0cc5-4ae0-a0e4-87707afc232f', metadata={'source': './documents\\other\\IoC_AL03_0330.csv'}, page_content='hash;11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Persistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.\n\nDefence \nEvasion  T1140 Deobfuscate/Decode \nFiles or Information  Smooth Operator uses a custom algorithm to \nobfuscate data exfiltrated over the C2 channel.\n\nSmooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Write s tasking data into  the file UpdateAgent , in the 3CX \ndirectory.\n\nThis file is then executed via popen  using the generated command  line \n‘"/path/to/UpdateAgent " >/dev/null 2>&1 ’.\n\nNo checks are carried out by \nthe malware on the payload written to disk, such as whether it is a valid Macho -O.\n\n0x8001 Smooth Operator  will sleep  for an arbitrary time.')]
[2025-04-08 11:25:38,116 INFO] ++ Indicators computed for action: Deobfuscate/Decode Files or Information as used by the malware. The indicators are:
['Filename: UpdateAgent', 'Filename: .main_storage']
[2025-04-08 11:25:39,454 INFO] ++ Removed pre-condition: 
The custom algorithm used by Smooth Operator is available within the malware.
, due to similarity with: 
Smooth Operator uses a custom algorithm to obfuscate data.
 (tensor([[0.7465]]))
[2025-04-08 11:26:16,650 INFO] + Processing action: Indicator Removal: File Deletion as used by the malware
[2025-04-08 11:26:18,574 INFO] ++ Embedding computed for: Indicator Removal: File Deletion as used by the malware. The vector has shape: (384,)
[2025-04-08 11:26:18,706 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [abuse elevation control mechanism]: tensor([[0.2799]])
[2025-04-08 11:26:18,938 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [abuse elevation control mechanism: setuid and setgid]: tensor([[0.3105]])
[2025-04-08 11:26:19,077 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [abuse elevation control mechanism: bypass user account control]: tensor([[0.3039]])
[2025-04-08 11:26:19,264 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [abuse elevation control mechanism: sudo and sudo caching]: tensor([[0.3542]])
[2025-04-08 11:26:19,377 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [abuse elevation control mechanism: elevated execution with prompt]: tensor([[0.3716]])
[2025-04-08 11:26:19,462 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [abuse elevation control mechanism: temporary elevated cloud access]: tensor([[0.2600]])
[2025-04-08 11:26:19,664 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [abuse elevation control mechanism: tcc manipulation]: tensor([[0.3528]])
[2025-04-08 11:26:19,791 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [access token manipulation]: tensor([[0.2847]])
[2025-04-08 11:26:19,916 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [access token manipulation: token impersonation/theft]: tensor([[0.2373]])
[2025-04-08 11:26:20,065 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [access token manipulation: create process with token]: tensor([[0.2197]])
[2025-04-08 11:26:20,160 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [access token manipulation: make and impersonate token]: tensor([[0.1532]])
[2025-04-08 11:26:20,274 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [access token manipulation: parent pid spoofing]: tensor([[0.2604]])
[2025-04-08 11:26:20,391 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [access token manipulation: sid-history injection]: tensor([[0.2717]])
[2025-04-08 11:26:20,651 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [bits jobs]: tensor([[0.3569]])
[2025-04-08 11:26:20,803 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [build image on host]: tensor([[0.1618]])
[2025-04-08 11:26:20,910 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [debugger evasion]: tensor([[0.4020]])
[2025-04-08 11:26:21,030 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [deobfuscate/decode files or information]: tensor([[0.4165]])
[2025-04-08 11:26:21,121 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [deploy container]: tensor([[0.2190]])
[2025-04-08 11:26:21,207 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [direct volume access]: tensor([[0.3813]])
[2025-04-08 11:26:21,316 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [domain or tenant policy modification]: tensor([[0.1475]])
[2025-04-08 11:26:21,406 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [domain or tenant policy modification: group policy modification]: tensor([[0.2406]])
[2025-04-08 11:26:21,492 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [domain or tenant policy modification: trust modification]: tensor([[0.0966]])
[2025-04-08 11:26:21,634 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [execution guardrails]: tensor([[0.3462]])
[2025-04-08 11:26:21,783 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [execution guardrails: environmental keying]: tensor([[0.3026]])
[2025-04-08 11:26:21,953 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [execution guardrails: mutual exclusion]: tensor([[0.4116]])
[2025-04-08 11:26:22,034 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [exploitation for defense evasion]: tensor([[0.3589]])
[2025-04-08 11:26:22,112 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [file and directory permissions modification]: tensor([[0.2210]])
[2025-04-08 11:26:22,214 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [file and directory permissions modification: windows file and directory permissions modification]: tensor([[0.2514]])
[2025-04-08 11:26:22,297 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [file and directory permissions modification: linux and mac file and directory permissions modification]: tensor([[0.2373]])
[2025-04-08 11:26:22,394 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts]: tensor([[0.5197]])
[2025-04-08 11:26:22,580 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: hidden files and directories]: tensor([[0.4483]])
[2025-04-08 11:26:22,767 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: hidden users]: tensor([[0.2637]])
[2025-04-08 11:26:22,984 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: hidden window]: tensor([[0.4199]])
[2025-04-08 11:26:23,104 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: ntfs file attributes]: tensor([[0.4175]])
[2025-04-08 11:26:23,264 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: hidden file system]: tensor([[0.4334]])
[2025-04-08 11:26:23,398 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: run virtual instance]: tensor([[0.3582]])
[2025-04-08 11:26:23,580 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: vba stomping]: tensor([[0.3364]])
[2025-04-08 11:26:23,773 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: email hiding rules]: tensor([[0.2029]])
[2025-04-08 11:26:23,985 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: resource forking]: tensor([[0.4613]])
[2025-04-08 11:26:24,123 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: process argument spoofing]: tensor([[0.3686]])
[2025-04-08 11:26:24,205 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: ignore process interrupts]: tensor([[0.3995]])
[2025-04-08 11:26:24,335 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hide artifacts: file/path exclusions]: tensor([[0.4989]])
[2025-04-08 11:26:24,438 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow]: tensor([[0.4466]])
[2025-04-08 11:26:24,630 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: dll search order hijacking]: tensor([[0.4422]])
[2025-04-08 11:26:24,859 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: dll side-loading]: tensor([[0.3562]])
[2025-04-08 11:26:25,082 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: dylib hijacking]: tensor([[0.3150]])
[2025-04-08 11:26:25,221 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: executable installer file permissions weakness]: tensor([[0.4564]])
[2025-04-08 11:26:25,327 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: dynamic linker hijacking]: tensor([[0.3407]])
[2025-04-08 11:26:25,468 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: path interception by path environment variable]: tensor([[0.3965]])
[2025-04-08 11:26:25,700 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: path interception by search order hijacking]: tensor([[0.4497]])
[2025-04-08 11:26:25,906 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: path interception by unquoted path]: tensor([[0.3754]])
[2025-04-08 11:26:26,077 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: services file permissions weakness]: tensor([[0.4607]])
[2025-04-08 11:26:26,251 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: services registry permissions weakness]: tensor([[0.3634]])
[2025-04-08 11:26:26,374 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: cor_profiler]: tensor([[0.2938]])
[2025-04-08 11:26:26,486 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: kernelcallbacktable]: tensor([[0.4262]])
[2025-04-08 11:26:26,815 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [hijack execution flow: appdomainmanager]: tensor([[0.3175]])
[2025-04-08 11:26:27,058 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses]: tensor([[0.3534]])
[2025-04-08 11:26:27,184 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: disable or modify tools]: tensor([[0.3624]])
[2025-04-08 11:26:27,299 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: disable windows event logging]: tensor([[0.3445]])
[2025-04-08 11:26:27,402 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: impair command history logging]: tensor([[0.2975]])
[2025-04-08 11:26:27,486 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: disable or modify system firewall]: tensor([[0.3154]])
[2025-04-08 11:26:27,623 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: indicator blocking]: tensor([[0.4291]])
[2025-04-08 11:26:27,752 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: disable or modify cloud firewall]: tensor([[0.1973]])
[2025-04-08 11:26:28,001 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: disable or modify cloud logs]: tensor([[0.2393]])
[2025-04-08 11:26:28,135 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: safe mode boot]: tensor([[0.3218]])
[2025-04-08 11:26:28,251 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: downgrade attack]: tensor([[0.2818]])
[2025-04-08 11:26:28,360 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: spoof security alerting]: tensor([[0.2492]])
[2025-04-08 11:26:28,467 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impair defenses: disable or modify linux audit system]: tensor([[0.3593]])
[2025-04-08 11:26:28,565 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [impersonation]: tensor([[0.1550]])
[2025-04-08 11:26:28,767 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal]: tensor([[0.6026]])
[2025-04-08 11:26:29,001 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: clear windows event logs]: tensor([[0.4936]])
[2025-04-08 11:26:29,106 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: clear linux or mac system logs]: tensor([[0.5125]])
[2025-04-08 11:26:29,246 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: clear command history]: tensor([[0.5450]])
[2025-04-08 11:26:29,357 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: file deletion]: tensor([[0.6939]])
[2025-04-08 11:26:29,478 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: network share connection removal]: tensor([[0.5592]])
[2025-04-08 11:26:29,619 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: timestomp]: tensor([[0.5340]])
[2025-04-08 11:26:29,749 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: clear network connection history and configurations]: tensor([[0.5250]])
[2025-04-08 11:26:29,922 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: clear mailbox data]: tensor([[0.4150]])
[2025-04-08 11:26:30,078 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: clear persistence]: tensor([[0.5792]])
[2025-04-08 11:26:30,193 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indicator removal: relocate malware]: tensor([[0.7313]])
[2025-04-08 11:26:30,360 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [indirect command execution]: tensor([[0.2526]])
[2025-04-08 11:26:30,476 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading]: tensor([[0.3601]])
[2025-04-08 11:26:30,632 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: invalid code signature]: tensor([[0.2735]])
[2025-04-08 11:26:30,787 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: right-to-left override]: tensor([[0.2394]])
[2025-04-08 11:26:31,008 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: rename system utilities]: tensor([[0.4046]])
[2025-04-08 11:26:31,123 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: masquerade task or service]: tensor([[0.2745]])
[2025-04-08 11:26:31,283 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: match legitimate name or location]: tensor([[0.3580]])
[2025-04-08 11:26:31,424 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: space after filename]: tensor([[0.3671]])
[2025-04-08 11:26:31,556 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: double file extension]: tensor([[0.2523]])
[2025-04-08 11:26:31,768 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: masquerade file type]: tensor([[0.2668]])
[2025-04-08 11:26:31,912 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: break process trees]: tensor([[0.4079]])
[2025-04-08 11:26:32,046 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [masquerading: masquerade account name]: tensor([[0.1537]])
[2025-04-08 11:26:32,199 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process]: tensor([[0.2659]])
[2025-04-08 11:26:32,308 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: domain controller authentication]: tensor([[0.1182]])
[2025-04-08 11:26:32,429 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: password filter dll]: tensor([[0.2688]])
[2025-04-08 11:26:32,579 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: pluggable authentication modules]: tensor([[0.0998]])
[2025-04-08 11:26:32,875 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: network device authentication]: tensor([[0.2573]])
[2025-04-08 11:26:33,039 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: reversible encryption]: tensor([[0.2087]])
[2025-04-08 11:26:33,164 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: multi-factor authentication]: tensor([[0.2066]])
[2025-04-08 11:26:33,312 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: hybrid identity]: tensor([[0.2139]])
[2025-04-08 11:26:33,428 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: network provider dll]: tensor([[0.2764]])
[2025-04-08 11:26:33,558 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify authentication process: conditional access policies]: tensor([[0.2211]])
[2025-04-08 11:26:33,758 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify cloud compute infrastructure]: tensor([[0.2616]])
[2025-04-08 11:26:33,968 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify cloud compute infrastructure: create snapshot]: tensor([[0.2099]])
[2025-04-08 11:26:34,098 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify cloud compute infrastructure: create cloud instance]: tensor([[0.1178]])
[2025-04-08 11:26:34,172 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify cloud compute infrastructure: delete cloud instance]: tensor([[0.3736]])
[2025-04-08 11:26:34,273 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify cloud compute infrastructure: revert cloud instance]: tensor([[0.2912]])
[2025-04-08 11:26:34,380 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify cloud compute infrastructure: modify cloud compute configurations]: tensor([[0.1815]])
[2025-04-08 11:26:34,595 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify cloud resource hierarchy]: tensor([[0.2704]])
[2025-04-08 11:26:34,820 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify registry]: tensor([[0.3164]])
[2025-04-08 11:26:34,993 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify system image]: tensor([[0.3946]])
[2025-04-08 11:26:35,112 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify system image: patch system image]: tensor([[0.4219]])
[2025-04-08 11:26:35,208 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [modify system image: downgrade system image]: tensor([[0.3771]])
[2025-04-08 11:26:35,355 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [network boundary bridging]: tensor([[0.2107]])
[2025-04-08 11:26:35,483 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [network boundary bridging: network address translation traversal]: tensor([[0.2311]])
[2025-04-08 11:26:35,576 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information]: tensor([[0.4331]])
[2025-04-08 11:26:35,673 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: binary padding]: tensor([[0.4746]])
[2025-04-08 11:26:35,805 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: software packing]: tensor([[0.3433]])
[2025-04-08 11:26:35,916 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: steganography]: tensor([[0.2674]])
[2025-04-08 11:26:36,023 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: compile after delivery]: tensor([[0.3193]])
[2025-04-08 11:26:36,096 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: indicator removal from tools]: tensor([[0.6373]])
[2025-04-08 11:26:36,212 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: html smuggling]: tensor([[0.3166]])
[2025-04-08 11:26:36,290 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: dynamic api resolution]: tensor([[0.4724]])
[2025-04-08 11:26:36,359 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: stripped payloads]: tensor([[0.3566]])
[2025-04-08 11:26:36,446 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: embedded payloads]: tensor([[0.4203]])
[2025-04-08 11:26:36,551 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: command obfuscation]: tensor([[0.3689]])
[2025-04-08 11:26:36,668 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: fileless storage]: tensor([[0.4387]])
[2025-04-08 11:26:36,767 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: lnk icon smuggling]: tensor([[0.3892]])
[2025-04-08 11:26:36,892 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: encrypted/encoded file]: tensor([[0.4064]])
[2025-04-08 11:26:37,025 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [obfuscated files or information: polymorphic code]: tensor([[0.3698]])
[2025-04-08 11:26:37,118 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [plist file modification]: tensor([[0.3299]])
[2025-04-08 11:26:37,198 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [pre-os boot]: tensor([[0.4603]])
[2025-04-08 11:26:37,288 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [pre-os boot: system firmware]: tensor([[0.3210]])
[2025-04-08 11:26:37,366 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [pre-os boot: component firmware]: tensor([[0.4627]])
[2025-04-08 11:26:37,443 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [pre-os boot: bootkit]: tensor([[0.4078]])
[2025-04-08 11:26:37,545 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [pre-os boot: rommonkit]: tensor([[0.4685]])
[2025-04-08 11:26:37,646 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [pre-os boot: tftp boot]: tensor([[0.3014]])
[2025-04-08 11:26:37,706 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection]: tensor([[0.3553]])
[2025-04-08 11:26:37,775 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: dynamic-link library injection]: tensor([[0.3593]])
[2025-04-08 11:26:37,946 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: portable executable injection]: tensor([[0.3884]])
[2025-04-08 11:26:38,066 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: thread execution hijacking]: tensor([[0.4106]])
[2025-04-08 11:26:38,146 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: asynchronous procedure call]: tensor([[0.3323]])
[2025-04-08 11:26:38,243 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: thread local storage]: tensor([[0.3690]])
[2025-04-08 11:26:38,363 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: ptrace system calls]: tensor([[0.3721]])
[2025-04-08 11:26:38,489 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: proc memory]: tensor([[0.4286]])
[2025-04-08 11:26:38,612 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: extra window memory injection]: tensor([[0.3687]])
[2025-04-08 11:26:38,755 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: process hollowing]: tensor([[0.3795]])
[2025-04-08 11:26:38,929 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: process doppelgänging]: tensor([[0.3817]])
[2025-04-08 11:26:39,050 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: vdso hijacking]: tensor([[0.3942]])
[2025-04-08 11:26:39,111 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [process injection: listplanting]: tensor([[0.3887]])
[2025-04-08 11:26:39,169 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [reflective code loading]: tensor([[0.3801]])
[2025-04-08 11:26:39,228 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [rogue domain controller]: tensor([[0.1741]])
[2025-04-08 11:26:39,284 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [rootkit]: tensor([[0.4521]])
[2025-04-08 11:26:39,345 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [subvert trust controls]: tensor([[0.3616]])
[2025-04-08 11:26:39,428 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [subvert trust controls: gatekeeper bypass]: tensor([[0.3880]])
[2025-04-08 11:26:39,527 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [subvert trust controls: code signing]: tensor([[0.2431]])
[2025-04-08 11:26:39,626 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [subvert trust controls: sip and trust provider hijacking]: tensor([[0.2867]])
[2025-04-08 11:26:39,769 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [subvert trust controls: install root certificate]: tensor([[0.1727]])
[2025-04-08 11:26:39,913 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [subvert trust controls: mark-of-the-web bypass]: tensor([[0.4431]])
[2025-04-08 11:26:40,030 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [subvert trust controls: code signing policy modification]: tensor([[0.2080]])
[2025-04-08 11:26:40,109 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution]: tensor([[0.3918]])
[2025-04-08 11:26:40,222 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: compiled html file]: tensor([[0.3399]])
[2025-04-08 11:26:40,337 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: control panel]: tensor([[0.3866]])
[2025-04-08 11:26:40,452 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: cmstp]: tensor([[0.2657]])
[2025-04-08 11:26:40,605 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: installutil]: tensor([[0.3576]])
[2025-04-08 11:26:40,705 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: mshta]: tensor([[0.3644]])
[2025-04-08 11:26:40,850 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: msiexec]: tensor([[0.4172]])
[2025-04-08 11:26:41,060 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: odbcconf]: tensor([[0.2128]])
[2025-04-08 11:26:41,205 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: regsvcs/regasm]: tensor([[0.3125]])
[2025-04-08 11:26:41,332 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: regsvr32]: tensor([[0.4182]])
[2025-04-08 11:26:41,481 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: rundll32]: tensor([[0.3412]])
[2025-04-08 11:26:41,697 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: verclsid]: tensor([[0.3438]])
[2025-04-08 11:26:41,804 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: mavinject]: tensor([[0.3757]])
[2025-04-08 11:26:42,046 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: mmc]: tensor([[0.3302]])
[2025-04-08 11:26:42,152 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system binary proxy execution: electron applications]: tensor([[0.1893]])
[2025-04-08 11:26:42,249 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system script proxy execution]: tensor([[0.3791]])
[2025-04-08 11:26:42,393 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system script proxy execution: pubprn]: tensor([[0.2002]])
[2025-04-08 11:26:42,590 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [system script proxy execution: syncappvpublishingserver]: tensor([[0.3266]])
[2025-04-08 11:26:42,792 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [template injection]: tensor([[0.2103]])
[2025-04-08 11:26:42,930 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [traffic signaling]: tensor([[0.2338]])
[2025-04-08 11:26:43,060 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [traffic signaling: port knocking]: tensor([[0.1683]])
[2025-04-08 11:26:43,174 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [traffic signaling: socket filters]: tensor([[0.1871]])
[2025-04-08 11:26:43,284 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [trusted developer utilities proxy execution]: tensor([[0.2694]])
[2025-04-08 11:26:43,424 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [trusted developer utilities proxy execution: msbuild]: tensor([[0.2798]])
[2025-04-08 11:26:43,639 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [trusted developer utilities proxy execution: clickonce]: tensor([[0.3571]])
[2025-04-08 11:26:43,861 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [unused/unsupported cloud regions]: tensor([[0.2862]])
[2025-04-08 11:26:44,028 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [use alternate authentication material]: tensor([[0.1686]])
[2025-04-08 11:26:44,122 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [use alternate authentication material: application access token]: tensor([[0.1660]])
[2025-04-08 11:26:44,225 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [use alternate authentication material: pass the hash]: tensor([[0.0448]])
[2025-04-08 11:26:44,337 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [use alternate authentication material: pass the ticket]: tensor([[0.0539]])
[2025-04-08 11:26:44,452 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [use alternate authentication material: web session cookie]: tensor([[0.1052]])
[2025-04-08 11:26:44,653 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [valid accounts]: tensor([[0.2807]])
[2025-04-08 11:26:44,863 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [valid accounts: default accounts]: tensor([[0.1247]])
[2025-04-08 11:26:45,057 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [valid accounts: domain accounts]: tensor([[0.1203]])
[2025-04-08 11:26:45,152 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [valid accounts: local accounts]: tensor([[0.1643]])
[2025-04-08 11:26:45,249 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [valid accounts: cloud accounts]: tensor([[0.1104]])
[2025-04-08 11:26:45,412 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [virtualization/sandbox evasion]: tensor([[0.3809]])
[2025-04-08 11:26:45,577 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [virtualization/sandbox evasion: system checks]: tensor([[0.3981]])
[2025-04-08 11:26:45,787 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [virtualization/sandbox evasion: user activity based checks]: tensor([[0.3893]])
[2025-04-08 11:26:45,964 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [virtualization/sandbox evasion: time based evasion]: tensor([[0.3284]])
[2025-04-08 11:26:46,119 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [weaken encryption]: tensor([[0.1902]])
[2025-04-08 11:26:46,214 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [weaken encryption: reduce key space]: tensor([[0.1582]])
[2025-04-08 11:26:46,320 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [weaken encryption: disable crypto hardware]: tensor([[0.3011]])
[2025-04-08 11:26:46,436 INFO] ++ Similarity between [Indicator Removal: File Deletion as used by the malware] and [xsl script processing]: tensor([[0.1254]])
[2025-04-08 11:26:46,460 INFO] ++ Scores: [('indicator removal: relocate malware', tensor([[0.7313]])), ('indicator removal: file deletion', tensor([[0.6939]])), ('obfuscated files or information: indicator removal from tools', tensor([[0.6373]])), ('indicator removal', tensor([[0.6026]])), ('indicator removal: clear persistence', tensor([[0.5792]]))]
[2025-04-08 11:26:46,460 INFO] ++ Similar techniques found:
['indicator removal: relocate malware', 'indicator removal: file deletion', 'obfuscated files or information: indicator removal from tools', 'indicator removal', 'indicator removal: clear persistence']
[2025-04-08 11:26:46,460 INFO] ++ Querying the QA model for action Indicator Removal: File Deletion as used by the malware with the following context:
indicator removal: relocate malware
indicator removal: file deletion
obfuscated files or information: indicator removal from tools
indicator removal
indicator removal: clear persistence
[2025-04-08 11:26:47,641 INFO] ++ QA suggested technique: indicator removal: file deletion
[2025-04-08 11:26:47,641 INFO] ++ Selected technique: indicator removal: file deletion
[2025-04-08 11:26:51,738 INFO] ++ Refining the action: Indicator Removal: File Deletion as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='adf8761d-c6e4-4b44-bf70-83b15a600b5f', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Execution of the rest of the functionality in the second -\nstage  continue s in the child process.\n\nThe UpdateAgent  binary delete s itself  from disk immediately \nafter execution .\n\nSmooth Operator  writes configuration files and further  executable stages  to the legitimate 3CX \ninstallation directory in an attempt to appear legitima te.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='Due to blocking the shellcode, we were unable to obtain the secondary payload used in this attack, so we cannot determine its capabilities or any post-exploitation activities carried out by the threat actor.Related Unit 42 TopicsThreat Brief,Supply ChainDetails of the IncidentThe 3CXDesktopApp supply chain attack began with threat actors introducing malicious libraries into the legitimate 3CXDesktopApp installation application, likely by including these libraries during the build process of 3CXDesktopApp.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='The former comes as a Windows Installer File (.msi) and the latter comes as an Apple Disk Image file (.dmg).\n\nFigure 1 shows a diagram of the overall process.Figure 1.\n\nInstallation process for malicious 3CXDesktopApp installer for Windows.On a Windows system, the MSI installer extracts several files and runs3CXDesktopApp.exe, which loads a malicious library file namedffmpeg.dll.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='We observed 5,796 of these events across 1,832 unique systems between March 9-30, 2023.Note all XDR customers were protected from zero-day with no upgrade needed.Due to the blocking of the execution of the shellcode, we were unable to obtain the secondary payload of this attack that would contain the functionality needed by the threat actor to carry out any additional activities.To determine the prevalence of 3CX products, we created a fingerprint of their publicly accessible applications and scanned the internet with our Xpanse product.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content=']com/phonesystemTable 1.\n\nIcon files hosted at GitHub account used by payload to locate C2 URL.It should also be noted that the.icofiles originally appeared on this GitHub repository Dec. 7, 2022, as shown in the git logs in Figure 2 below.\n\nThis provides additional insight into the timeline as to when this attack originated.Figure 2.')]
[2025-04-08 11:27:14,338 INFO] ++ Pre-conditions computed for action: Indicator Removal: File Deletion as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(id='21fa9905-b3c9-4551-a4ee-a85d21ffec8f', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='More information will be provided as this blog is updated.AppData\\Local\\Google\\Chrome\\User DataAppData\\Local\\Microsoft\\Edge\\User DataAppData\\Local\\BraveSoftware\\Brave-Browser\\User DataAppData\\Roaming\\Mozilla\\Firefox\\ProfilesBrowserTarget informationChromeHistoryEdgeHistoryBraveHistoryFirefoxplaces.sqliteTable 1.\n\nThe targeted section of each browser.'), Document(id='7c18b793-0cc5-4ae0-a0e4-87707afc232f', metadata={'source': './documents\\other\\IoC_AL03_0330.csv'}, page_content='hash;11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Execution of the rest of the functionality in the second -\nstage  continue s in the child process.\n\nThe UpdateAgent  binary delete s itself  from disk immediately \nafter execution .\n\nSmooth Operator  writes configuration files and further  executable stages  to the legitimate 3CX \ninstallation directory in an attempt to appear legitima te.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Smooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.\n\nT1070.004  Indicator Removal: \nFile Deletion  Smooth Operator ’s second -stage delete s itself \nfrom disk immediately on exec ution.\n\nT1497.003  Virtualization/Sandbox \nEvasion: Time Based \nEvasion  Smooth Operator sleep s for, at minimum , a \nweek before beaconing.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='This provides additional insight into the timeline as to when this attack originated.Figure 2.\n\nLogs indicating earliest modifications to GitHub repository.After the.icofiles are downloaded, parsed and subsequently decrypted to extract the next stage URL, the malware will perform an HTTPS request to it.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Error displayed if "rundll32.exe" is used as the DLL loaderThis indicates that the sample must be loaded by a specific application to proceed to its malicious routine.ICONIC Stealer then checks for a file namedconfig.jsonunder the folder "3CXDesktopApp.\n\n"Figure 7.')]
[2025-04-08 11:27:29,524 INFO] ++ Post-conditions computed for action: Indicator Removal: File Deletion as used by the malware using 9 documents:
[Document(id='a54adcd5-c433-4c6b-b44e-928cfc041173', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='e5a744dc-dc18-41b4-8ba3-0802383fe3fa', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Execution of the rest of the functionality in the second -\nstage  continue s in the child process.\n\nThe UpdateAgent  binary delete s itself  from disk immediately \nafter execution .\n\nSmooth Operator  writes configuration files and further  executable stages  to the legitimate 3CX \ninstallation directory in an attempt to appear legitima te.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Smooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.\n\nT1070.004  Indicator Removal: \nFile Deletion  Smooth Operator ’s second -stage delete s itself \nfrom disk immediately on exec ution.\n\nT1497.003  Virtualization/Sandbox \nEvasion: Time Based \nEvasion  Smooth Operator sleep s for, at minimum , a \nweek before beaconing.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Error displayed if "rundll32.exe" is used as the DLL loaderThis indicates that the sample must be loaded by a specific application to proceed to its malicious routine.ICONIC Stealer then checks for a file namedconfig.jsonunder the folder "3CXDesktopApp.\n\n"Figure 7.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• If the C2 is any other  URL in the list , Smooth Operator will action the tasking and reset the \nbeacon error count , write the next time to beacon to the .main_storage  file, sleep and then \nbeacon again.\n\nWhen actioning invalid tasking:  \n• If the C2 is the 3CX URL, Smooth Operator will exit immediate ly.')]
[2025-04-08 11:27:31,917 INFO] ++ Indicators computed for action: Indicator Removal: File Deletion as used by the malware. The indicators are:
['Filename: .main_storage']
[2025-04-08 11:27:33,339 INFO] ++ Removed pre-condition: 
The malware has located its own executable file on disk.
, due to similarity with: 
The malware's code contains the functionality to delete itself from disk.
 (tensor([[0.7125]]))
[2025-04-08 11:28:00,406 INFO] + Processing action: Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware
[2025-04-08 11:28:02,282 INFO] ++ Embedding computed for: Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware. The vector has shape: (384,)
[2025-04-08 11:28:02,373 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [abuse elevation control mechanism]: tensor([[0.3488]])
[2025-04-08 11:28:02,579 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [abuse elevation control mechanism: setuid and setgid]: tensor([[0.3175]])
[2025-04-08 11:28:02,733 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [abuse elevation control mechanism: bypass user account control]: tensor([[0.3093]])
[2025-04-08 11:28:02,976 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [abuse elevation control mechanism: sudo and sudo caching]: tensor([[0.3305]])
[2025-04-08 11:28:03,102 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [abuse elevation control mechanism: elevated execution with prompt]: tensor([[0.4218]])
[2025-04-08 11:28:03,228 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [abuse elevation control mechanism: temporary elevated cloud access]: tensor([[0.3528]])
[2025-04-08 11:28:03,384 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [abuse elevation control mechanism: tcc manipulation]: tensor([[0.3624]])
[2025-04-08 11:28:03,484 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [access token manipulation]: tensor([[0.3449]])
[2025-04-08 11:28:03,670 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [access token manipulation: token impersonation/theft]: tensor([[0.3243]])
[2025-04-08 11:28:03,869 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [access token manipulation: create process with token]: tensor([[0.2967]])
[2025-04-08 11:28:04,053 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [access token manipulation: make and impersonate token]: tensor([[0.2769]])
[2025-04-08 11:28:04,198 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [access token manipulation: parent pid spoofing]: tensor([[0.3143]])
[2025-04-08 11:28:04,331 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [access token manipulation: sid-history injection]: tensor([[0.3240]])
[2025-04-08 11:28:04,458 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [bits jobs]: tensor([[0.3376]])
[2025-04-08 11:28:04,573 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [build image on host]: tensor([[0.3797]])
[2025-04-08 11:28:04,640 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [debugger evasion]: tensor([[0.5537]])
[2025-04-08 11:28:04,734 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [deobfuscate/decode files or information]: tensor([[0.4685]])
[2025-04-08 11:28:04,885 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [deploy container]: tensor([[0.4793]])
[2025-04-08 11:28:05,061 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [direct volume access]: tensor([[0.3057]])
[2025-04-08 11:28:05,208 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [domain or tenant policy modification]: tensor([[0.2998]])
[2025-04-08 11:28:05,295 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [domain or tenant policy modification: group policy modification]: tensor([[0.2607]])
[2025-04-08 11:28:05,487 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [domain or tenant policy modification: trust modification]: tensor([[0.2675]])
[2025-04-08 11:28:05,653 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [execution guardrails]: tensor([[0.4984]])
[2025-04-08 11:28:05,759 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [execution guardrails: environmental keying]: tensor([[0.4834]])
[2025-04-08 11:28:05,972 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [execution guardrails: mutual exclusion]: tensor([[0.4955]])
[2025-04-08 11:28:06,135 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [exploitation for defense evasion]: tensor([[0.5676]])
[2025-04-08 11:28:06,266 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [file and directory permissions modification]: tensor([[0.2372]])
[2025-04-08 11:28:06,377 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [file and directory permissions modification: windows file and directory permissions modification]: tensor([[0.2380]])
[2025-04-08 11:28:06,579 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [file and directory permissions modification: linux and mac file and directory permissions modification]: tensor([[0.2008]])
[2025-04-08 11:28:06,754 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts]: tensor([[0.5572]])
[2025-04-08 11:28:06,885 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: hidden files and directories]: tensor([[0.2709]])
[2025-04-08 11:28:07,061 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: hidden users]: tensor([[0.3873]])
[2025-04-08 11:28:07,228 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: hidden window]: tensor([[0.4962]])
[2025-04-08 11:28:07,387 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: ntfs file attributes]: tensor([[0.2428]])
[2025-04-08 11:28:07,594 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: hidden file system]: tensor([[0.3186]])
[2025-04-08 11:28:07,895 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: run virtual instance]: tensor([[0.6589]])
[2025-04-08 11:28:08,000 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: vba stomping]: tensor([[0.4584]])
[2025-04-08 11:28:08,113 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: email hiding rules]: tensor([[0.3148]])
[2025-04-08 11:28:08,283 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: resource forking]: tensor([[0.4323]])
[2025-04-08 11:28:08,402 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: process argument spoofing]: tensor([[0.3498]])
[2025-04-08 11:28:08,577 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: ignore process interrupts]: tensor([[0.3282]])
[2025-04-08 11:28:08,745 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hide artifacts: file/path exclusions]: tensor([[0.4587]])
[2025-04-08 11:28:08,976 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow]: tensor([[0.5741]])
[2025-04-08 11:28:09,087 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: dll search order hijacking]: tensor([[0.4922]])
[2025-04-08 11:28:09,209 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: dll side-loading]: tensor([[0.4360]])
[2025-04-08 11:28:09,424 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: dylib hijacking]: tensor([[0.3988]])
[2025-04-08 11:28:09,598 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: executable installer file permissions weakness]: tensor([[0.4663]])
[2025-04-08 11:28:09,759 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: dynamic linker hijacking]: tensor([[0.4588]])
[2025-04-08 11:28:09,902 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: path interception by path environment variable]: tensor([[0.4751]])
[2025-04-08 11:28:10,042 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: path interception by search order hijacking]: tensor([[0.5053]])
[2025-04-08 11:28:10,161 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: path interception by unquoted path]: tensor([[0.4087]])
[2025-04-08 11:28:10,304 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: services file permissions weakness]: tensor([[0.4874]])
[2025-04-08 11:28:10,443 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: services registry permissions weakness]: tensor([[0.4465]])
[2025-04-08 11:28:10,731 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: cor_profiler]: tensor([[0.3817]])
[2025-04-08 11:28:10,909 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: kernelcallbacktable]: tensor([[0.4862]])
[2025-04-08 11:28:11,162 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [hijack execution flow: appdomainmanager]: tensor([[0.4201]])
[2025-04-08 11:28:11,242 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses]: tensor([[0.5127]])
[2025-04-08 11:28:11,362 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: disable or modify tools]: tensor([[0.4680]])
[2025-04-08 11:28:11,565 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: disable windows event logging]: tensor([[0.4889]])
[2025-04-08 11:28:11,782 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: impair command history logging]: tensor([[0.3960]])
[2025-04-08 11:28:11,962 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: disable or modify system firewall]: tensor([[0.4489]])
[2025-04-08 11:28:12,090 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: indicator blocking]: tensor([[0.4657]])
[2025-04-08 11:28:12,251 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: disable or modify cloud firewall]: tensor([[0.4124]])
[2025-04-08 11:28:12,337 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: disable or modify cloud logs]: tensor([[0.4611]])
[2025-04-08 11:28:12,420 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: safe mode boot]: tensor([[0.3975]])
[2025-04-08 11:28:12,585 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: downgrade attack]: tensor([[0.5108]])
[2025-04-08 11:28:12,795 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: spoof security alerting]: tensor([[0.3952]])
[2025-04-08 11:28:12,936 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impair defenses: disable or modify linux audit system]: tensor([[0.4405]])
[2025-04-08 11:28:13,066 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [impersonation]: tensor([[0.2911]])
[2025-04-08 11:28:13,175 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal]: tensor([[0.3879]])
[2025-04-08 11:28:13,319 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: clear windows event logs]: tensor([[0.3633]])
[2025-04-08 11:28:13,422 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: clear linux or mac system logs]: tensor([[0.3117]])
[2025-04-08 11:28:13,512 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: clear command history]: tensor([[0.2908]])
[2025-04-08 11:28:13,779 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: file deletion]: tensor([[0.4760]])
[2025-04-08 11:28:14,012 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: network share connection removal]: tensor([[0.2244]])
[2025-04-08 11:28:14,114 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: timestomp]: tensor([[0.3459]])
[2025-04-08 11:28:14,262 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: clear network connection history and configurations]: tensor([[0.4078]])
[2025-04-08 11:28:14,385 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: clear mailbox data]: tensor([[0.2638]])
[2025-04-08 11:28:14,495 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: clear persistence]: tensor([[0.4037]])
[2025-04-08 11:28:14,592 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indicator removal: relocate malware]: tensor([[0.4760]])
[2025-04-08 11:28:14,780 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [indirect command execution]: tensor([[0.2608]])
[2025-04-08 11:28:14,983 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading]: tensor([[0.4720]])
[2025-04-08 11:28:15,100 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: invalid code signature]: tensor([[0.4091]])
[2025-04-08 11:28:15,248 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: right-to-left override]: tensor([[0.1673]])
[2025-04-08 11:28:15,442 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: rename system utilities]: tensor([[0.3798]])
[2025-04-08 11:28:15,580 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: masquerade task or service]: tensor([[0.3466]])
[2025-04-08 11:28:15,708 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: match legitimate name or location]: tensor([[0.4759]])
[2025-04-08 11:28:15,890 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: space after filename]: tensor([[0.3527]])
[2025-04-08 11:28:16,060 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: double file extension]: tensor([[0.2268]])
[2025-04-08 11:28:16,204 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: masquerade file type]: tensor([[0.2726]])
[2025-04-08 11:28:16,321 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: break process trees]: tensor([[0.4606]])
[2025-04-08 11:28:16,484 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [masquerading: masquerade account name]: tensor([[0.1767]])
[2025-04-08 11:28:16,743 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process]: tensor([[0.3809]])
[2025-04-08 11:28:16,839 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: domain controller authentication]: tensor([[0.3071]])
[2025-04-08 11:28:16,938 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: password filter dll]: tensor([[0.3754]])
[2025-04-08 11:28:17,089 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: pluggable authentication modules]: tensor([[0.2697]])
[2025-04-08 11:28:17,242 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: network device authentication]: tensor([[0.3976]])
[2025-04-08 11:28:17,406 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: reversible encryption]: tensor([[0.3782]])
[2025-04-08 11:28:17,542 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: multi-factor authentication]: tensor([[0.3253]])
[2025-04-08 11:28:17,821 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: hybrid identity]: tensor([[0.3975]])
[2025-04-08 11:28:17,992 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: network provider dll]: tensor([[0.3126]])
[2025-04-08 11:28:18,079 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify authentication process: conditional access policies]: tensor([[0.3846]])
[2025-04-08 11:28:18,236 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify cloud compute infrastructure]: tensor([[0.4260]])
[2025-04-08 11:28:18,360 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify cloud compute infrastructure: create snapshot]: tensor([[0.3831]])
[2025-04-08 11:28:18,509 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify cloud compute infrastructure: create cloud instance]: tensor([[0.2888]])
[2025-04-08 11:28:18,628 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify cloud compute infrastructure: delete cloud instance]: tensor([[0.4325]])
[2025-04-08 11:28:18,816 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify cloud compute infrastructure: revert cloud instance]: tensor([[0.4633]])
[2025-04-08 11:28:19,037 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify cloud compute infrastructure: modify cloud compute configurations]: tensor([[0.3554]])
[2025-04-08 11:28:19,130 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify cloud resource hierarchy]: tensor([[0.4715]])
[2025-04-08 11:28:19,225 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify registry]: tensor([[0.3208]])
[2025-04-08 11:28:19,387 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify system image]: tensor([[0.4547]])
[2025-04-08 11:28:19,482 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify system image: patch system image]: tensor([[0.5191]])
[2025-04-08 11:28:19,702 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [modify system image: downgrade system image]: tensor([[0.4969]])
[2025-04-08 11:28:19,922 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [network boundary bridging]: tensor([[0.3293]])
[2025-04-08 11:28:20,089 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [network boundary bridging: network address translation traversal]: tensor([[0.4244]])
[2025-04-08 11:28:20,221 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information]: tensor([[0.5056]])
[2025-04-08 11:28:20,352 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: binary padding]: tensor([[0.4862]])
[2025-04-08 11:28:20,519 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: software packing]: tensor([[0.5785]])
[2025-04-08 11:28:20,771 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: steganography]: tensor([[0.3187]])
[2025-04-08 11:28:20,934 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: compile after delivery]: tensor([[0.4323]])
[2025-04-08 11:28:21,097 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: indicator removal from tools]: tensor([[0.4392]])
[2025-04-08 11:28:21,247 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: html smuggling]: tensor([[0.3158]])
[2025-04-08 11:28:21,322 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: dynamic api resolution]: tensor([[0.5228]])
[2025-04-08 11:28:21,430 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: stripped payloads]: tensor([[0.3838]])
[2025-04-08 11:28:21,601 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: embedded payloads]: tensor([[0.4382]])
[2025-04-08 11:28:21,802 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: command obfuscation]: tensor([[0.3811]])
[2025-04-08 11:28:22,011 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: fileless storage]: tensor([[0.3749]])
[2025-04-08 11:28:22,143 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: lnk icon smuggling]: tensor([[0.3136]])
[2025-04-08 11:28:22,312 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: encrypted/encoded file]: tensor([[0.4221]])
[2025-04-08 11:28:22,422 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [obfuscated files or information: polymorphic code]: tensor([[0.5021]])
[2025-04-08 11:28:22,588 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [plist file modification]: tensor([[0.3563]])
[2025-04-08 11:28:22,775 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [pre-os boot]: tensor([[0.4879]])
[2025-04-08 11:28:22,955 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [pre-os boot: system firmware]: tensor([[0.3195]])
[2025-04-08 11:28:23,074 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [pre-os boot: component firmware]: tensor([[0.5347]])
[2025-04-08 11:28:23,238 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [pre-os boot: bootkit]: tensor([[0.4324]])
[2025-04-08 11:28:23,327 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [pre-os boot: rommonkit]: tensor([[0.4810]])
[2025-04-08 11:28:23,428 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [pre-os boot: tftp boot]: tensor([[0.2927]])
[2025-04-08 11:28:23,529 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection]: tensor([[0.4689]])
[2025-04-08 11:28:23,694 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: dynamic-link library injection]: tensor([[0.4886]])
[2025-04-08 11:28:23,823 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: portable executable injection]: tensor([[0.4844]])
[2025-04-08 11:28:24,045 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: thread execution hijacking]: tensor([[0.5477]])
[2025-04-08 11:28:24,148 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: asynchronous procedure call]: tensor([[0.4529]])
[2025-04-08 11:28:24,330 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: thread local storage]: tensor([[0.4895]])
[2025-04-08 11:28:24,432 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: ptrace system calls]: tensor([[0.4429]])
[2025-04-08 11:28:24,601 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: proc memory]: tensor([[0.5077]])
[2025-04-08 11:28:24,735 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: extra window memory injection]: tensor([[0.4813]])
[2025-04-08 11:28:24,976 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: process hollowing]: tensor([[0.5052]])
[2025-04-08 11:28:25,128 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: process doppelgänging]: tensor([[0.4846]])
[2025-04-08 11:28:25,231 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: vdso hijacking]: tensor([[0.5664]])
[2025-04-08 11:28:25,356 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [process injection: listplanting]: tensor([[0.5099]])
[2025-04-08 11:28:25,479 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [reflective code loading]: tensor([[0.4524]])
[2025-04-08 11:28:25,636 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [rogue domain controller]: tensor([[0.3149]])
[2025-04-08 11:28:25,770 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [rootkit]: tensor([[0.5824]])
[2025-04-08 11:28:25,945 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [subvert trust controls]: tensor([[0.4981]])
[2025-04-08 11:28:26,098 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [subvert trust controls: gatekeeper bypass]: tensor([[0.4254]])
[2025-04-08 11:28:26,223 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [subvert trust controls: code signing]: tensor([[0.3777]])
[2025-04-08 11:28:26,364 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [subvert trust controls: sip and trust provider hijacking]: tensor([[0.4089]])
[2025-04-08 11:28:26,497 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [subvert trust controls: install root certificate]: tensor([[0.3090]])
[2025-04-08 11:28:26,725 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [subvert trust controls: mark-of-the-web bypass]: tensor([[0.4323]])
[2025-04-08 11:28:26,881 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [subvert trust controls: code signing policy modification]: tensor([[0.3638]])
[2025-04-08 11:28:27,009 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution]: tensor([[0.4379]])
[2025-04-08 11:28:27,153 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: compiled html file]: tensor([[0.4092]])
[2025-04-08 11:28:27,261 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: control panel]: tensor([[0.4187]])
[2025-04-08 11:28:27,363 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: cmstp]: tensor([[0.3133]])
[2025-04-08 11:28:27,520 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: installutil]: tensor([[0.2730]])
[2025-04-08 11:28:27,679 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: mshta]: tensor([[0.5142]])
[2025-04-08 11:28:27,882 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: msiexec]: tensor([[0.3957]])
[2025-04-08 11:28:28,038 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: odbcconf]: tensor([[0.2742]])
[2025-04-08 11:28:28,145 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: regsvcs/regasm]: tensor([[0.4309]])
[2025-04-08 11:28:28,250 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: regsvr32]: tensor([[0.4496]])
[2025-04-08 11:28:28,422 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: rundll32]: tensor([[0.3966]])
[2025-04-08 11:28:28,536 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: verclsid]: tensor([[0.3837]])
[2025-04-08 11:28:28,707 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: mavinject]: tensor([[0.5314]])
[2025-04-08 11:28:28,975 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: mmc]: tensor([[0.3999]])
[2025-04-08 11:28:29,115 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system binary proxy execution: electron applications]: tensor([[0.2534]])
[2025-04-08 11:28:29,181 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system script proxy execution]: tensor([[0.4394]])
[2025-04-08 11:28:29,332 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system script proxy execution: pubprn]: tensor([[0.2452]])
[2025-04-08 11:28:29,534 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [system script proxy execution: syncappvpublishingserver]: tensor([[0.4890]])
[2025-04-08 11:28:29,705 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [template injection]: tensor([[0.3612]])
[2025-04-08 11:28:29,909 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [traffic signaling]: tensor([[0.3644]])
[2025-04-08 11:28:30,069 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [traffic signaling: port knocking]: tensor([[0.3941]])
[2025-04-08 11:28:30,184 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [traffic signaling: socket filters]: tensor([[0.3282]])
[2025-04-08 11:28:30,277 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [trusted developer utilities proxy execution]: tensor([[0.4390]])
[2025-04-08 11:28:30,396 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [trusted developer utilities proxy execution: msbuild]: tensor([[0.4183]])
[2025-04-08 11:28:30,548 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [trusted developer utilities proxy execution: clickonce]: tensor([[0.3692]])
[2025-04-08 11:28:30,747 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [unused/unsupported cloud regions]: tensor([[0.3513]])
[2025-04-08 11:28:30,998 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [use alternate authentication material]: tensor([[0.3367]])
[2025-04-08 11:28:31,132 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [use alternate authentication material: application access token]: tensor([[0.3013]])
[2025-04-08 11:28:31,268 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [use alternate authentication material: pass the hash]: tensor([[0.1276]])
[2025-04-08 11:28:31,347 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [use alternate authentication material: pass the ticket]: tensor([[0.0607]])
[2025-04-08 11:28:31,508 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [use alternate authentication material: web session cookie]: tensor([[0.2387]])
[2025-04-08 11:28:31,710 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [valid accounts]: tensor([[0.4599]])
[2025-04-08 11:28:31,852 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [valid accounts: default accounts]: tensor([[0.2830]])
[2025-04-08 11:28:32,051 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [valid accounts: domain accounts]: tensor([[0.2501]])
[2025-04-08 11:28:32,196 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [valid accounts: local accounts]: tensor([[0.2912]])
[2025-04-08 11:28:32,318 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [valid accounts: cloud accounts]: tensor([[0.2551]])
[2025-04-08 11:28:32,437 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [virtualization/sandbox evasion]: tensor([[0.7637]])
[2025-04-08 11:28:32,627 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [virtualization/sandbox evasion: system checks]: tensor([[0.7640]])
[2025-04-08 11:28:32,806 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [virtualization/sandbox evasion: user activity based checks]: tensor([[0.7706]])
[2025-04-08 11:28:32,965 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [virtualization/sandbox evasion: time based evasion]: tensor([[0.8204]])
[2025-04-08 11:28:33,164 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [weaken encryption]: tensor([[0.3935]])
[2025-04-08 11:28:33,291 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [weaken encryption: reduce key space]: tensor([[0.4039]])
[2025-04-08 11:28:33,424 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [weaken encryption: disable crypto hardware]: tensor([[0.5250]])
[2025-04-08 11:28:33,502 INFO] ++ Similarity between [Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware] and [xsl script processing]: tensor([[0.1729]])
[2025-04-08 11:28:33,527 INFO] ++ Scores: [('virtualization/sandbox evasion: time based evasion', tensor([[0.8204]])), ('virtualization/sandbox evasion: user activity based checks', tensor([[0.7706]])), ('virtualization/sandbox evasion: system checks', tensor([[0.7640]])), ('virtualization/sandbox evasion', tensor([[0.7637]])), ('hide artifacts: run virtual instance', tensor([[0.6589]]))]
[2025-04-08 11:28:33,527 INFO] ++ Similar techniques found:
['virtualization/sandbox evasion: time based evasion', 'virtualization/sandbox evasion: user activity based checks', 'virtualization/sandbox evasion: system checks', 'virtualization/sandbox evasion', 'hide artifacts: run virtual instance']
[2025-04-08 11:28:33,528 INFO] ++ Querying the QA model for action Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware with the following context:
virtualization/sandbox evasion: time based evasion
virtualization/sandbox evasion: user activity based checks
virtualization/sandbox evasion: system checks
virtualization/sandbox evasion
hide artifacts: run virtual instance
[2025-04-08 11:28:34,637 INFO] ++ QA suggested technique: virtualization/sandbox evasion: time based evasion
[2025-04-08 11:28:34,638 INFO] ++ Selected technique: virtualization/sandbox evasion: time based evasion
[2025-04-08 11:28:38,717 INFO] ++ Refining the action: Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='e5a744dc-dc18-41b4-8ba3-0802383fe3fa', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Persistence  T1554  Compromise Client \nSoftware Binary  Smooth Operator run s as part of the 3CX \nsoftware.\n\nDefence \nEvasion  T1140 Deobfuscate/Decode \nFiles or Information  Smooth Operator uses a custom algorithm to \nobfuscate data exfiltrated over the C2 channel.\n\nSmooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='For example, the sleep timestamp varies depending on the following conditions: First, it checks if the manifest file is present, as well as if it is using a specified date.\n\nIf the file is not present or if it is using the specified date, the timestamp will generate a random number and use the formularand() % 1800000 + current date + 604800(604,800 is seven days).'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='This seed (in this example ASCII ‘ ?’, or hex 0x3F) is updated for the encoding by adding the length of \nthe string, minus 2 ( 0x5B ), then negating ( 0xFFFFFFA5 ).\n\nThis value is used to initialise the current \nseed, and to increment the current seed before encoding each character.\n\nEach character to be encoded is used as an offset into the validCharList  (e.g.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='However, systems that have run the known compromised 3CXDesktopApp versions or communicated with any of the C2 URLs should be investigated for potential compromise.Palo Alto Networks Product Protections for 3CXDesktopApp Supply Chain AttackPalo Alto Networks customers can leverage a variety of product protections and updates to identify and defend against this threat.Next-Generation Firewallswith a Threat Prevention security subscription can help block the C2 traffic with Best Practices via Threat Prevention signature86729.If you think you may have been compromised or have an urgent matter, get in touch with theUnit 42 Incident Response teamor call:North America Toll-Free: 866.486.4842 (866.4.UNIT42)EMEA: +31.20.299.3130APAC: +65.6983.8730Japan: +81.50.1790.0200Cortex XSOARThe3CXDesktopApp Supply Chain Attackpack includes an automated playbook that helps collect indicators and run advanced queries in the organization SIEM and XDR, furthermore signatures to deploy in 3rd party integration.')]
[2025-04-08 11:29:07,507 INFO] ++ Pre-conditions computed for action: Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Smooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.\n\nT1070.004  Indicator Removal: \nFile Deletion  Smooth Operator ’s second -stage delete s itself \nfrom disk immediately on exec ution.\n\nT1497.003  Virtualization/Sandbox \nEvasion: Time Based \nEvasion  Smooth Operator sleep s for, at minimum , a \nweek before beaconing.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Write s tasking data into  the file UpdateAgent , in the 3CX \ndirectory.\n\nThis file is then executed via popen  using the generated command  line \n‘"/path/to/UpdateAgent " >/dev/null 2>&1 ’.\n\nNo checks are carried out by \nthe malware on the payload written to disk, such as whether it is a valid Macho -O.\n\n0x8001 Smooth Operator  will sleep  for an arbitrary time.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='If the body of the response  is 3 bytes or less then it is compared to the string ‘200’, if it matches then it \nwill reset the beacon error count , otherwise  it will increment the beacon error count , and in either case  \nit will sleep for the current interval and beacon again .')]
[2025-04-08 11:29:21,038 INFO] ++ Post-conditions computed for action: Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware using 9 documents:
[Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='e5a744dc-dc18-41b4-8ba3-0802383fe3fa', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(id='a54adcd5-c433-4c6b-b44e-928cfc041173', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Smooth Operator deobfuscates  data it writes \nto a file on disk  as well as tasking res ponses.\n\nT1070.004  Indicator Removal: \nFile Deletion  Smooth Operator ’s second -stage delete s itself \nfrom disk immediately on exec ution.\n\nT1497.003  Virtualization/Sandbox \nEvasion: Time Based \nEvasion  Smooth Operator sleep s for, at minimum , a \nweek before beaconing.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='After the date is computed, the malware will continue its routine.Upon execution of3CXDesktopApp.exe,ffmpeg.dll, which seems to be a trojanized or patched DLL, will be loaded.\n\nIt will still contain its normal functionalities, but it will have an added malicious function that readsd3dcompiler_47.dllto locate an encrypted shellcode after thefe ed fa cehex strings.Figure 2.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Write s tasking data into  the file UpdateAgent , in the 3CX \ndirectory.\n\nThis file is then executed via popen  using the generated command  line \n‘"/path/to/UpdateAgent " >/dev/null 2>&1 ’.\n\nNo checks are carried out by \nthe malware on the payload written to disk, such as whether it is a valid Macho -O.\n\n0x8001 Smooth Operator  will sleep  for an arbitrary time.')]
[2025-04-08 11:29:23,578 INFO] ++ Indicators computed for action: Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware. The indicators are:
['The filename ".main_storage" is observed.']
[2025-04-08 11:30:00,112 INFO] Processing step relative to tactic: collection
[2025-04-08 11:30:00,112 INFO] + Processing action: Automated Collection as used by the malware
[2025-04-08 11:30:01,942 INFO] ++ Embedding computed for: Automated Collection as used by the malware. The vector has shape: (384,)
[2025-04-08 11:30:02,086 INFO] ++ Similarity between [Automated Collection as used by the malware] and [adversary-in-the-middle]: tensor([[0.4603]])
[2025-04-08 11:30:02,206 INFO] ++ Similarity between [Automated Collection as used by the malware] and [adversary-in-the-middle: llmnr/nbt-ns poisoning and smb relay]: tensor([[0.3607]])
[2025-04-08 11:30:02,321 INFO] ++ Similarity between [Automated Collection as used by the malware] and [adversary-in-the-middle: arp cache poisoning]: tensor([[0.3715]])
[2025-04-08 11:30:02,455 INFO] ++ Similarity between [Automated Collection as used by the malware] and [adversary-in-the-middle: dhcp spoofing]: tensor([[0.3822]])
[2025-04-08 11:30:02,648 INFO] ++ Similarity between [Automated Collection as used by the malware] and [adversary-in-the-middle: evil twin]: tensor([[0.4538]])
[2025-04-08 11:30:02,843 INFO] ++ Similarity between [Automated Collection as used by the malware] and [archive collected data]: tensor([[0.4749]])
[2025-04-08 11:30:03,001 INFO] ++ Similarity between [Automated Collection as used by the malware] and [archive collected data: archive via utility]: tensor([[0.4093]])
[2025-04-08 11:30:03,105 INFO] ++ Similarity between [Automated Collection as used by the malware] and [archive collected data: archive via library]: tensor([[0.3228]])
[2025-04-08 11:30:03,225 INFO] ++ Similarity between [Automated Collection as used by the malware] and [archive collected data: archive via custom method]: tensor([[0.4000]])
[2025-04-08 11:30:03,360 INFO] ++ Similarity between [Automated Collection as used by the malware] and [audio capture]: tensor([[0.3154]])
[2025-04-08 11:30:03,490 INFO] ++ Similarity between [Automated Collection as used by the malware] and [automated collection]: tensor([[0.5904]])
[2025-04-08 11:30:03,651 INFO] ++ Similarity between [Automated Collection as used by the malware] and [browser session hijacking]: tensor([[0.3589]])
[2025-04-08 11:30:03,775 INFO] ++ Similarity between [Automated Collection as used by the malware] and [clipboard data]: tensor([[0.4183]])
[2025-04-08 11:30:03,980 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from cloud storage]: tensor([[0.3461]])
[2025-04-08 11:30:04,104 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from configuration repository]: tensor([[0.3452]])
[2025-04-08 11:30:04,232 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from configuration repository: snmp (mib dump)]: tensor([[0.3366]])
[2025-04-08 11:30:04,354 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from configuration repository: network device configuration dump]: tensor([[0.3537]])
[2025-04-08 11:30:04,510 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from information repositories]: tensor([[0.3513]])
[2025-04-08 11:30:04,675 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from information repositories: confluence]: tensor([[0.1867]])
[2025-04-08 11:30:04,863 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from information repositories: sharepoint]: tensor([[0.3614]])
[2025-04-08 11:30:05,032 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from information repositories: code repositories]: tensor([[0.2631]])
[2025-04-08 11:30:05,133 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from information repositories: customer relationship management software]: tensor([[0.3162]])
[2025-04-08 11:30:05,256 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from information repositories: messaging applications]: tensor([[0.4217]])
[2025-04-08 11:30:05,337 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from local system]: tensor([[0.5922]])
[2025-04-08 11:30:05,466 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from network shared drive]: tensor([[0.4841]])
[2025-04-08 11:30:05,612 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data from removable media]: tensor([[0.4973]])
[2025-04-08 11:30:05,793 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data staged]: tensor([[0.4110]])
[2025-04-08 11:30:05,998 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data staged: local data staging]: tensor([[0.3974]])
[2025-04-08 11:30:06,081 INFO] ++ Similarity between [Automated Collection as used by the malware] and [data staged: remote data staging]: tensor([[0.3943]])
[2025-04-08 11:30:06,164 INFO] ++ Similarity between [Automated Collection as used by the malware] and [email collection]: tensor([[0.4264]])
[2025-04-08 11:30:06,259 INFO] ++ Similarity between [Automated Collection as used by the malware] and [email collection: local email collection]: tensor([[0.4620]])
[2025-04-08 11:30:06,370 INFO] ++ Similarity between [Automated Collection as used by the malware] and [email collection: remote email collection]: tensor([[0.3960]])
[2025-04-08 11:30:06,558 INFO] ++ Similarity between [Automated Collection as used by the malware] and [email collection: email forwarding rule]: tensor([[0.3871]])
[2025-04-08 11:30:06,748 INFO] ++ Similarity between [Automated Collection as used by the malware] and [input capture]: tensor([[0.3427]])
[2025-04-08 11:30:06,921 INFO] ++ Similarity between [Automated Collection as used by the malware] and [input capture: keylogging]: tensor([[0.3656]])
[2025-04-08 11:30:07,068 INFO] ++ Similarity between [Automated Collection as used by the malware] and [input capture: gui input capture]: tensor([[0.3455]])
[2025-04-08 11:30:07,185 INFO] ++ Similarity between [Automated Collection as used by the malware] and [input capture: web portal capture]: tensor([[0.4219]])
[2025-04-08 11:30:07,294 INFO] ++ Similarity between [Automated Collection as used by the malware] and [input capture: credential api hooking]: tensor([[0.3359]])
[2025-04-08 11:30:07,428 INFO] ++ Similarity between [Automated Collection as used by the malware] and [screen capture]: tensor([[0.3007]])
[2025-04-08 11:30:07,606 INFO] ++ Similarity between [Automated Collection as used by the malware] and [video capture]: tensor([[0.2854]])
[2025-04-08 11:30:07,613 INFO] ++ Scores: [('data from local system', tensor([[0.5922]])), ('automated collection', tensor([[0.5904]])), ('data from removable media', tensor([[0.4973]])), ('data from network shared drive', tensor([[0.4841]])), ('archive collected data', tensor([[0.4749]]))]
[2025-04-08 11:30:07,614 INFO] ++ Similar techniques found:
['data from local system', 'automated collection', 'data from removable media', 'data from network shared drive', 'archive collected data']
[2025-04-08 11:30:07,614 INFO] ++ Querying the QA model for action Automated Collection as used by the malware with the following context:
data from local system
automated collection
data from removable media
data from network shared drive
archive collected data
[2025-04-08 11:30:08,624 INFO] ++ QA suggested technique: automated collection
[2025-04-08 11:30:08,624 INFO] ++ Selected technique: automated collection
[2025-04-08 11:30:12,755 INFO] ++ Refining the action: Automated Collection as used by the malware using 9 documents:
[Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='1db16ff2-0239-473f-ad5f-863483c2316b', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='However, systems that have run the known compromised 3CXDesktopApp versions or communicated with any of the C2 URLs should be investigated for potential compromise.Palo Alto Networks Product Protections for 3CXDesktopApp Supply Chain AttackPalo Alto Networks customers can leverage a variety of product protections and updates to identify and defend against this threat.Next-Generation Firewallswith a Threat Prevention security subscription can help block the C2 traffic with Best Practices via Threat Prevention signature86729.If you think you may have been compromised or have an urgent matter, get in touch with theUnit 42 Incident Response teamor call:North America Toll-Free: 866.486.4842 (866.4.UNIT42)EMEA: +31.20.299.3130APAC: +65.6983.8730Japan: +81.50.1790.0200Cortex XSOARThe3CXDesktopApp Supply Chain Attackpack includes an automated playbook that helps collect indicators and run advanced queries in the organization SIEM and XDR, furthermore signatures to deploy in 3rd party integration.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content=']com/blog/event-trainings/Note that thewww.3cx[.\n\n]comURL above is a legitimate website owned by the 3CX vendor, which is not believed to be used for C2 communication at the time of writing.The URLs found in the macOS variant use the same domains as the Windows variant, with the exception of thepbxphonenetwork[.]comdomain.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Collection  T1119  Automated Collection  Smooth Operator stages collect data from the \nvictim machine to be  included in a beacon or \nexfiltration.\n\nCommand \nand Control  T1071.001  Application Layer \nProtocol: Web \nProtocols  Smooth Operator command and control is \nover HTTPS.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.')]
[2025-04-08 11:30:56,272 INFO] ++ Pre-conditions computed for action: Automated Collection as used by the malware using 9 documents:
[Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(id='d66dca3e-03f1-464e-82c4-4f895aa04eff', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Collection  T1119  Automated Collection  Smooth Operator stages collect data from the \nvictim machine to be  included in a beacon or \nexfiltration.\n\nCommand \nand Control  T1071.001  Application Layer \nProtocol: Web \nProtocols  Smooth Operator command and control is \nover HTTPS.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='"Figure 7.\n\nChecking for "config.json"ICONIC Stealer was then observed to steal the following system information:HostNameDomainNameOsVersionThe gathered data will then be converted into a text-string format.Figure 8.\n\nConverting gathered data into a text-string formatICONIC Stealer then proceeds to its last behavior, which steals browser data.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Write s tasking data into  the file UpdateAgent , in the 3CX \ndirectory.\n\nThis file is then executed via popen  using the generated command  line \n‘"/path/to/UpdateAgent " >/dev/null 2>&1 ’.\n\nNo checks are carried out by \nthe malware on the payload written to disk, such as whether it is a valid Macho -O.\n\n0x8001 Smooth Operator  will sleep  for an arbitrary time.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='This seed (in this example ASCII ‘ ?’, or hex 0x3F) is updated for the encoding by adding the length of \nthe string, minus 2 ( 0x5B ), then negating ( 0xFFFFFFA5 ).\n\nThis value is used to initialise the current \nseed, and to increment the current seed before encoding each character.\n\nEach character to be encoded is used as an offset into the validCharList  (e.g.')]
[2025-04-08 11:31:10,770 INFO] ++ Post-conditions computed for action: Automated Collection as used by the malware using 9 documents:
[Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='a54adcd5-c433-4c6b-b44e-928cfc041173', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='1db16ff2-0239-473f-ad5f-863483c2316b', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Collection  T1119  Automated Collection  Smooth Operator stages collect data from the \nvictim machine to be  included in a beacon or \nexfiltration.\n\nCommand \nand Control  T1071.001  Application Layer \nProtocol: Web \nProtocols  Smooth Operator command and control is \nover HTTPS.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='"Figure 7.\n\nChecking for "config.json"ICONIC Stealer was then observed to steal the following system information:HostNameDomainNameOsVersionThe gathered data will then be converted into a text-string format.Figure 8.\n\nConverting gathered data into a text-string formatICONIC Stealer then proceeds to its last behavior, which steals browser data.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Write s tasking data into  the file UpdateAgent , in the 3CX \ndirectory.\n\nThis file is then executed via popen  using the generated command  line \n‘"/path/to/UpdateAgent " >/dev/null 2>&1 ’.\n\nNo checks are carried out by \nthe malware on the payload written to disk, such as whether it is a valid Macho -O.\n\n0x8001 Smooth Operator  will sleep  for an arbitrary time.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='This seed (in this example ASCII ‘ ?’, or hex 0x3F) is updated for the encoding by adding the length of \nthe string, minus 2 ( 0x5B ), then negating ( 0xFFFFFFA5 ).\n\nThis value is used to initialise the current \nseed, and to increment the current seed before encoding each character.\n\nEach character to be encoded is used as an offset into the validCharList  (e.g.')]
[2025-04-08 11:31:14,280 INFO] ++ Indicators computed for action: Automated Collection as used by the malware. The indicators are:
['A file named "UpdateAgent" is present.', 'A file named ".main_storage" is present.']
[2025-04-08 11:31:14,903 INFO] ++ Removed pre-condition: 
The malware is active and executing.
, due to similarity with: 
The malware is running on a victim machine.
 (tensor([[0.8330]]))
[2025-04-08 11:31:15,142 INFO] ++ Removed pre-condition: 
The malware has access to the necessary files and system information on the victim machine.
, due to similarity with: 
The malware is running on a victim machine.
 (tensor([[0.8253]]))
[2025-04-08 11:31:59,541 INFO] Processing step relative to tactic: command-and-control
[2025-04-08 11:31:59,541 INFO] + Processing action: Application Layer Protocol: Web Protocols as used by the malware
[2025-04-08 11:32:01,281 INFO] ++ Embedding computed for: Application Layer Protocol: Web Protocols as used by the malware. The vector has shape: (384,)
[2025-04-08 11:32:01,435 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [application layer protocol]: tensor([[0.6331]])
[2025-04-08 11:32:01,625 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [application layer protocol: web protocols]: tensor([[0.7002]])
[2025-04-08 11:32:01,778 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [application layer protocol: file transfer protocols]: tensor([[0.6094]])
[2025-04-08 11:32:01,966 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [application layer protocol: mail protocols]: tensor([[0.5958]])
[2025-04-08 11:32:02,097 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [application layer protocol: dns]: tensor([[0.6017]])
[2025-04-08 11:32:02,223 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [application layer protocol: publish/subscribe protocols]: tensor([[0.5904]])
[2025-04-08 11:32:02,384 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [communication through removable media]: tensor([[0.4035]])
[2025-04-08 11:32:02,552 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [content injection]: tensor([[0.4282]])
[2025-04-08 11:32:02,758 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [data encoding]: tensor([[0.3728]])
[2025-04-08 11:32:02,933 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [data encoding: standard encoding]: tensor([[0.3487]])
[2025-04-08 11:32:03,091 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [data encoding: non-standard encoding]: tensor([[0.4293]])
[2025-04-08 11:32:03,204 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [data obfuscation]: tensor([[0.4553]])
[2025-04-08 11:32:03,304 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [data obfuscation: junk data]: tensor([[0.4030]])
[2025-04-08 11:32:03,437 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [data obfuscation: steganography]: tensor([[0.3893]])
[2025-04-08 11:32:03,581 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [data obfuscation: protocol or service impersonation]: tensor([[0.5415]])
[2025-04-08 11:32:03,766 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [dynamic resolution]: tensor([[0.5591]])
[2025-04-08 11:32:03,942 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [dynamic resolution: fast flux dns]: tensor([[0.2873]])
[2025-04-08 11:32:04,041 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [dynamic resolution: domain generation algorithms]: tensor([[0.3357]])
[2025-04-08 11:32:04,127 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [dynamic resolution: dns calculation]: tensor([[0.2703]])
[2025-04-08 11:32:04,241 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [encrypted channel]: tensor([[0.5169]])
[2025-04-08 11:32:04,357 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [encrypted channel: symmetric cryptography]: tensor([[0.3334]])
[2025-04-08 11:32:04,485 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [encrypted channel: asymmetric cryptography]: tensor([[0.2613]])
[2025-04-08 11:32:04,657 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [fallback channels]: tensor([[0.3000]])
[2025-04-08 11:32:04,781 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [hide infrastructure]: tensor([[0.3919]])
[2025-04-08 11:32:04,898 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [ingress tool transfer]: tensor([[0.3744]])
[2025-04-08 11:32:05,077 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [multi-stage channels]: tensor([[0.3231]])
[2025-04-08 11:32:05,187 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [non-application layer protocol]: tensor([[0.5646]])
[2025-04-08 11:32:05,320 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [non-standard port]: tensor([[0.3882]])
[2025-04-08 11:32:05,436 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [protocol tunneling]: tensor([[0.4461]])
[2025-04-08 11:32:05,609 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [proxy]: tensor([[0.4119]])
[2025-04-08 11:32:05,819 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [proxy: internal proxy]: tensor([[0.4703]])
[2025-04-08 11:32:06,015 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [proxy: external proxy]: tensor([[0.3918]])
[2025-04-08 11:32:06,114 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [proxy: multi-hop proxy]: tensor([[0.3043]])
[2025-04-08 11:32:06,249 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [proxy: domain fronting]: tensor([[0.3750]])
[2025-04-08 11:32:06,360 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [remote access software]: tensor([[0.4062]])
[2025-04-08 11:32:06,534 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [traffic signaling]: tensor([[0.4259]])
[2025-04-08 11:32:06,710 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [traffic signaling: port knocking]: tensor([[0.3797]])
[2025-04-08 11:32:06,854 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [traffic signaling: socket filters]: tensor([[0.3646]])
[2025-04-08 11:32:07,045 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [web service]: tensor([[0.4243]])
[2025-04-08 11:32:07,138 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [web service: dead drop resolver]: tensor([[0.4089]])
[2025-04-08 11:32:07,264 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [web service: bidirectional communication]: tensor([[0.4941]])
[2025-04-08 11:32:07,405 INFO] ++ Similarity between [Application Layer Protocol: Web Protocols as used by the malware] and [web service: one-way communication]: tensor([[0.4848]])
[2025-04-08 11:32:07,412 INFO] ++ Scores: [('application layer protocol: web protocols', tensor([[0.7002]])), ('application layer protocol', tensor([[0.6331]])), ('application layer protocol: file transfer protocols', tensor([[0.6094]])), ('application layer protocol: dns', tensor([[0.6017]])), ('application layer protocol: mail protocols', tensor([[0.5958]]))]
[2025-04-08 11:32:07,412 INFO] ++ Similar techniques found:
['application layer protocol: web protocols', 'application layer protocol', 'application layer protocol: file transfer protocols', 'application layer protocol: dns', 'application layer protocol: mail protocols']
[2025-04-08 11:32:07,413 INFO] ++ Querying the QA model for action Application Layer Protocol: Web Protocols as used by the malware with the following context:
application layer protocol: web protocols
application layer protocol
application layer protocol: file transfer protocols
application layer protocol: dns
application layer protocol: mail protocols
[2025-04-08 11:32:08,493 INFO] ++ QA suggested technique: T1078.002
[2025-04-08 11:32:08,494 INFO] ++ Selected technique: T1078.002
[2025-04-08 11:32:12,890 INFO] ++ Refining the action: Application Layer Protocol: Web Protocols as used by the malware using 9 documents:
[Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='a54adcd5-c433-4c6b-b44e-928cfc041173', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='The compromised 3CXDesktopApp application was seen in the environments of 127 of our customers, and we blocked the execution of the malicious shellcode executed by the application via the XDR Agent’s In-process Shellcode Protection Module.At this time, the malicious 3CXDesktopApp installers do not have any active C2 domains to communicate with.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Collection  T1119  Automated Collection  Smooth Operator stages collect data from the \nvictim machine to be  included in a beacon or \nexfiltration.\n\nCommand \nand Control  T1071.001  Application Layer \nProtocol: Web \nProtocols  Smooth Operator command and control is \nover HTTPS.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='We observed 5,796 of these events across 1,832 unique systems between March 9-30, 2023.Note all XDR customers were protected from zero-day with no upgrade needed.Due to the blocking of the execution of the shellcode, we were unable to obtain the secondary payload of this attack that would contain the functionality needed by the threat actor to carry out any additional activities.To determine the prevalence of 3CX products, we created a fingerprint of their publicly accessible applications and scanned the internet with our Xpanse product.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='Due to blocking the shellcode, we were unable to obtain the secondary payload used in this attack, so we cannot determine its capabilities or any post-exploitation activities carried out by the threat actor.Related Unit 42 TopicsThreat Brief,Supply ChainDetails of the IncidentThe 3CXDesktopApp supply chain attack began with threat actors introducing malicious libraries into the legitimate 3CXDesktopApp installation application, likely by including these libraries during the build process of 3CXDesktopApp.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.')]
[2025-04-08 11:32:45,027 INFO] ++ Pre-conditions computed for action: Application Layer Protocol: Web Protocols as used by the malware using 9 documents:
[Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='a54adcd5-c433-4c6b-b44e-928cfc041173', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='In doing so, this prevents the malware from executing for a significant amount of time, to prevent victims suspecting that the program was backdoored.The DLL attempts to obtain its command and control (C2) server by downloading an icon file from the following URL whose filename includes a randomly generated number between 1 and 15:hxxps://raw.githubusercontent[.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='This provides additional insight into the timeline as to when this attack originated.Figure 2.\n\nLogs indicating earliest modifications to GitHub repository.After the.icofiles are downloaded, parsed and subsequently decrypted to extract the next stage URL, the malware will perform an HTTPS request to it.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Collection  T1119  Automated Collection  Smooth Operator stages collect data from the \nvictim machine to be  included in a beacon or \nexfiltration.\n\nCommand \nand Control  T1071.001  Application Layer \nProtocol: Web \nProtocols  Smooth Operator command and control is \nover HTTPS.')]
[2025-04-08 11:32:59,236 INFO] ++ Post-conditions computed for action: Application Layer Protocol: Web Protocols as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='e5a744dc-dc18-41b4-8ba3-0802383fe3fa', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='In doing so, this prevents the malware from executing for a significant amount of time, to prevent victims suspecting that the program was backdoored.The DLL attempts to obtain its command and control (C2) server by downloading an icon file from the following URL whose filename includes a randomly generated number between 1 and 15:hxxps://raw.githubusercontent[.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Collection  T1119  Automated Collection  Smooth Operator stages collect data from the \nvictim machine to be  included in a beacon or \nexfiltration.\n\nCommand \nand Control  T1071.001  Application Layer \nProtocol: Web \nProtocols  Smooth Operator command and control is \nover HTTPS.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.')]
[2025-04-08 11:33:07,172 INFO] ++ Indicators computed for action: Application Layer Protocol: Web Protocols as used by the malware. The indicators are:
['The domain "azureonlinestorage.com" is accessed.', 'The URL "https://akamaitechcloudservices.com/v2/fileapi" is accessed.', 'The URL "https://glcloudservice.com/v1/status" is accessed.', 'The URL "https://msedgepackageinfo.com/ms-webview" is accessed.', 'The URL "https://pbxsources.com/queue" is accessed.']
[2025-04-08 11:33:09,589 INFO] ++ Removed pre-condition: 
An active internet connection on the victim machine.
, due to similarity with: 
The victim machine has an active internet connection.
 (tensor([[0.9500]]))
[2025-04-08 11:33:15,759 INFO] ++ Removed post-condition: 
Obfuscated data exfiltration attempts
, due to similarity with: 
Data exfiltration
 (tensor([[0.8137]]))
[2025-04-08 11:33:44,519 INFO] + Processing action: Fallback Channels as used by the malware
[2025-04-08 11:33:46,159 INFO] ++ Embedding computed for: Fallback Channels as used by the malware. The vector has shape: (384,)
[2025-04-08 11:33:46,263 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [application layer protocol]: tensor([[0.3240]])
[2025-04-08 11:33:46,382 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [application layer protocol: web protocols]: tensor([[0.2726]])
[2025-04-08 11:33:46,471 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [application layer protocol: file transfer protocols]: tensor([[0.2615]])
[2025-04-08 11:33:46,660 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [application layer protocol: mail protocols]: tensor([[0.2566]])
[2025-04-08 11:33:46,865 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [application layer protocol: dns]: tensor([[0.2747]])
[2025-04-08 11:33:47,057 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [application layer protocol: publish/subscribe protocols]: tensor([[0.2862]])
[2025-04-08 11:33:47,204 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [communication through removable media]: tensor([[0.3760]])
[2025-04-08 11:33:47,326 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [content injection]: tensor([[0.4181]])
[2025-04-08 11:33:47,410 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [data encoding]: tensor([[0.2178]])
[2025-04-08 11:33:47,543 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [data encoding: standard encoding]: tensor([[0.2253]])
[2025-04-08 11:33:47,756 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [data encoding: non-standard encoding]: tensor([[0.2619]])
[2025-04-08 11:33:47,927 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [data obfuscation]: tensor([[0.3694]])
[2025-04-08 11:33:48,070 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [data obfuscation: junk data]: tensor([[0.3524]])
[2025-04-08 11:33:48,168 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [data obfuscation: steganography]: tensor([[0.2518]])
[2025-04-08 11:33:48,279 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [data obfuscation: protocol or service impersonation]: tensor([[0.3271]])
[2025-04-08 11:33:48,391 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [dynamic resolution]: tensor([[0.4428]])
[2025-04-08 11:33:48,504 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [dynamic resolution: fast flux dns]: tensor([[0.2811]])
[2025-04-08 11:33:48,639 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [dynamic resolution: domain generation algorithms]: tensor([[0.3036]])
[2025-04-08 11:33:48,844 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [dynamic resolution: dns calculation]: tensor([[0.2677]])
[2025-04-08 11:33:49,007 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [encrypted channel]: tensor([[0.4399]])
[2025-04-08 11:33:49,114 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [encrypted channel: symmetric cryptography]: tensor([[0.2582]])
[2025-04-08 11:33:49,244 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [encrypted channel: asymmetric cryptography]: tensor([[0.2408]])
[2025-04-08 11:33:49,358 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [fallback channels]: tensor([[0.5360]])
[2025-04-08 11:33:49,474 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [hide infrastructure]: tensor([[0.4500]])
[2025-04-08 11:33:49,636 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [ingress tool transfer]: tensor([[0.3361]])
[2025-04-08 11:33:49,844 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [multi-stage channels]: tensor([[0.3310]])
[2025-04-08 11:33:50,056 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [non-application layer protocol]: tensor([[0.3506]])
[2025-04-08 11:33:50,173 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [non-standard port]: tensor([[0.2381]])
[2025-04-08 11:33:50,333 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [protocol tunneling]: tensor([[0.2305]])
[2025-04-08 11:33:50,479 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [proxy]: tensor([[0.3343]])
[2025-04-08 11:33:50,703 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [proxy: internal proxy]: tensor([[0.3631]])
[2025-04-08 11:33:50,946 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [proxy: external proxy]: tensor([[0.2759]])
[2025-04-08 11:33:51,084 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [proxy: multi-hop proxy]: tensor([[0.3188]])
[2025-04-08 11:33:51,242 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [proxy: domain fronting]: tensor([[0.1301]])
[2025-04-08 11:33:51,361 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [remote access software]: tensor([[0.2818]])
[2025-04-08 11:33:51,569 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [traffic signaling]: tensor([[0.3637]])
[2025-04-08 11:33:51,737 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [traffic signaling: port knocking]: tensor([[0.3561]])
[2025-04-08 11:33:51,966 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [traffic signaling: socket filters]: tensor([[0.3390]])
[2025-04-08 11:33:52,134 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [web service]: tensor([[0.3796]])
[2025-04-08 11:33:52,239 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [web service: dead drop resolver]: tensor([[0.4197]])
[2025-04-08 11:33:52,406 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [web service: bidirectional communication]: tensor([[0.4464]])
[2025-04-08 11:33:52,682 INFO] ++ Similarity between [Fallback Channels as used by the malware] and [web service: one-way communication]: tensor([[0.4647]])
[2025-04-08 11:33:52,689 INFO] ++ Scores: [('fallback channels', tensor([[0.5360]])), ('web service: one-way communication', tensor([[0.4647]])), ('hide infrastructure', tensor([[0.4500]])), ('web service: bidirectional communication', tensor([[0.4464]])), ('dynamic resolution', tensor([[0.4428]]))]
[2025-04-08 11:33:52,689 INFO] ++ Similar techniques found:
['fallback channels', 'web service: one-way communication', 'hide infrastructure', 'web service: bidirectional communication', 'dynamic resolution']
[2025-04-08 11:33:52,689 INFO] ++ Querying the QA model for action Fallback Channels as used by the malware with the following context:
fallback channels
web service: one-way communication
hide infrastructure
web service: bidirectional communication
dynamic resolution
[2025-04-08 11:33:53,534 INFO] ++ QA suggested technique: fallback channels
[2025-04-08 11:33:53,535 INFO] ++ Selected technique: fallback channels
[2025-04-08 11:33:57,706 INFO] ++ Refining the action: Fallback Channels as used by the malware using 9 documents:
[Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='1db16ff2-0239-473f-ad5f-863483c2316b', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='Due to blocking the shellcode, we were unable to obtain the secondary payload used in this attack, so we cannot determine its capabilities or any post-exploitation activities carried out by the threat actor.Related Unit 42 TopicsThreat Brief,Supply ChainDetails of the IncidentThe 3CXDesktopApp supply chain attack began with threat actors introducing malicious libraries into the legitimate 3CXDesktopApp installation application, likely by including these libraries during the build process of 3CXDesktopApp.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='For example, the sleep timestamp varies depending on the following conditions: First, it checks if the manifest file is present, as well as if it is using a specified date.\n\nIf the file is not present or if it is using the specified date, the timestamp will generate a random number and use the formularand() % 1800000 + current date + 604800(604,800 is seven days).'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='The compromised 3CXDesktopApp application was seen in the environments of 127 of our customers, and we blocked the execution of the malicious shellcode executed by the application via the XDR Agent’s In-process Shellcode Protection Module.At this time, the malicious 3CXDesktopApp installers do not have any active C2 domains to communicate with.')]
[2025-04-08 11:34:27,182 INFO] ++ Pre-conditions computed for action: Fallback Channels as used by the malware using 9 documents:
[Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(id='d66dca3e-03f1-464e-82c4-4f895aa04eff', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(id='21fa9905-b3c9-4551-a4ee-a85d21ffec8f', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='More information will be provided as this blog is updated.AppData\\Local\\Google\\Chrome\\User DataAppData\\Local\\Microsoft\\Edge\\User DataAppData\\Local\\BraveSoftware\\Brave-Browser\\User DataAppData\\Roaming\\Mozilla\\Firefox\\ProfilesBrowserTarget informationChromeHistoryEdgeHistoryBraveHistoryFirefoxplaces.sqliteTable 1.\n\nThe targeted section of each browser.'), Document(id='7c18b793-0cc5-4ae0-a0e4-87707afc232f', metadata={'source': './documents\\other\\IoC_AL03_0330.csv'}, page_content='hash;11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='T1008  Fallback Channels  Smooth Operator contains multiple C2 servers \nand randomly chooses a new server from the \nlist for each beacon , if one fails it will try \nanother .\n\nExfiltration  T1020  Automated Exfiltration  Smooth Operator  exfiltrat es automatically \ncollected data , not over the existing C2 \nchannel.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.')]
[2025-04-08 11:34:41,111 INFO] ++ Post-conditions computed for action: Fallback Channels as used by the malware using 7 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='1db16ff2-0239-473f-ad5f-863483c2316b', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='T1008  Fallback Channels  Smooth Operator contains multiple C2 servers \nand randomly chooses a new server from the \nlist for each beacon , if one fails it will try \nanother .\n\nExfiltration  T1020  Automated Exfiltration  Smooth Operator  exfiltrat es automatically \ncollected data , not over the existing C2 \nchannel.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.')]
[2025-04-08 11:34:44,283 INFO] ++ Indicators computed for action: Fallback Channels as used by the malware. The indicators are:
['A domain name is used.', 'A file named "UpdateAgent" is present.']
[2025-04-08 11:34:47,019 INFO] ++ Removed pre-condition: 
A list of obfuscated C2 servers embedded within the malware.
, due to similarity with: 
The malware has established an initial connection to a C2 server.
 (tensor([[0.7358]]))
[2025-04-08 11:35:30,210 INFO] Processing step relative to tactic: exfiltration
[2025-04-08 11:35:30,210 INFO] + Processing action: Automated Exfiltration as used by the malware
[2025-04-08 11:35:31,912 INFO] ++ Embedding computed for: Automated Exfiltration as used by the malware. The vector has shape: (384,)
[2025-04-08 11:35:32,058 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [automated exfiltration]: tensor([[0.7711]])
[2025-04-08 11:35:32,148 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [automated exfiltration: traffic duplication]: tensor([[0.6470]])
[2025-04-08 11:35:32,323 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [data transfer size limits]: tensor([[0.4032]])
[2025-04-08 11:35:32,412 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over alternative protocol]: tensor([[0.6296]])
[2025-04-08 11:35:32,599 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over alternative protocol: exfiltration over symmetric encrypted non-c2 protocol]: tensor([[0.6076]])
[2025-04-08 11:35:32,783 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over alternative protocol: exfiltration over asymmetric encrypted non-c2 protocol]: tensor([[0.6179]])
[2025-04-08 11:35:32,969 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over alternative protocol: exfiltration over unencrypted non-c2 protocol]: tensor([[0.6245]])
[2025-04-08 11:35:33,119 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over c2 channel]: tensor([[0.6731]])
[2025-04-08 11:35:33,208 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over other network medium]: tensor([[0.5886]])
[2025-04-08 11:35:33,348 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over other network medium: exfiltration over bluetooth]: tensor([[0.5926]])
[2025-04-08 11:35:33,478 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over physical medium]: tensor([[0.5258]])
[2025-04-08 11:35:33,626 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over physical medium: exfiltration over usb]: tensor([[0.5208]])
[2025-04-08 11:35:33,841 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over web service]: tensor([[0.5730]])
[2025-04-08 11:35:34,042 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over web service: exfiltration to code repository]: tensor([[0.5290]])
[2025-04-08 11:35:34,127 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over web service: exfiltration to cloud storage]: tensor([[0.5160]])
[2025-04-08 11:35:34,226 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over web service: exfiltration to text storage sites]: tensor([[0.6246]])
[2025-04-08 11:35:34,380 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [exfiltration over web service: exfiltration over webhook]: tensor([[0.5068]])
[2025-04-08 11:35:34,525 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [scheduled transfer]: tensor([[0.5136]])
[2025-04-08 11:35:34,704 INFO] ++ Similarity between [Automated Exfiltration as used by the malware] and [transfer data to cloud account]: tensor([[0.2812]])
[2025-04-08 11:35:34,714 INFO] ++ Scores: [('automated exfiltration', tensor([[0.7711]])), ('exfiltration over c2 channel', tensor([[0.6731]])), ('automated exfiltration: traffic duplication', tensor([[0.6470]])), ('exfiltration over alternative protocol', tensor([[0.6296]])), ('exfiltration over web service: exfiltration to text storage sites', tensor([[0.6246]]))]
[2025-04-08 11:35:34,714 INFO] ++ Similar techniques found:
['automated exfiltration', 'exfiltration over c2 channel', 'automated exfiltration: traffic duplication', 'exfiltration over alternative protocol', 'exfiltration over web service: exfiltration to text storage sites']
[2025-04-08 11:35:34,714 INFO] ++ Querying the QA model for action Automated Exfiltration as used by the malware with the following context:
automated exfiltration
exfiltration over c2 channel
automated exfiltration: traffic duplication
exfiltration over alternative protocol
exfiltration over web service: exfiltration to text storage sites
[2025-04-08 11:35:35,546 INFO] ++ QA suggested technique: automated exfiltration
[2025-04-08 11:35:35,547 INFO] ++ Selected technique: automated exfiltration
[2025-04-08 11:35:39,985 INFO] ++ Refining the action: Automated Exfiltration as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='For details of \nthe exact  implementation please see the Python code in the ‘Appendix (Deobfuscation script) ’.\n\nIf any of the offsets into the array at this stage match the $, %, + or ; symbols then they are replaced \nin the final string with a corresponding HTML style encoding string such as &dol> , &per> , &plus>  or \n&semi>  this is likely an attempt to make the string  appear legitimate.'), Document(id='01c02b9f-23fe-4dfd-91fc-43eb6a1201e6', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='date = "2023 -06-29" \n        hash1 = "769383fc65d1386dd141c960c9970114547da0c2"  \n \n    strings:  \n        $ = {80 [2] 7A 48 FF C0 48 83 F8 38} // .main_storage XOR loop  \n        $ = "<key>ProductVersion</key>"  \n        $ = ".session -lock" \n        $ = "%s/.main_storage"  \n        $ = "%s/UpdateAgent"  \n        $ = \n{3715001316161B554F544A5A522D13141E150D095A342E5A4B4A544A415A2D13144C4E41\n5A024C4E535A3B0A0A161F2D1F1831130E554F494D54494C5A5231322E3736565A1613111\nF5A3D1F191115535A39120815171F554B4A42544A544F494F43544B48425A291B1C1B0813\n554F494D54494C} // XOR\'d UA \n        $ = {B02D[0 -8]88470888470D884712884717C6472400} // victim ID \ngeneration  \n \n    condition:  \n ((uint32(0) == 0xFEEDFACF) or (uint32(0) == 0xFEEDFACE) or \n(uint32(0) == 0xCAFEBABE) or (uint32(0) == 0xCAFEBABF)) and 4 of them  \n} \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \nDescription  This rule identifies sections of code which are responsible for parsing tasking \ncommand codes in Smooth Operator.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='c391fdb2-e784-4ec0-876d-99fe90db356e', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='Due to blocking the shellcode, we were unable to obtain the secondary payload used in this attack, so we cannot determine its capabilities or any post-exploitation activities carried out by the threat actor.Related Unit 42 TopicsThreat Brief,Supply ChainDetails of the IncidentThe 3CXDesktopApp supply chain attack began with threat actors introducing malicious libraries into the legitimate 3CXDesktopApp installation application, likely by including these libraries during the build process of 3CXDesktopApp.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='However, systems that have run the known compromised 3CXDesktopApp versions or communicated with any of the C2 URLs should be investigated for potential compromise.Palo Alto Networks Product Protections for 3CXDesktopApp Supply Chain AttackPalo Alto Networks customers can leverage a variety of product protections and updates to identify and defend against this threat.Next-Generation Firewallswith a Threat Prevention security subscription can help block the C2 traffic with Best Practices via Threat Prevention signature86729.If you think you may have been compromised or have an urgent matter, get in touch with theUnit 42 Incident Response teamor call:North America Toll-Free: 866.486.4842 (866.4.UNIT42)EMEA: +31.20.299.3130APAC: +65.6983.8730Japan: +81.50.1790.0200Cortex XSOARThe3CXDesktopApp Supply Chain Attackpack includes an automated playbook that helps collect indicators and run advanced queries in the organization SIEM and XDR, furthermore signatures to deploy in 3rd party integration.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='We observed 5,796 of these events across 1,832 unique systems between March 9-30, 2023.Note all XDR customers were protected from zero-day with no upgrade needed.Due to the blocking of the execution of the shellcode, we were unable to obtain the secondary payload of this attack that would contain the functionality needed by the threat actor to carry out any additional activities.To determine the prevalence of 3CX products, we created a fingerprint of their publicly accessible applications and scanned the internet with our Xpanse product.'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='The compromised 3CXDesktopApp application was seen in the environments of 127 of our customers, and we blocked the execution of the malicious shellcode executed by the application via the XDR Agent’s In-process Shellcode Protection Module.At this time, the malicious 3CXDesktopApp installers do not have any active C2 domains to communicate with.')]
[2025-04-08 11:36:20,530 INFO] ++ Pre-conditions computed for action: Automated Exfiltration as used by the malware using 9 documents:
[Document(id='87938845-7b6a-4f01-a6e5-19a8aea4533d', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content="We also discuss available solutions which security teams can maximize for early detection and mitigate the impact of 3CX attacks.By: Trend Micro ResearchMarch 30, 2023Read time:(words)Save to FolioUpdated on:April 5, 2:39 a.m. EDT: We added Windows, Mac, and network commands to the\xa0Trend Micro Vision One™\ufe0f guide in the linked PDF.April 4, 3:29 a.m. EDT: We added Trend Micro XDR filters to the solutions.April 3, 2:33 a.m. EDT: We added details ond3dcompiler_47.dll's abuse of CVE-2013-3900 to make it appear legitimately signed.April 1, 1:50 a.m. EDT: We added a guide on how Vision One can be used to search for potential threats associated with the 3CX desktop app.March 31, 11:07 p.m. EDT: We added technical details, an analysis of the info-stealer payload, and information on Trend Micro XDR capabilities for investigating and mitigating risks associated with the 3CX desktop app.March 31, 3:00 a.m. EDT: We added the execution flow diagram, a link to Trend Micro support page, and a list of Mac IOCs and detection names.In late March 2023, security researchers revealed that threat actors abused a popular business communication software from 3CX — in particular,thereportsmention that a version of the 3CX VoIP (Voice over Internet Protocol) desktop client was being employed to target 3CX's customers as part of an attack.On its forums, 3CX hasposted an updatethat recommends uninstalling the desktop app and using theProgressive Web App(PWA) client instead."), Document(id='d66dca3e-03f1-464e-82c4-4f895aa04eff', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='The behaviour of the Mac version is broadly similar, although it only uses a subset of the Windows C&C domains.Info-stealer payload analysisBased on our ongoing analysis of attacks on 3CX and the behaviors observed, the following section details what we know so far about the payload’s attack vector.Payloads in investigated 3CX attacks are detected as TrojanSpy.Win64.ICONICSTEALER.THCCABC.'), Document(id='21fa9905-b3c9-4551-a4ee-a85d21ffec8f', metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='More information will be provided as this blog is updated.AppData\\Local\\Google\\Chrome\\User DataAppData\\Local\\Microsoft\\Edge\\User DataAppData\\Local\\BraveSoftware\\Brave-Browser\\User DataAppData\\Roaming\\Mozilla\\Firefox\\ProfilesBrowserTarget informationChromeHistoryEdgeHistoryBraveHistoryFirefoxplaces.sqliteTable 1.\n\nThe targeted section of each browser.'), Document(id='7c18b793-0cc5-4ae0-a0e4-87707afc232f', metadata={'source': './documents\\other\\IoC_AL03_0330.csv'}, page_content='hash;11be1803e2e307b647a8a7e02d128335c448ff741bf06bf52b332e0bbf423b03'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='The requests are similar to the following:GET /api/session HTTP/1.1accept: */*accept-language: en-US,en;q=0.9accept-encoding: gzip, deflate, brUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) 3CXDesktopApp/18.11.1197 Chrome/102.0.5005.167 Electron/19.1.9 Safari/537.36Host: officestoragebox.comConnection: Keep-AliveCache-Control: no-cacheWhile the remote C2 servers are no longer available, we can understand what the malware expects based on its own control flow.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='T1008  Fallback Channels  Smooth Operator contains multiple C2 servers \nand randomly chooses a new server from the \nlist for each beacon , if one fails it will try \nanother .\n\nExfiltration  T1020  Automated Exfiltration  Smooth Operator  exfiltrat es automatically \ncollected data , not over the existing C2 \nchannel.')]
[2025-04-08 11:36:35,665 INFO] ++ Post-conditions computed for action: Automated Exfiltration as used by the malware using 8 documents:
[Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The \nextracted domain and account name are concatenated together, separated by a semi -colon and \nexfiltrated .\n\nThe beacon and exfiltration both use the same custom data obfuscation  as described in the \n‘Communications  (Custom data obfuscation )’ section.'), Document(id='3045ebcb-38b4-4c9d-b6c4-0913297f49d5', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='Random ised command and control server  selection  \nSmooth Operator has a n embedded  list of 15 C2s, and one URL for the 3CX website,  all obfuscated \nwith the  single -byte XOR key , 0x7A .\n\nA random C2 is picked from the lis t to beacon to  before each \nbeacon , so it is expected behaviour for one infected device to beacon to multiple C2 servers.'), Document(id='e5a744dc-dc18-41b4-8ba3-0802383fe3fa', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='The malware maintains a beacon error count, which is incremented when an invalid response is \nreceived and  reset when a valid C2 respons e is received , or the  received  response body from one of \nthe C2 servers contains the value 200.'), Document(id='1db16ff2-0239-473f-ad5f-863483c2316b', metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='No further C2 \nrandomisation will occur , and the beacon error count will not be reset regardless of re ceived tasking if \nthe 3CX URL is selected.\n\nNote:  Given the malware can beacon to multiple C2 servers, it is believed a back -end server must  \nhave been  maintaining the current state of the malware’s operation using the victim ID value sent in \nthe beacon.'), Document(metadata={'source': './documents\\other\\Information on Attacks Involving 3CX Desktop App _ Trend Micro (IT).html'}, page_content='Retrieved results stored on an allocated bufferThe gathered data will be passed to the main loader module to POST then back to the C&C server embedded in the main module.What is its potential impact?Due to its widespread use and its importance in an organization’s communication system, threat actors can cause major damage (for example, by monitoring or rerouting both internal and external communication) to businesses that use this software.What can organizations do about it?Organizations that are potentially affected should stop using the vulnerable version if possible and apply the patches or mitigation workarounds if these are available.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='• HTTPS is used as a C2 channel, with an additional custom encoding algorithm used to \nobfuscate exfiltrated data.\n\n• Smooth Operator  randomises the C2 server it communicates with .\n\nThe 3CX website is \nincluded in the list of C2 Servers it can  beacon  to.\n\nIntroduction  \nSmooth Operator malware was distributed as part of the widely reported 3CX supply chain attack , \nouted  in March 2023 .'), Document(metadata={'source': './documents\\other\\Threat Brief_ 3CXDesktopApp Supply Chain Attack (Updated).html'}, page_content='The requests are similar to the following:GET /api/session HTTP/1.1accept: */*accept-language: en-US,en;q=0.9accept-encoding: gzip, deflate, brUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) 3CXDesktopApp/18.11.1197 Chrome/102.0.5005.167 Electron/19.1.9 Safari/537.36Host: officestoragebox.comConnection: Keep-AliveCache-Control: no-cacheWhile the remote C2 servers are no longer available, we can understand what the malware expects based on its own control flow.'), Document(metadata={'source': './documents\\other\\NCSC_MAR-Smooth-Operator.pdf'}, page_content='T1008  Fallback Channels  Smooth Operator contains multiple C2 servers \nand randomly chooses a new server from the \nlist for each beacon , if one fails it will try \nanother .\n\nExfiltration  T1020  Automated Exfiltration  Smooth Operator  exfiltrat es automatically \ncollected data , not over the existing C2 \nchannel.')]
[2025-04-08 11:36:39,137 INFO] ++ Indicators computed for action: Automated Exfiltration as used by the malware. The indicators are:
['A file named "UpdateAgent" is present.', 'A file named ".main_storage" is present.']
[2025-04-08 11:37:47,243 INFO] Created output with 6 milestones
[2025-04-08 11:37:47,244 INFO] Saving output
[2025-04-08 11:37:47,247 INFO] Application finished with output saved
[2025-04-08 11:37:47,247 INFO] Ending time: 2025-04-08 11:37:47
[2025-04-08 11:37:47,247 INFO] Elapsed time: 17.77 minutes
