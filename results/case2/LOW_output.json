[{"id": "1c98e3dd-6ccb-4ab6-92be-5632d02fb9e0", "attack_steps": [{"id": "e70fc4e0-09e3-4b04-8ca4-c51d4e0c721a", "name": "Supply Chain Compromise: Compromise Software Dependencies and Development Tools as used by the malware", "description": "Malicious code is embedded into legitimate 3CX software components via the compromise of software dependencies and development tools. This process involves the insertion of malicious libraries into the 3CXDesktopApp application during the build phase, effectively transforming it into a Trojan horse.  The compromised software is subsequently signed by 3CX and undergoes Apple notarization, thereby enhancing its perceived legitimacy and trustworthiness. Distribution occurs through established channels utilized for legitimate 3CX products, resulting in unwitting user installation of malware-infected software.   \n", "mitre_technique": {"id": "T1195.001", "name": "Supply chain compromise: compromise software dependencies and development tools", "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency."}, "pre-conditions": ["\nLegitimate software dependencies are used in the 3CX software build.\n", "\nMalicious libraries are available.\n", "\nKnowledge of software compilation and packaging processes.\n", "\nThe 3CX software development process is accessible.\n", "\nAbility to modify software dependencies during the build process.\n"], "post-conditions": ["\nLogs indicating communication with C2 servers.\n", "\nNetwork connections to obfuscated C2 domains.\n", "\nModified 3CX software files (including potentially injected libraries).\n", "\nData exfiltration from infected devices.\n", "\nNew configuration files created by Smooth Operator.\n", "\nPersistence of malware within the system.\n", "\nCompromised 3CX software installations.\n", "\nPotential for further malicious activity by the threat actor.\n", "\nPresence of the \".main_storage\" file required for second-stage execution.\n", "\nExfiltrated data files containing sensitive information.\n"], "indicators": ["Domain names may be registered for malicious purposes.", "Files with unusual or generic names may be created.", "URLs may point to malicious websites or servers."]}]}, {"id": "32604def-8cbb-473a-a7da-495157bfe6a6", "attack_steps": [{"id": "bbf3e273-6fee-4fa1-ac25-b34d8ee0a9a8", "name": "Compromise Client Software Binary as used by the malware", "description": "Compromise Client Software Binary persistence is achieved by Smooth Operator through integration as a component within legitimate 3CX software.  Distribution occurs via compromised and signed 3CX software packages, resulting in unwitting user installation of the malicious payload alongside the legitimate application. The malware, specifically the libffmpeg.dylib file (a universal binary for both Intel and ARM macOS), integrates itself into the structure of the larger 3CX software. Due to this integration, Smooth Operator executes with elevated privileges upon execution of the legitimate software. This privileged execution facilitates circumvention of security measures and enables persistent presence on the compromised system.  \n", "mitre_technique": {"id": "T1554", "name": "Compromise host software binary", "description": "Adversaries may modify host software binaries to establish persistent access to systems. Software binaries/executables provide a wide range of system commands or services, programs, and libraries. Common software binaries are SSH clients, FTP clients, email clients, web browsers, and many other user or server applications."}, "pre-conditions": ["\nThe malicious code has been inserted into the libffmpeg.dylib file.\n", "\nThe 3CX software is installed on the victim's system.\n", "\nA system running the 3CX software.\n"], "post-conditions": ["\nPersistence within the system through modified 3CX software\n", "\n\".main_storage\" file containing victim ID\n", "\nExecution of malicious payloads\n", "\nData exfiltration from infected device\n", "\nFiles written by the \"UpdateAgent\" binary\n", "\nCompromised 3CX software installation\n", "\nObfuscated data files on disk\n", "\nLogs indicating execution of malicious code and data transfer\n", "\nModified 3CX configuration files\n", "\nModified libffmpeg.dylib file\n", "\nNetwork connections to C2 servers\n"], "indicators": ["Filename: UpdateAgent", "Filename: .main_storage"]}]}, {"id": "b50b6dca-e196-42b5-878d-5e6dc5360119", "attack_steps": [{"id": "5e04568e-7766-4a5e-a192-3f58332e0e1d", "name": "Deobfuscate/Decode Files or Information as used by the malware", "description": "Deobfuscation/decode operations are executed by Smooth Operator malware to facilitate its functionality. Data intended for transmission to the Command & Control (C2) server is obfuscated using a custom algorithm, rendering it resistant to analysis by security tools. Conversely, data written to files on the infected system and responses received from the C2 server are deobfuscated, enabling the malware to process sensitive information retrieved from the server.  A specific technique employed involves the utilization of an XOR key (0x7A) for obfuscating a list of 15 C2 servers and one URL associated with the 3CX website. This capability is essential for concealing malicious activity on the network and granting access to sensitive information through deobfuscated responses, facilitating command execution and data retrieval.  \n", "mitre_technique": {"id": "T1140", "name": "Deobfuscate/decode files or information", "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system."}, "pre-conditions": ["\nSmooth Operator uses a custom algorithm to obfuscate data.\n", "\nSmooth Operator malware is present in the system.\n", "\nThe malware has received data to be deobfuscated.\n"], "post-conditions": ["\nData theft from targeted organizations\n", "\nPresence of malware indicators of compromise (IOCs) in system memory and disk\n", "\nPotential for further malware infections\n", "\nModified browser history and data files\n", "\nModified 3CX desktop app executable files\n", "\nReputational damage to affected organizations\n", "\nCompromised 3CX systems\n", "\nUnusual process activity and network traffic patterns\n", "\nNetwork connections to malicious C2 servers\n", "\nLogs containing suspicious activity within the 3CX application and system logs\n", "\nNew files created in user directories (e.g., \"UpdateAgent\")\n"], "indicators": ["Filename: UpdateAgent", "Filename: .main_storage"]}, {"id": "190f9b3e-76be-43b8-8e73-5e58257c3a5d", "name": "Indicator Removal: File Deletion as used by the malware", "description": "Indicator removal during the second stage of malware execution is achieved through file deletion.  The UpdateAgent binary undergoes self-deletion from the disk immediately following execution. This action is intended to impede forensic analysis and attribution by eliminating evidence of its presence. \n\n\n", "mitre_technique": {"id": "T1070.004", "name": "Indicator removal: file deletion", "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."}, "pre-conditions": ["\nThe malware's code contains the functionality to delete itself from disk.\n", "\nThe malware is running in an environment with file system access permissions.\n", "\nThe malware has successfully executed its second stage.\n"], "post-conditions": ["\nPotential for further malicious activity.\n", "\nDeleted malware binaries from disk.\n", "\nLogs of beaconing activity.\n", "\nModified system registry settings.\n", "\nCompromised system with malware installed.\n", "\nNetwork connections to command and control (C2) servers.\n", "\nData exfiltration to external servers.\n", "\nPresence of malicious code within legitimate processes.\n", "\nObfuscated data files on disk.\n", "\nModified configuration files in the 3CX installation directory.\n"], "indicators": ["Filename: .main_storage"]}, {"id": "d4deb2e7-8968-41e5-891f-8b4ad4775384", "name": "Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware", "description": "Smooth Operator utilizes time-based evasion techniques to circumvent detection within virtualized environments or sandboxed conditions.  Execution is intermittently suspended for extended durations, typically exceeding one week, through the implementation of a sleep mechanism. This prolonged quiescence significantly impedes behavioral analysis within sandboxes, as these environments are frequently terminated or reset prior to the completion of the designated sleep period. Subsequent beaconing activity, involving communication with command-and-control servers, is scheduled to occur following this extended dormant phase.  The substantial delay inherent in this approach presents a challenge for sandbox simulations aiming to accurately replicate realistic infection scenarios characterized by prolonged attacker interaction with the malware. \n\n\n", "mitre_technique": {"id": "T1497.003", "name": "Virtualization/sandbox evasion: time based evasion", "description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time."}, "pre-conditions": ["\nNetwork connectivity for the malware to establish communication with its command and control server.\n", "\nSufficient processing power and memory for the malware to execute its code.\n", "\nThe malware has access to a system clock.\n", "\nA target system with a functioning operating system.\n", "\nThe malware is running.\n"], "post-conditions": ["\nAltered registry settings\n", "\nNetwork traffic to C2 servers\n", "\nDeleted files related to malware removal attempts\n", "\nData exfiltration\n", "\nNew files created (e.g., UpdateAgent)\n", "\nCompromised system\n", "\nMalware persistence\n", "\nLog entries indicating suspicious activity\n", "\nSystem instability\n", "\nModified system files\n"], "indicators": ["The filename \".main_storage\" is observed."]}]}, {"id": "0a47a46d-992b-43b5-a103-92dd6d7c8aed", "attack_steps": [{"id": "24af30db-fb08-40b6-a8b9-ccab15991842", "name": "Automated Collection as used by the malware", "description": "Automated Collection by Smooth Operator is facilitated through the active data gathering performed by its distinct stages from the compromised victim machine. The acquired data is subsequently integrated into either beacons transmitted to the command and control (C2) server or during exfiltration processes.\n\nData collection encompasses a range of categories, including system information such as operating system details, hardware specifications, and installed software lists. User data, encompassing login credentials, browsing history, email contents, and personal files, is also targeted.  Network information, comprising IP addresses, network configurations, and connected devices, is gathered. Furthermore, process information, including running applications, system processes, and memory usage, is collected.\n\nPrior to transmission, the collected data undergoes obfuscation techniques. These typically involve XOR encryption utilizing a single byte XOR key (0x7A) to scramble the data. Additionally, HTML encoding is employed, replacing special characters with their HTML equivalents to potentially circumvent detection by security systems.\n\nThe obfuscated data is subsequently incorporated into either beacons, which are regular transmissions sent to the C2 server containing various collected information and awaiting further instructions, or exfiltration processes, where large chunks of stolen data are directly transmitted to the attacker's server for subsequent analysis and exploitation.\n\n\nThis automated data collection mechanism enables Smooth Operator to acquire a comprehensive understanding of the victim machine and its environment. This information can be leveraged by attackers for a variety of malicious purposes, including lateral movement, data theft, ransomware deployment, and targeted attacks. \n", "mitre_technique": {"id": "T1119", "name": "Automated collection", "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals."}, "pre-conditions": ["\nThe victim machine has an internet connection.\n", "\nThe malware is running on a victim machine.\n", "\nThe victim machine has data to be collected.\n"], "post-conditions": ["\nAltered registry settings\n", "\nNew files created (e.g., \"UpdateAgent\")\n", "\nNetwork traffic to obfuscated C2 servers\n", "\n\"config.json\" file containing stolen system information\n", "\nData exfiltration\n", "\nPotential for further malware infection\n", "\nCompromised system\n", "\nLog entries indicating suspicious activity\n", "\nSystem instability\n", "\nBrowser data theft\n", "\nModified system files\n"], "indicators": ["A file named \"UpdateAgent\" is present.", "A file named \".main_storage\" is present."]}]}, {"id": "c6904448-f9d8-4793-8985-8aa6b8572593", "attack_steps": [{"id": "804ddc74-4883-4b52-b009-826c2510a491", "name": "Application Layer Protocol: Web Protocols as used by the malware", "description": "HTTPS is utilized by malware for communication with its command and control (C2) server, facilitating secure data transmission over the internet.  Encrypted communication channels are established via HTTPS, rendering intercepted data unintelligible to unauthorized parties. SSL/TLS protocols, employing digital certificates, authenticate the C2 server and ensure secure connection establishment. Malware transmits encrypted requests to the C2 server, seeking instructions or data. These requests may encompass tasks such as information exfiltration, supplementary malware download, or initiation of further attacks. Encrypted responses from the C2 server are received by the malware, subsequently decrypted and executed.  \n", "mitre_technique": {"id": "T1071.001", "name": "Application layer protocol: web protocols", "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."}, "pre-conditions": ["\nA victim machine infected with the Smooth Operator malware.\n", "\nThe victim machine has an active internet connection.\n", "\nThe victim machine's operating system allows for HTTPS communication.\n", "\nThe malware is running on a victim machine.\n", "\nA C2 server accessible via HTTPS.\n"], "post-conditions": ["\nNetwork traffic to C2 servers\n", "\nData exfiltration\n", "\nSystem compromise\n", "\nCommand and control server communication established\n", "\nNew files created (e.g., malware executables, configuration files)\n", "\nMalware persistence\n", "\nLogs containing suspicious activity\n", "\nAltered registry entries\n", "\nData remnants on victim machine\n", "\nModified system files\n"], "indicators": ["The domain \"azureonlinestorage.com\" is accessed.", "The URL \"https://akamaitechcloudservices.com/v2/fileapi\" is accessed.", "The URL \"https://glcloudservice.com/v1/status\" is accessed.", "The URL \"https://msedgepackageinfo.com/ms-webview\" is accessed.", "The URL \"https://pbxsources.com/queue\" is accessed."]}, {"id": "203478b5-cf2c-4ff1-a979-fccf0e59d14b", "name": "Fallback Channels as used by the malware", "description": "A list of fifteen distinct C2 server addresses is hardcoded within the malware's code. Prior to initiating a beacon transmission, a server address is randomly selected from this embedded list. Consequently, a single infected device may establish communication with multiple C2 servers over time. This dynamic beaconing strategy enhances the malware's resilience by providing alternative communication channels in the event that a C2 server becomes inaccessible or compromised.  \n", "mitre_technique": {"id": "T1008", "name": "Fallback channels", "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds."}, "pre-conditions": ["\nThe initial C2 connection fails.\n", "\nThe malware is running on a victim's system.\n", "\nA compromised system infected with the Smooth Operator malware.\n", "\nThe malware has established an initial connection to a C2 server.\n", "\nAn active internet connection on the victim's system.\n", "\nHTTPS protocol support on both the victim's system and the C2 servers.\n"], "post-conditions": ["\nHidden processes running\n", "\nPotential for further malware infections\n", "\nExfiltrated data files\n", "\nBackdoor connections established\n", "\nLoss of sensitive information\n", "\nCompromised system integrity\n", "\nNew user accounts created\n", "\nUnusual network traffic logs\n", "\nAltered registry entries\n", "\nIncreased risk of data breaches\n", "\nModified system files\n", "\nDisruption of business operations\n"], "indicators": ["A domain name is used.", "A file named \"UpdateAgent\" is present."]}]}, {"id": "1e95d125-4a47-422d-9462-b6a624b16296", "attack_steps": [{"id": "0b98fd12-9599-48dc-86ee-36af656febee", "name": "Automated Exfiltration as used by the malware", "description": "The precise mechanism employed for automated data exfiltration by Smooth Operator malware remains to be elucidated.  While the provided textual description outlines several salient characteristics of the malware, it does not explicitly detail the specific methods utilized for exfiltration.\n\nDeductions regarding potential exfiltration methodologies can be inferred from the available information and prevalent malware tactics. Data collection is likely achieved through a variety of means, including system activity monitoring, user action logging, and sensitive file access.  The text alludes to \"custom data obfuscation\" employed for both beaconing (communication with command-and-control servers) and exfiltration, suggesting that stolen data is encoded to impede detection.\n\nThe statement that \"the extracted domain and account name are concatenated together, separated by a semicolon and exfiltrated\" implies that the exfiltration process likely occurs through a communication channel established by Smooth Operator, potentially diverging from the conventional C2 channel for this specific action. \n\n\nSeveral potential exfiltration mechanisms can be hypothesized:\n\nThe establishment of a novel, dedicated channel specifically designed for data exfiltration is a possibility. Such a channel might leverage techniques such as DNS tunneling or ICMP tunneling, or utilize HTTP POST requests directed to seemingly innocuous websites.\n\nAlternatively, the malware could modify its existing communication with the C2 server to incorporate the exfiltrated data. This modification might involve encapsulating the data within a specific command or message type transmitted to the C2 server, or employing steganography to conceal the data within ostensibly benign files or images sent to the C2 server.\n\nTo ascertain the precise exfiltration method employed, in-depth analysis of several factors is required:\n\nThe malware's source code must be scrutinized to identify communication routines and data handling procedures.\nNetwork traffic emanating from and directed towards the infected system should be meticulously examined for any anomalous patterns.\nLogs maintained on the C2 server should be thoroughly reviewed for any indication of unusual data transfers or requests originating from compromised machines. \n\n\n", "mitre_technique": {"id": "T1020", "name": "Automated exfiltration", "description": "Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection."}, "pre-conditions": ["\nData has been automatically collected by Smooth Operator.\n", "\nSmooth Operator malware is running.\n", "\nThe custom data obfuscation algorithm is functional.\n", "\nA connection to a C2 server is established.\n"], "post-conditions": ["\nCompromised system functionality\n", "\nIndicator of Compromise (IOC) files on compromised systems.\n", "\nObfuscated communication logs\n", "\nPotential for further malware infections\n", "\nLateral movement within the network\n", "\nExfiltrated data files\n", "\nUnusual network traffic to command and control servers\n", "\nNew files created with malicious content\n", "\nAltered registry entries\n", "\nLogs containing suspicious activity\n", "\nNetwork reconnaissance\n", "\nModified system files\n", "\nData theft\n"], "indicators": ["A file named \"UpdateAgent\" is present.", "A file named \".main_storage\" is present."]}]}]