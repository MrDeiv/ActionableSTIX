[{"id": "33999637-4608-41ca-a877-55fe910142d3", "attack_steps": [{"id": "5bf4d041-6dbd-4351-adeb-e70648a108f7", "name": "Command and Scripting Interpreter: Python as used by the malware", "description": "Python is utilized by MuddyWater within its malicious activities, as evidenced by the deployment of a PyInstaller-packed Python script.  This script is obfuscated through the packaging process facilitated by PyInstaller, resulting in an executable file format that resembles conventional software. \n\n\n", "mitre_technique": {"id": "T1059.006", "name": "Command and scripting interpreter: python", "description": "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the python.exe interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables."}, "pre-conditions": ["\nA Python interpreter is available on the victim system.\n", "\nA system running a compatible operating system with a Python interpreter installed.\n", "\nThe malware must possess Python code to be executed.\n"], "post-conditions": ["\nDownloaded malicious executables (e.g., index.exe)\n", "\nCredential dumps (e.g., .txt, .csv)\n", "\nObfuscated Python scripts (.py)\n", "\nModified registry keys\n", "\nSuspicious network connections to command and control servers\n", "\nMalware persistence\n", "\nNetwork reconnaissance\n", "\nObfuscated VBS scripts (.vbs)\n", "\nSystem instability\n", "\nLog files containing unusual activity\n", "\nModified system files\n", "\nData exfiltration\n", "\nPhishing email artifacts\n", "\nTelegram bot API interactions logs\n", "\nCompromised user accounts\n"], "indicators": []}], "pre-conditions": ["\nA Python interpreter is available on the victim system.\n", "\nA system running a compatible operating system with a Python interpreter installed.\n", "\nThe malware must possess Python code to be executed.\n"], "post-conditions": ["\nDownloaded malicious executables (e.g., index.exe)\n", "\nCredential dumps (e.g., .txt, .csv)\n", "\nObfuscated Python scripts (.py)\n", "\nModified registry keys\n", "\nSuspicious network connections to command and control servers\n", "\nMalware persistence\n", "\nNetwork reconnaissance\n", "\nObfuscated VBS scripts (.vbs)\n", "\nSystem instability\n", "\nLog files containing unusual activity\n", "\nModified system files\n", "\nData exfiltration\n", "\nPhishing email artifacts\n", "\nTelegram bot API interactions logs\n", "\nCompromised user accounts\n"]}, {"id": "367b936a-f95c-44d7-b160-0abe4f83022f", "attack_steps": [{"id": "d29b990d-5c2b-48ac-981b-e54994fd4e35", "name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder as used by the malware", "description": "A registry run key is utilized to initiate the execution of the \"Small Sieve\" malware.  This involves the insertion of malicious code into a designated location within the Windows registry (HKCU\\Software \\Microsoft\\ Windows\\CurrentVersion \\Run). Consequently, upon system boot or user logon, \"Small Sieve\" is automatically launched and commences its malicious operations. \n", "mitre_technique": {"id": "T1547.001", "name": "Boot or logon autostart execution: registry run keys / startup folder", "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level."}, "pre-conditions": ["\nNetwork connectivity may be required for initial deployment or communication with a command and control server.\n", "\nA Windows operating system is present.\n", "\nThe target system is running a supported operating system.\n", "\nThe malware has access to the registry.\n"], "post-conditions": ["\nLog entries indicating suspicious activity\n", "\nModified or deleted files containing sensitive information\n", "\nNetwork traffic to command and control servers\n", "\nMalware persistence\n", "\nNew files in user directories (malware binaries)\n", "\nRegistry modifications (persistence keys)\n", "\nExecution of malicious code\n", "\nSystem instability\n", "\nAltered system settings\n", "\nData exfiltration\n", "\nCompromised user accounts\n"], "indicators": ["Registry value name: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookMicrosift", "Path: %AppData%\\OutlookMicrosift\\index.exe"]}], "pre-conditions": ["\nNetwork connectivity may be required for initial deployment or communication with a command and control server.\n", "\nA Windows operating system is present.\n", "\nThe target system is running a supported operating system.\n", "\nThe malware has access to the registry.\n"], "post-conditions": ["\nLog entries indicating suspicious activity\n", "\nModified or deleted files containing sensitive information\n", "\nNetwork traffic to command and control servers\n", "\nMalware persistence\n", "\nNew files in user directories (malware binaries)\n", "\nRegistry modifications (persistence keys)\n", "\nExecution of malicious code\n", "\nSystem instability\n", "\nAltered system settings\n", "\nData exfiltration\n", "\nCompromised user accounts\n"]}, {"id": "b4323a40-c828-4e58-8ead-b4fb8a4ff411", "attack_steps": [{"id": "89c861fb-df33-4dfb-91a5-cde29b2e41e6", "name": "Obfuscated Files or Information as used by the malware", "description": "The Small Sieve framework implemented by MuddyWater employs a multi-layered obfuscation technique to safeguard program strings and updated Telegram credentials.  Hexadecimal byte swapping, executed according to a custom scheme, is utilized to rearrange the order of bytes within the strings, rendering them unintelligible. Subsequently, an obfuscated Base64 encoding function is applied to the already altered data, compounding the level of obscurity. This dual-layered obfuscation significantly impedes the ability of analysts to discern the original meaning of the strings, effectively concealing sensitive information such as program commands and communication details.  \n", "mitre_technique": {"id": "T1027.013", "name": "Obfuscated files or information: encrypted/encoded file", "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as Software Packing, Steganography, and Embedded Payloads, share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., Deobfuscate/Decode Files or Information) at the time of execution/use."}, "pre-conditions": ["\nThe malware has access to program strings and Telegram credentials.\n", "\nThe malware possesses the capability to implement custom hex byte swapping encoding schemes.\n", "\nThe malware requires a method to encode information.\n", "\nThe malware has the ability to utilize obfuscated Base64 functions.\n"], "post-conditions": ["\nDeleted or altered files containing sensitive information.\n", "\nCompromised system security and stability.\n", "\nPresence of malware signatures and indicators of compromise (IOCs).\n", "\nSpread of malware and ransomware infections.\n", "\nNew user accounts created with elevated privileges.\n", "\nUnusual network traffic patterns and connections to suspicious IP addresses.\n", "\nLoss of sensitive data and intellectual property.\n", "\nFinancial losses due to fraudulent activities.\n", "\nLog files containing malicious activity and unauthorized access attempts.\n", "\nBackdoors and remote access tools installed on compromised systems.\n", "\nDamage to reputation and trust.\n", "\nModified system files and registry entries.\n", "\nIncreased risk of data breaches and identity theft.\n"], "indicators": ["Small Sieve sample (Filename: gram_app.exe)", "Small Sieve sample (Filename: index.exe)", "Path: %LocalAppData%\\MicrosoftWindowsOutlookDataPlus.txt", "Registry value name: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookMicrosift", "Path: %AppData%\\OutlookMicrosift\\index.exe"]}, {"id": "6bdb716c-3337-42b7-948c-63b2034b24d6", "name": "Execution Guardrails as used by the malware", "description": "The document presents an analysis of Tactics, Techniques, and Procedures (TTPs) employed by the threat actor MuddyWater.  A unique payload designated as \"Small Sieve\" is identified, characterized by a specific execution requirement: the inclusion of the word \"Platypus\" as a command-line argument for functionality. This execution constraint aligns with the TTP category Execution Guardrails (T1480).  Furthermore, the actor's demonstrated capability to disable local proxy settings (T1562.001) is highlighted as a technique employed to evade detection and analysis. The information presented is classified under the Traffic Light Protocol (TLP) rating of WHITE, indicating public availability. A product identifier, AA22-055A, is associated with a specific malware sample or toolset potentially linked to MuddyWater, facilitating identification and analysis. \n\n\n", "mitre_technique": {"id": "T1480.001", "name": "Execution guardrails: environmental keying", "description": "Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of Execution Guardrails that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment."}, "pre-conditions": ["\nThe word \"Platypus\" is passed to the Small Sieve payload on the command line.\n", "\nThe ability to execute commands in a terminal or command prompt.\n", "\nAccess to the command line interface.\n", "\nA system running the Small Sieve malware.\n"], "post-conditions": ["\nData exfiltration logs\n", "\nCompromised email communications\n", "\nAltered registry entries\n", "\nBackdoor executables\n", "\nMalware infection\n", "\nNew user accounts created\n", "\nModified system files\n", "\nHidden files and folders\n", "\nData theft\n", "\nUnusual network traffic logs\n", "\nSystem instability\n", "\nSuspicious process activity in event logs\n", "\nDisruption of services\n", "\nLoss of sensitive information\n", "\nNetwork intrusion\n", "\nCompromised user accounts\n"], "indicators": ["Small Sieve sample (Filename: gram_app.exe)", "Small Sieve sample (Filename: index.exe)", "Path: %AppData%\\OutlookMicrosift\\index.exe"]}, {"id": "8ec6a29a-bb9b-4587-a3d0-db9478555019", "name": "Masquerading: Match Legitimate Name or Location as used by the malware", "description": "Deceptive filenames are employed by malware authors to obfuscate their malicious intent. This involves utilizing filename variations that closely resemble legitimate software names, such as \"Microsoft\" (Microsift) and \"Outlook,\" thereby increasing the likelihood of user acceptance during file browsing processes.  \n", "mitre_technique": {"id": "T1036.005", "name": "Masquerading: match legitimate name or location", "description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous."}, "pre-conditions": ["\nInternet connectivity for retrieving information about legitimate names and locations.\n", "\nAccess to a system capable of running the malware.\n", "\nStorage space on the system to store the malware code and data.\n", "\nThe malware is designed to use legitimate names or locations.\n"], "post-conditions": [], "indicators": ["Path: %LocalAppData%\\MicrosoftWindowsOutlookDataPlus.txt", "Registry value name: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookMicrosift", "Path: %AppData%\\OutlookMicrosift\\index.exe"]}], "pre-conditions": ["\nThe malware has access to program strings and Telegram credentials.\n", "\nThe malware possesses the capability to implement custom hex byte swapping encoding schemes.\n", "\nThe malware requires a method to encode information.\n", "\nThe malware has the ability to utilize obfuscated Base64 functions.\n", "\nThe word \"Platypus\" is passed to the Small Sieve payload on the command line.\n", "\nThe ability to execute commands in a terminal or command prompt.\n", "\nAccess to the command line interface.\n", "\nA system running the Small Sieve malware.\n", "\nInternet connectivity for retrieving information about legitimate names and locations.\n", "\nAccess to a system capable of running the malware.\n", "\nStorage space on the system to store the malware code and data.\n", "\nThe malware is designed to use legitimate names or locations.\n"], "post-conditions": ["\nDeleted or altered files containing sensitive information.\n", "\nCompromised system security and stability.\n", "\nPresence of malware signatures and indicators of compromise (IOCs).\n", "\nSpread of malware and ransomware infections.\n", "\nNew user accounts created with elevated privileges.\n", "\nUnusual network traffic patterns and connections to suspicious IP addresses.\n", "\nLoss of sensitive data and intellectual property.\n", "\nFinancial losses due to fraudulent activities.\n", "\nLog files containing malicious activity and unauthorized access attempts.\n", "\nBackdoors and remote access tools installed on compromised systems.\n", "\nDamage to reputation and trust.\n", "\nModified system files and registry entries.\n", "\nIncreased risk of data breaches and identity theft.\n", "\nData exfiltration logs\n", "\nCompromised email communications\n", "\nAltered registry entries\n", "\nBackdoor executables\n", "\nMalware infection\n", "\nNew user accounts created\n", "\nModified system files\n", "\nHidden files and folders\n", "\nData theft\n", "\nUnusual network traffic logs\n", "\nSystem instability\n", "\nSuspicious process activity in event logs\n", "\nDisruption of services\n", "\nLoss of sensitive information\n", "\nNetwork intrusion\n", "\nCompromised user accounts\n"]}, {"id": "30b167b9-60da-449c-acab-504b7d003df6", "attack_steps": [{"id": "638097bf-1dbe-41b5-ac8b-0e6a324a0bad", "name": "Application Layer Protocol: Web Protocols as used by the malware", "description": "Communication between the malware and its command-and-control server is facilitated via the Telegram API over HTTPS. This interaction falls under the classification of \"Command and Control: Application Layer Protocol: Web Protocols.\"  HTTPS encryption is employed to secure the transmission of messages, thereby hindering interception and analysis. \n\n\n", "mitre_technique": {"id": "T1071.001", "name": "Application layer protocol: web protocols", "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."}, "pre-conditions": ["", "\nThe Telegram API must be accessible.\n", "\nSmall Sieve malware has access to the necessary system resources to establish a network connection and communicate with the Telegram Bot API.\n", "\nAn active internet connection is required for communication via HTTPS.\n"], "post-conditions": ["\nBackdoor programs installed\n", "\nAltered registry settings\n", "\nData exfiltration logs\n", "\nReputational damage\n", "\nUnusual log entries\n", "\nCompromised email communications\n", "\nData breaches and theft\n", "\nNew user accounts created\n", "\nFinancial losses\n", "\nNetwork traffic to malicious servers\n", "\nHidden files and folders\n", "\nSystem compromise and control\n", "\nNetwork disruption and instability\n", "\nLegal repercussions\n", "\nDeleted or modified evidence\n", "\nModified system files\n"], "indicators": []}, {"id": "7c568a5d-753a-43c5-b98c-e977feb4972e", "name": "Data Encoding: Non-Standard Encoding as used by the malware", "description": "MuddyWater utilizes a custom hex byte swapping encoding scheme to obfuscate tasking traffic. This technique, classified as Data Encoding: Non-Standard Encoding, involves modifying the standard representation of data through a specific pattern of hexadecimal byte swapping.  This process renders the traffic more difficult to interpret by security tools and analysts engaged in tracking malicious activity. \n", "mitre_technique": {"id": "T1132.002", "name": "Data encoding: non-standard encoding", "description": "Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request."}, "pre-conditions": ["\nAn active internet connection for communication with Telegram API and C2 servers.\n", "\nAccess to the necessary files and resources within the compromised system.\n", "\nThe target machine has an active internet connection.\n", "\nThe malware Small Sieve is present in the system.\n"], "post-conditions": ["\nEncrypted data transfers\n", "\nModified system registry entries\n", "\nNetwork traffic to command and control servers\n", "\nMalware persistence\n", "\nNew user accounts created\n", "\nSuspicious files with unusual names or extensions\n", "\nBackdoors installed on the system\n", "\nUnusual DNS queries\n", "\nNetwork reconnaissance\n", "\nData theft\n", "\nAltered log files with deleted or modified entries\n", "\nSystem instability\n", "\nCommand and control infrastructure established\n", "\nLeftover malware code fragments\n", "\nModified system configurations\n", "\nCompromised user accounts\n"], "indicators": []}], "pre-conditions": ["", "\nThe Telegram API must be accessible.\n", "\nSmall Sieve malware has access to the necessary system resources to establish a network connection and communicate with the Telegram Bot API.\n", "\nAn active internet connection is required for communication via HTTPS.\n", "\nAn active internet connection for communication with Telegram API and C2 servers.\n", "\nAccess to the necessary files and resources within the compromised system.\n", "\nThe target machine has an active internet connection.\n", "\nThe malware Small Sieve is present in the system.\n"], "post-conditions": ["\nBackdoor programs installed\n", "\nAltered registry settings\n", "\nData exfiltration logs\n", "\nReputational damage\n", "\nUnusual log entries\n", "\nCompromised email communications\n", "\nData breaches and theft\n", "\nNew user accounts created\n", "\nFinancial losses\n", "\nNetwork traffic to malicious servers\n", "\nHidden files and folders\n", "\nSystem compromise and control\n", "\nNetwork disruption and instability\n", "\nLegal repercussions\n", "\nDeleted or modified evidence\n", "\nModified system files\n", "\nEncrypted data transfers\n", "\nModified system registry entries\n", "\nNetwork traffic to command and control servers\n", "\nMalware persistence\n", "\nNew user accounts created\n", "\nSuspicious files with unusual names or extensions\n", "\nBackdoors installed on the system\n", "\nUnusual DNS queries\n", "\nNetwork reconnaissance\n", "\nData theft\n", "\nAltered log files with deleted or modified entries\n", "\nSystem instability\n", "\nCommand and control infrastructure established\n", "\nLeftover malware code fragments\n", "\nModified system configurations\n", "\nCompromised user accounts\n"]}]