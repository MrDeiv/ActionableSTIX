[{"id": "04d65d03-5545-429a-a8c6-ef88caed6f46", "attack_steps": [{"id": "c2e3ecd0-a6da-4f67-ada9-d2d344b9c758", "name": "Exploit Public-Facing Application as used by the malware", "description": "The COLDSTEEL malware exhibits techniques for handle manipulation within Windows systems.  Processes and thread handle creation/duplication events are intercepted via ObRegisterCallbacks. Based on image path or PID, user-mode processes listed in the malware's internal global process list have their \"PROCESS_TERMINATE\" permission selectively removed. This action suggests an attempt to impede the termination of compromised targets by legitimate system processes.\n\nVariations of COLDSTEEL demonstrate functional differences, including support for Windows 10 absent in older versions.  Deployment of COLDSTEEL is strongly implied to occur following exploitation of a public-facing application. Exploitation likely leverages vulnerabilities such as Log4j to achieve initial access. Subsequent takeover of the system by COLDSTEEL involves manipulation of system processes and potentially further malicious actions.\n\n\nVulnerabilities within publicly accessible applications, such as Log4j, are exploited to gain control of vulnerable systems, enabling arbitrary code execution.  This compromised state facilitates the deployment of the COLDSTEEL malware onto the affected system. Deployment methods may include downloading and executing the malware or utilizing existing backdoors/tunnels established during initial access. \n", "mitre_technique": {"id": "T1190", "name": "Exploit public-facing application", "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration."}, "pre-conditions": ["\nThe attacker possesses knowledge of the specific vulnerabilities exploited.\n", "\nA vulnerable public-facing application exists.\n", "\nThe attacker has network access to the target system.\n"], "post-conditions": ["\nWhat commands are being executed?\n", "\nMalware delivery: The URLs might lead to sites hosting malware that could be downloaded and executed.\n", "\nData exfiltration:  The attacker might be trying to steal data from the targeted systems.\n", "223.34.198, 103.224.80.76", "\nWeb server exploitation: Attempting to access or exploit vulnerabilities on web servers at the given IP addresses.\n", "\nWhat files are being accessed or modified?\n", "\nDomain names: bd82563c72e6f72adff76bd8c6940c6037516a2a89c5fd0c23b8af622f0e91939b486e9db7faef192.95.36[.]61vpn2.smi1egate[.]comsvn1.smi1egate[.]comgiga.gnisoft[.]com\n", "\nURLs: hxxp://104.223.34.[.]198/111.php, hxxp://104.223.34.[.]198/1dll.php, hxxp://104.223.34.[.]198/syn.php\n", "\nWhat network connections are being established?\n", "To determine the consequences and traces, I need more context about the specific actions being performed."], "indicators": ["The file name is \"newdev.dll\".", "The path includes \"AppData\\Roaming\\newdev.dll\"."]}]}, {"id": "5af195c9-9fc0-48fa-a198-68c6db462c66", "attack_steps": [{"id": "a964d3c0-b53b-4de3-9694-394e26519ec1", "name": "Command and Scripting Interpreter: Windows Command Shell as used by the malware", "description": "Command execution functionality is exhibited by various COLDSTEEL malware variants through distinct mechanisms. Certain variants directly utilize cmd.exe for command execution, potentially mimicking legitimate system processes.  \n\nTo circumvent security measures focused on cmd.exe executions, other variants employ obfuscation techniques. These techniques involve copying cmd.exe to the dllhost.exe process, leveraging the reduced scrutiny associated with dllhost.exe processes to facilitate covert command execution. \n\nA unique custom command, not present in the original Gh0st RAT source code, has been incorporated into the backdoor functionality. This custom command transmits information pertaining to active system sessions to the attacker's server, demonstrating the malware's capabilities beyond basic command execution.  \n\n\nThe precise technical implementation of command transmission to cmd.exe (e.g., through shellcode injection or API calls) remains subject to further analysis. \n", "mitre_technique": {"id": "T1059.003", "name": "Command and scripting interpreter: windows command shell", "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH."}, "pre-conditions": ["\nA functioning Windows Command Shell is available.\n", "\nThe malware has successfully infected the target machine.\n", "\nThe malware has access to the Windows Command Shell.\n", "\nA Windows operating system is present.\n"], "post-conditions": ["\nPotential Data Exfiltration\n", "\nModified Command Execution Logs\n", "\nSystem Information Compromise\n", "\nScreenshots and Cursor Position Data\n", "\nDLL Injection Traces in Process Memory\n", "\nModified Registry Keys\n", "\nSystem Event Logs (service installation/modification, process creation)\n", "\nFile Access Logs (modified or accessed files)\n", "\nFile and Directory Access Changes\n", "\nNetwork Traffic Logs (TCP connections with C2 server)\n", "\nNew Files Created (e.g., malware binaries, configuration files)\n", "\nProcess Information Exposure\n", "\nService Installation\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "65d50239-092e-497f-a9a8-1a10074ed5e7", "name": "System Services: Service Execution as used by the malware", "description": "The COLDSTEEL malware family exhibits continuous development, with variations such as FBI20111024, MileStone 2016, and MileStone 2017, each potentially possessing distinct capabilities and targeting specific entities.  \n\nPersistence within infected systems is achieved through the exploitation of Windows services, enabling the malware to execute even after system restarts and ensuring prolonged access for malicious actors.\n\nSystem information gathering is conducted by COLDSTEEL to acquire details regarding the infected machine, including operating system version, installed software, and network configurations. \n\nCommunication with a Command & Control (C2) server is established via raw TCP connections, facilitating the transmission of instructions to COLDSTEEL and the receipt of gathered information from the compromised system.\n\nExploitation of Windows services for malicious code execution is a key characteristic of COLDSTEEL. This process involves the creation of a new Windows service, often disguised with a legitimate-sounding name, followed by the injection of pre-loaded malicious code within its configuration files or as separate modules. Upon service initiation, the malicious code is executed, potentially evading detection by security software and users due to the elevated privileges associated with services.\n\nPotential impacts of COLDSTEEL infection include data theft, facilitated by the gathered system information which can identify valuable assets on the compromised machine, and remote control, enabled by C2 commands that may grant attackers full control over the infected system, allowing for the installation of additional malware, surveillance of user activity, or launching further attacks against other systems within the network.\n\nMitigation strategies encompass regular security updates to address known vulnerabilities exploited by COLDSTEEL, the utilization of reputable anti-malware software with up-to-date definitions for detection and removal of malware, and the implementation of network monitoring tools to detect suspicious communication patterns indicative of C2 connections. \n\n\n", "mitre_technique": {"id": "T1569.002", "name": "System services: service execution", "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net."}, "pre-conditions": ["\nSystem privileges sufficient to create and execute services.\n", "\nThe system is running a supported version of Windows.\n", "\nCOLDSTEEL malware code is present on the system.\n", "\nA vulnerable system running a supported version of Windows.\n"], "post-conditions": ["\nSystem instability\n", "\nUnusual file modifications or creations\n", "\nModified system registry entries\n", "\nPotential for further malware infections\n", "\nPresence of malicious code in memory\n", "\nLoss of sensitive information\n", "\nNetwork traffic to C2 server IPs\n", "\nData exfiltration\n", "\nAltered firewall rules\n", "\nWindows service installation\n", "\nHidden processes running in the background\n", "\nNew log files with suspicious activity\n", "\nCompromised system functionality\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}]}, {"id": "7ec579f0-78c6-433b-90b7-52e8103ea925", "attack_steps": [{"id": "878a4e46-6ee0-450b-bff5-895850fa6c8e", "name": "Create or Modify System Process: Windows Service as used by the malware", "description": "A new Windows service is created by COLDSTEEL malware utilizing the Create or Modify System Process technique (T1543.003).  This newly created service is configured to automatically initiate upon system reboots. The persistence of COLDSTEAL on the compromised system is ensured through the automatic startup configuration of the service, enabling continuous background operation even after system reboots. \n", "mitre_technique": {"id": "T1543.003", "name": "Create or modify system process: windows service", "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."}, "pre-conditions": ["\nAn attacker possesses sufficient privileges to create or modify system processes.\n", "\nA Windows system with administrative privileges is available.\n", "\nThe system has a valid Windows operating system installed.\n", "\nNetwork connectivity is required to communicate with the C2 server.\n", "\nThe malware code for COLDSTEEL is accessible.\n"], "post-conditions": ["\nUnusual process activity\n", "\nSystem instability\n", "\nLog files containing malicious activity indicators\n", "\nModified system registry entries\n", "\nPotential for further malware infections\n", "\nIndicators of compromise (IOCs) in network traffic analysis\n", "\nData exfiltration\n", "\nNew files created in various directories\n", "\nWindows service installation\n", "\nAltered system configurations\n", "\nNetwork traffic logs showing communication with C2 server\n", "\nCompromised system functionality\n"], "indicators": ["file : name = 'newdev.dll'", "file : parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}]}, {"id": "4587de83-4c59-4195-9bc4-51a3b1fb2daa", "attack_steps": [{"id": "cb10da40-23b8-4bc3-a1a9-b91df8102720", "name": "Obfuscated Files or Information: Software Packing as used by the malware", "description": "The MileStone2017 malware variants are packaged using Themida, a commercial packer renowned for its robust anti-disassembly and obfuscation capabilities. This packaging technique falls under the Defense Evasion tactic as it is designed to impede the analysis and reverse engineering of the malicious code.  Themida achieves this through several mechanisms:\n\nThe original source code undergoes rewriting and rearrangement, resulting in significant obfuscation that hinders comprehension of its functionality by analysts. \n\nAnti-debugging techniques are implemented within Themida to detect the attachment of debuggers to the process, thereby preventing analysis tools from effectively inspecting the malware's behavior.\n\nResources embedded within the packed executable are encrypted, further obscuring their contents and hindering static analysis.\n\n\nThe utilization of Themida by the MileStone2017 developers aims to significantly increase the difficulty for security researchers to analyze and comprehend the malware's operational mechanisms, ultimately enhancing its potential to evade detection and execute malicious activities undetected. \n", "mitre_technique": {"id": "T1027.002", "name": "Obfuscated files or information: software packing", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."}, "pre-conditions": ["\nThe malware utilizes software packing techniques.\n", "\nAccess to the infected system.\n", "\nThe malware is present in the system.\n", "\nTools capable of analyzing packed files (e.g., debuggers, disassemblers).\n"], "post-conditions": ["\nSystem instability\n", "\nData corruption\n", "\nLog entries indicating unauthorized access or modifications\n", "\nHidden files and folders\n", "\nUnusual network traffic to unknown IP addresses\n", "\nLoss of system control\n", "\nModified system files\n", "\nNew processes running with suspicious names and behavior\n", "\nPerformance degradation\n", "\nBackdoors and malware payloads\n", "\nIncreased security vulnerabilities\n", "\nAltered registry entries\n"], "indicators": ["file : name = ' newdev . dll'", "file : hashes.sha256 =  '...' (Replace with actual SHA256 hash)", "file : hashes.md5 =  '...' (Replace with actual MD5 hash)", "file : parent_directory_ref.path = 'C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming'"]}, {"id": "f6365e2a-64c9-4680-ae96-d76b51a21772", "name": "Modify Registry as used by the malware", "description": "Registry modification is executed by COLDSTEEL malware through direct manipulation of registry keys.  A description is appended to its service entry within the registry. This action is undertaken to obfuscate its malicious intent and potentially circumvent detection by security mechanisms reliant on conventional service descriptions. \n\n\n", "mitre_technique": {"id": "T1112", "name": "Modify registry", "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution."}, "pre-conditions": ["\nThe malware has successfully infected the target system.\n", "\nThe malware has gained sufficient privileges to modify registry keys.\n", "\nA Windows operating system is present.\n"], "post-conditions": ["\nSystem instability\n", "\nService disruption\n", "\nData loss or corruption\n", "\nNew .dll file in %APPDATA%\\newdev\n", "\nPresence of Themida packer remnants\n", "\nPerformance degradation\n", "\nModified registry entries for service creation and hiding\n", "\nRemote access by attacker\n", "\nLog files containing suspicious activity\n", "\nAltered system configurations\n", "\nNetwork connections to command and control servers\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "2c11f0d9-084f-4b08-8fbd-4397c57aeb3f", "name": "Indicator Removal: File Deletion as used by the malware", "description": "Indicator removal through file deletion is executed by COLDSTEEL variants, such as MileStone2017, via the following processes:\n\nA malicious code injection into the Windows operating system is facilitated by the creation of a new service often designated with a legitimate-sounding name to circumvent detection.  The core malware functionality resides within a DLL file, which is subsequently loaded into the newly created service process. Upon service initiation, the ServiceMain function within the injected DLL is executed.\n\nWithin the ServiceMain function, COLDSTEEL likely possesses code designed to scan for specific indicators of compromise (IOCs). These IOCs may encompass log files documenting suspicious activity, temporary files generated by security software or antivirus programs, and registry entries associated with security tools. \n\nIdentified IOC files are subsequently deleted from the infected machine utilizing the Windows API (Application Programming Interface). This action aims to conceal the malware's presence from security analysts and investigators while removing evidence of past malicious activities.  \n\n\nVariations in the specific IOCs targeted and deletion methods may exist across different COLDSTEEL variants. \n", "mitre_technique": {"id": "T1070.004", "name": "Indicator removal: file deletion", "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."}, "pre-conditions": ["\nThe malware has successfully executed.\n", "\nOperating System\n", "\nExecution permissions for the malware process\n", "\nAccess to the file system\n", "\nThe files to be deleted exist on the system.\n"], "post-conditions": ["\nDeleted files (1.bat, syn.exe, 1.dll)\n", "\nNetwork traffic logs showing communication with the specified IP addresses and domains\n", "\nPowerShell execution logs\n", "\nBackdoors or other malicious tools installed on the system\n", "bat, syn.exe, 1.dll)", "\nSystem event logs indicating process creation and deletion\n", "\nModified system configuration files\n"], "indicators": ["file : name = 'newdev.dll'", "file : parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}, {"id": "c8c24140-e671-406f-886b-56456de5c827", "name": "Access Token Manipulation: Create Process with Token as used by the malware", "description": "Malware samples exhibiting shared characteristics are analyzed for their potential threat level. These characteristics include digital signatures obtained through certificate theft to circumvent security filters and utilization of command and control (C2) infrastructure comprising designated domains and IP addresses.  \n\nThe implementation of the ObRegisterCallbacks technique within a Windows driver framework enables malware to intercept system calls pertaining to process creation. This suggests a focus on manipulating process creation mechanisms, potentially for stealth or privilege escalation purposes. \n\nThe \"Create Process with Token\" technique allows malware to generate new processes inheriting a specific access token.  This function deviates from the standard inheritance of a parent process's access token, granting malware the capability to execute as different users, including elevated privileges such as SYSTEM. This manipulation can facilitate bypassing security measures reliant on user permissions.\n\nThe \"Milestone2016\" variant demonstrates this technique by creating processes under the identity of the \"ANONYMOUS\" user. \n\nAccess token manipulation techniques pose a significant threat due to their ability to execute code with elevated privileges, enabling complete system control for attackers.  Furthermore, these techniques facilitate lateral movement within networks and evasion of detection by operating under trusted user or service identities.\n\n\nFortinet's FortiEDR solution demonstrates effectiveness in detecting and mitigating these threats through behavioral analysis identifying suspicious process creation patterns and API utilization such as CreateProcessWithTokenW.  Threat intelligence plays a crucial role in recognizing malicious domains, IP addresses, and malware signatures associated with these campaigns. Real-time response capabilities enable swift blocking of identified threats through process and network connection interruptions. \n", "mitre_technique": {"id": "T1134.002", "name": "Access token manipulation: create process with token", "description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas."}, "pre-conditions": ["\nNetwork connectivity may be required for communication with a command and control server.\n", "\nThe malware has obtained elevated privileges.\n", "\nA vulnerable operating system.\n", "\nA process is running on the target system.\n", "\nThe malware code is present and loaded onto the target system.\n"], "post-conditions": ["\nSystem compromise\n", "\nNetwork traffic to C2 server\n", "\nRegistry modifications\n", "\nNew files created with malicious content\n", "\nModified system files\n", "\nLog entries indicating suspicious activity\n", "\nFirewall bypass attempts documented in logs\n", "\nService persistence\n", "\nData exfiltration\n", "\nUnusual network connections established\n", "\nWindows service installation\n", "\nNetwork communication redirection\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}]}, {"id": "6fdd923b-6546-4e7c-a7fd-45e8eb86adae", "attack_steps": [{"id": "9305109c-44ef-49ad-9680-1b4bf75c378e", "name": "System Information Discovery as used by the malware", "description": "COLDSTEEL malware variants exhibit variations in command structures and functionalities compared to the original Gh0st RAT source code. Certain variants utilize cmd.exe processes mimicking dllhost.exe for security evasion purposes. A distinctive command facilitates the transmission of active system session information to a remote server, potentially for log manipulation or concealment of the initial compromise account.\n\nFunctional discrepancies exist across variants, including support levels for Windows 10 and potential memory leaks identified in specific variants such as FBI20111024, MileStone 2016, and MileStone 2017.\n\nSystem information discovery is employed by the malware to gather comprehensive data from infected machines. This encompasses operating system details (version, build number, architecture), hardware specifications (CPU details, RAM capacity, available disk space), network configuration (IP address, MAC address, active connections), and user information (logged-in accounts, permissions).\n\nThe purpose of this extensive system information collection is multifaceted. It enables the assessment of target machine vulnerabilities, facilitates the customization of attacks based on specific configurations and installed software, and contributes to the establishment of a detailed profile for future malicious activities such as data theft or remote control. \n\n\n", "mitre_technique": {"id": "T1082", "name": "System information discovery", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nA network connection exists between the infected system and the attacker's server.\n", "\nThe malware is running on a target system.\n", "\nThe backdoor functionality is active within the malware.\n"], "post-conditions": ["\nSystem compromise\n", "\nHidden files or folders\n", "\nUnusual log entries in event viewer\n", "\nRegistry modifications\n", "\nBackdoor executable file present\n", "\nModified system files\n", "\nNew user accounts created\n", "\nData exfiltration\n", "\nPotential for further malware installation\n", "\nRemote control of the system\n", "\nNetwork traffic to malicious IP addresses\n"], "indicators": ["file : name = ' newdev . dll'", "file : parent_directory_ref.path = ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming '", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]", "IPv4: 103.224.80.76: [ ip v 4 - a d d r : v a l u e   =   ' 1 0 3 . 2 2 4 . 8 0 . 7 6 ' ]", "IPv4: 138.128.98.106: [ ip v 4 - a d d r : v a l u e   =   ' 1 3 8 . 1 2 8 . 9 8 . 1 0 6 ' ]", "IPv4: 1.9.5.38: [ ip v 4 - a d d r : v a l u e   =   ' 1 . 9 . 5 . 3 8 ' ]"]}, {"id": "723e7dc4-8f56-4081-b7fb-0f3b2c4c8e12", "name": "File and Directory Discovery as used by the malware", "description": "The provided textual data suggests a potential scenario of file and directory discovery being conducted by malicious software.  Repeated occurrences of \"hxxp://\" followed by IP addresses and paths such as \"/111.php\", \"/1dll.php\", and \"/syn.php\" indicate the likelihood of malware initiating requests to these locations on the compromised system. The presence of \".php\" extensions in the file names suggests that these files are likely scripts, frequently employed for dynamic web content generation. Malware may exploit such scripts to execute commands and interact with the file system.\n\nThe utilization of varying filenames like \"/111.php\", \"/1dll.php\", etc., could be interpreted as attempts to test different file names within directories. These requests might aim to access system files or specific directories known to contain sensitive information. \n\nThe observed actions, which involve malware probing the file system by sending HTTP requests to various paths and attempting to read content from PHP files, enable the following: identification of existing files and directories; location of sensitive data such as user credentials, configuration information, or other valuable data; and potential creation of new PHP files containing malicious code for future remote access or control. \n\n\nIt is important to note that this analysis is contingent upon limited information. A comprehensive understanding of the malware's intentions and actions would necessitate a detailed forensic investigation encompassing system logs, network traffic, and the contents of those PHP files.  \n", "mitre_technique": {"id": "T1083", "name": "File and directory discovery", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nA functioning operating system with a file system.\n", "\nThe malware possesses the necessary permissions to read files and directories.\n"], "post-conditions": [], "indicators": ["file: name = 'newdev.dll'", "file: parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}, {"id": "efebb53e-9c9e-4f58-93d8-84b518258fb2", "name": "Process Discovery as used by the malware", "description": "Process discovery functionalities within the malware FBI20111024 are purportedly executed through the utilization of system calls and potentially Windows API functions.  \n\nSystem calls, which constitute low-level requests directed to the operating system kernel by programs, are likely employed by FBI20111024.  Functions such as CreateToolhelp32Snapshot and Process32Next are speculated to be utilized for the enumeration of running processes and the retrieval of associated process information, including process ID, name, and path.\n\nFurthermore, the malware may leverage higher-level Windows API functions specialized in process management. Examples include EnumProcesses, which retrieves a comprehensive list of active processes, and GetProcessInformation, which facilitates the acquisition of detailed information pertaining to a specific process identified by its ID. \n\n\nThe precise methodologies implemented by FBI20111024 necessitate direct code analysis for definitive elucidation. Nevertheless, these system calls and API functions represent commonly observed tools employed by malware engaged in process discovery activities.  \n", "mitre_technique": {"id": "T1057", "name": "Process discovery", "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nA running instance of the COLDSTEEL malware.\n", "\nThe malware is running.\n", "\nNetwork connectivity (for potential C2 communication).\n", "\nThe target system has processes executing.\n"], "post-conditions": ["\nSystem compromise\n", "\nRegistry modifications related to persistence\n", "\nAltered process lists or memory dumps\n", "\nNew files created by the rootkit\n", "\nModified system files (e.g.,  tonsiproxy.sys)\n", "\nLog entries indicating suspicious activity\n", "\nNetwork reconnaissance\n", "\nData exfiltration\n", "\nUnusual network traffic to command and control servers\n", "\nPersistence on the system\n", "\nEvidence of data transfer (e.g., log files, network captures)\n", "\nFirewall rules changes\n"], "indicators": ["The file name is \"newdev.dll\".", "The file path is \"C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll\".", "The malware communicates with IPv4 addresses: 192.95.36.61, 103.224.80.76, 138.128.98.106, and 1.9.5.38."]}]}, {"id": "32b3dffc-ce38-4487-870e-8c62a69a14cc", "attack_steps": [{"id": "e4ac34af-6832-4245-88ac-269788830c3a", "name": "Non-Application Layer Protocol as used by the malware", "description": "TCP sockets are employed by the COLDSTEEL malware for establishing connections with its designated Command and Control (C2) server.  A non-standard message format is utilized by the malware, deviating from established protocols such as HTTP or FTP. This characteristic renders communication analysis and detection by conventional security tools more challenging. \n", "mitre_technique": {"id": "T1095", "name": "Non-application layer protocol", "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL)."}, "pre-conditions": ["\nThe malware is running.\n", "\nNetwork traffic analysis capabilities are available.\n", "\nA system with the capability to analyze network packets.\n", "\nAccess to a network monitoring tool capable of capturing and analyzing raw TCP traffic.\n", "\nConnectivity to the network where the malware is operating.\n"], "post-conditions": ["\nSystem compromise\n", "\nPresence of malicious files\n", "\nAltered registry settings\n", "\nDNS requests to C2 domains\n", "\nNetwork communication with C2 server\n", "\nModified system files\n", "\nLog entries indicating suspicious activity\n", "\nService persistence\n", "\nData exfiltration\n", "\nWindows service installation\n"], "indicators": ["IPv4: 192.95.36.61: is used by the malware.", "IPv4: 103.224.80.76: is used by the malware.", "IPv4: 138.128.98.106: is used by the malware.", "IPv4: 1.9.5.38: is used by the malware."]}]}]