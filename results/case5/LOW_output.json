[{"id": "16b7a29d-bfdd-46d7-bd6f-ef47fff654a2", "attack_steps": [{"id": "3cf27328-dbe1-4112-a61c-8d3ccdb406e6", "name": "Exploit Public-Facing Application as used by the malware", "description": "COLDSTEEL malware is characterized by its utilization of advanced techniques for stealth and persistence within compromised systems.  The malware exhibits variations, including FBI20111024, MileStone 2016, and MileStone 2017, each potentially possessing subtle functional differences.\n\nEarly versions of COLDSTEEL demonstrated limited support for Windows 10 operating systems and exhibited memory leaks when executed on such platforms. Subsequent variants likely addressed these limitations.  The malware heavily relies on the ObRegisterCallbacks technique to intercept system calls pertaining to process and thread handles.\n\nUpon detection of a user-mode application attempting to access or duplicate a process or thread handle, COLDSTEEL consults its global process database. If a match is identified, the PROCESS_TERMINATE permission is removed from the DesiredAccess parameter, effectively preventing legitimate tools from terminating targeted processes. This manipulation grants COLDSTEEL enhanced control over compromised systems.\n\nDeployment of COLDSTEEL is believed to follow exploitation of the Log4j vulnerability.  This suggests that attackers leverage known exploits to gain initial access, subsequently employing COLDSTEEL for further malicious activities. \n\n\nPublic-facing applications, potentially vulnerable to Log4j exploits, are targeted by COLDSTEEL as the primary means of initial compromise.   \n", "mitre_technique": {"id": "T1190", "name": "Exploit public-facing application", "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration."}, "pre-conditions": ["\nThe malware is capable of exploiting the vulnerability.\n", "\nInternet connectivity to reach the public-facing application.\n", "\nA public-facing application exists.\n", "\nThe public-facing application has a known vulnerability.\n"], "post-conditions": [], "indicators": ["The file name is \"newdev.dll\".", "The path includes \"AppData\\Roaming\\newdev.dll\"."]}], "pre-conditions": ["\nThe malware is capable of exploiting the vulnerability.\n", "\nInternet connectivity to reach the public-facing application.\n", "\nA public-facing application exists.\n", "\nThe public-facing application has a known vulnerability.\n"], "post-conditions": []}, {"id": "1bd961a7-8935-4d79-9541-01d09a66df77", "attack_steps": [{"id": "91ca9419-193e-44cf-8f51-fb67f7ebf25e", "name": "Command and Scripting Interpreter: Windows Command Shell as used by the malware", "description": "COLDSTEEL malware exploits the Windows Command Shell (cmd.exe) to execute arbitrary commands. This functionality enables attackers to retrieve sensitive data, install additional malware, modify system settings, and monitor user activity.\n\nTo evade detection, certain COLDSTEEL variants employ obfuscation techniques such as copying cmd.exe into less scrutinized processes like dllhost.exe. \n\nBeyond basic cmd.exe execution, some COLDSTEEL implementations incorporate commands for gathering information about running processes, logged-in users, and system configurations. This intelligence can assist attackers in planning subsequent attacks or tailoring their strategies based on the victim's environment.\n\n\nThe combination of arbitrary command execution and obfuscation techniques presents a significant security risk, granting attackers broad control over infected systems and enabling sophisticated attacks with limited visibility. \n", "mitre_technique": {"id": "T1059.003", "name": "Command and scripting interpreter: windows command shell", "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH."}, "pre-conditions": ["\nThe malware possesses the capability to execute commands within the Windows Command Shell.\n", "\nA compromised Windows machine with an active internet connection.\n", "\nThe malware has successfully infected the target machine.\n", "\nA Windows operating system is present.\n"], "post-conditions": ["\nRegistry entries for malicious processes and services\n", "\nPersistence on the system\n", "\nLogs containing suspicious activity\n", "\nService hijacking\n", "\nDeleted or modified original files\n", "\nAltered file timestamps\n", "\nRemote control of infected machine\n", "\nNetwork connections to command and control servers\n", "\nModified system services\n", "\nData exfiltration\n", "\nSystem compromise\n", "\nNew files with malicious code\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "757f8ff6-3c7e-4479-a23a-563b4ce24a2a", "name": "System Services: Service Execution as used by the malware", "description": "The provided text constitutes an excerpt from a report detailing the analysis of malware, potentially belonging to the COLDSTEEL family.  \n\nAnalysis conducted on distinct variants of the COLDSTEEL malware family has revealed variations in functionality across different iterations. Designations such as \"FBI20111024,\" \"MileStone 2016,\" and \"MileStone 2017\" indicate the evolution of these variants over time.\n\nFunctionality discrepancies observed between variants include potential compatibility issues with Windows 10 operating systems in earlier versions, such as \"FBI20111024,\" while later variants are presumed to address this limitation. Additionally, early versions may exhibit memory management inefficiencies, characterized by a \"small memory leak.\"\n\nObfuscation techniques employed within the malware code, exemplified by the suspicious code snippet provided, suggest an attempt to conceal the malware's true nature. \n\nThe analysis explicitly states that COLDSTEEL malware utilizes \"System Services: Service Execution\" for malicious purposes. This implies the exploitation of legitimate Windows services for illicit activities.  \n\nThis exploitation may involve hijacking existing system services or creating new ones under deceptive names, followed by the injection of malicious code into the compromised service. Consequently, the malware achieves persistence by leveraging the automatic startup functionality of services upon Windows boot. The utilization of services often grants elevated privileges and reduces the likelihood of detection by security software, contributing to a stealthy attack vector. \n\n\n", "mitre_technique": {"id": "T1569.002", "name": "System services: service execution", "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net."}, "pre-conditions": ["\nThe malware possesses the necessary code to create and execute a service.\n", "\nNetwork connectivity is available for communication with the C2 server.\n", "\nA Windows operating system is present.\n", "\nThe malware has successfully infiltrated the target system.\n"], "post-conditions": ["\nData theft\n", "\nModified system registry entries\n", "\nCompromised system functionality\n", "\nRemote access by attacker\n", "\nSystem instability\n", "\nNew service running with suspicious name and description\n", "\nAltered system files\n", "\nUnusual network traffic to command-and-control servers\n", "\nPresence of malicious DLL file\n", "\nData exfiltration logs\n", "\nLog files containing suspicious activity\n", "\nBackdoors or hidden executables\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}], "pre-conditions": ["\nThe malware possesses the capability to execute commands within the Windows Command Shell.\n", "\nA compromised Windows machine with an active internet connection.\n", "\nThe malware has successfully infected the target machine.\n", "\nA Windows operating system is present.\n", "\nThe malware possesses the necessary code to create and execute a service.\n", "\nNetwork connectivity is available for communication with the C2 server.\n", "\nA Windows operating system is present.\n", "\nThe malware has successfully infiltrated the target system.\n"], "post-conditions": ["\nRegistry entries for malicious processes and services\n", "\nPersistence on the system\n", "\nLogs containing suspicious activity\n", "\nService hijacking\n", "\nDeleted or modified original files\n", "\nAltered file timestamps\n", "\nRemote control of infected machine\n", "\nNetwork connections to command and control servers\n", "\nModified system services\n", "\nData exfiltration\n", "\nSystem compromise\n", "\nNew files with malicious code\n", "\nData theft\n", "\nModified system registry entries\n", "\nCompromised system functionality\n", "\nRemote access by attacker\n", "\nSystem instability\n", "\nNew service running with suspicious name and description\n", "\nAltered system files\n", "\nUnusual network traffic to command-and-control servers\n", "\nPresence of malicious DLL file\n", "\nData exfiltration logs\n", "\nLog files containing suspicious activity\n", "\nBackdoors or hidden executables\n"]}, {"id": "c3f1dd9a-3e9d-4468-a97c-97d9b3ca0897", "attack_steps": [{"id": "7d648546-bdad-47b7-9a99-d5423d2a2d81", "name": "Create or Modify System Process: Windows Service as used by the malware", "description": "A new service entry is created directly within the registry by the COLDSTEEL malware. This entry specifies the malicious service's name, description, executable path (pointing to its own packed DLL), and startup parameters.  The created service entry is utilized to initiate the execution of its own DLL as a Windows service. Upon registration, the operating system automatically commences the service during bootup, ensuring persistence even after system reboots. \n\n\n", "mitre_technique": {"id": "T1543.003", "name": "Create or modify system process: windows service", "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."}, "pre-conditions": ["\nA Windows operating system.\n", "\nAccess to the file system for creating and modifying service files.\n", "\nThe malware has access to the necessary files and directories.\n", "\nThe system is running a supported version of Windows.\n", "\nA user account with sufficient privileges exists.\n", "\nNetwork connectivity to communicate with the C2 server.\n"], "post-conditions": ["\nLoss of system control\n", "\nSuspicious DLL file present in user's AppData folder\n", "\nPotential for further malware infections\n", "\nModified system registry entries\n", "\nUnusual activity logs in event viewer\n", "\nCompromised system functionality\n", "\nAltered system files\n", "\nNew Windows service installed\n", "\nNetwork connections to C2 server(s) logged\n", "\nData exfiltration\n", "\nData files transferred from compromised system\n"], "indicators": ["file : name = 'newdev.dll'", "file : parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}], "pre-conditions": ["\nA Windows operating system.\n", "\nAccess to the file system for creating and modifying service files.\n", "\nThe malware has access to the necessary files and directories.\n", "\nThe system is running a supported version of Windows.\n", "\nA user account with sufficient privileges exists.\n", "\nNetwork connectivity to communicate with the C2 server.\n"], "post-conditions": ["\nLoss of system control\n", "\nSuspicious DLL file present in user's AppData folder\n", "\nPotential for further malware infections\n", "\nModified system registry entries\n", "\nUnusual activity logs in event viewer\n", "\nCompromised system functionality\n", "\nAltered system files\n", "\nNew Windows service installed\n", "\nNetwork connections to C2 server(s) logged\n", "\nData exfiltration\n", "\nData files transferred from compromised system\n"]}, {"id": "f590a5d9-d191-43a5-8e1d-942fd0c2efcb", "attack_steps": [{"id": "026295b6-3a09-4f1f-9475-65378c218967", "name": "Obfuscated Files or Information: Software Packing as used by the malware", "description": "Software packing, specifically utilizing Themida, is employed by malware variants classified as \"Milestone2017\" to obfuscate their inherent functionality. This technique involves encasing compiled malware code within a protective layer introduced by Themida during the software packing process.  Themida modifies the execution flow of the original code, incorporating intricate instructions that facilitate the unpacking and execution of the malware upon file runtime. Consequently, the analysis of these packed malware variants is significantly impeded due to the convoluted execution path imposed by Themida. This obfuscation strategy enhances the evasion capabilities of \"Milestone2017\" variants, enabling them to circumvent rudimentary signature-based detection mechanisms employed by antivirus software. Furthermore, the unpacked malware frequently exhibits dynamic behavior, posing challenges for the development of static analysis tools designed for effective detection. \n\n\n", "mitre_technique": {"id": "T1027.002", "name": "Obfuscated files or information: software packing", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."}, "pre-conditions": ["\nThe malware utilizes software packing techniques.\n", "\nTools capable of unpacking packed executables (e.g., Themida).\n", "\nThe ability to analyze binary files.\n", "\nAccess to a system infected with the COLDSTEEL malware.\n"], "post-conditions": ["\nXOR-encrypted communication logs\n", "\nData theft\n", "\nModified system registry entries\n", "\nCompromised system functionality\n", "\nRemote access by attacker\n", "\nSystem instability\n", "\nThemida packer artifacts\n", "\nLog4Shell exploit remnants\n", "\nAltered system configurations\n", "\nUnusual process activity in event logs\n", "\nBackdoor executables\n", "\nHidden files and folders\n", "\nNetwork traffic to C2 servers\n", "\nNew user accounts created\n", "\nInstallation of additional malware\n"], "indicators": ["file : name = ' newdev . dll'", "file : hashes.sha256 =  '...' (Replace with actual SHA256 hash)", "file : hashes.md5 =  '...' (Replace with actual MD5 hash)"]}, {"id": "b007ae31-5ed4-47df-9f5f-8df9f6145e15", "name": "Modify Registry as used by the malware", "description": "The \"Modify Registry\" action (T1112) is executed by COLDSTEEL through direct manipulation of registry keys.  This involves the addition of a description to its own service, denoted as \"msupdate2.\"  Registry entries pertaining to this service are either modified or newly created, potentially incorporating deceptive descriptions to obfuscate its actual function. \n\n\n", "mitre_technique": {"id": "T1112", "name": "Modify registry", "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution."}, "pre-conditions": ["\nThe malware has the necessary permissions to modify registry keys.\n", "\nA Windows operating system is present.\n", "\nThe malware is running.\n", "\nThe target system has a registry.\n"], "post-conditions": ["\nModified registry keys with timestamps indicating changes.\n", "\nDeleted files from the infected machine.\n", "\nAltered process list with potentially obfuscated entries.\n", "\nModified registry keys with added descriptions for the service.\n", "\nNetwork connections to command and control servers (if any).\n", "\nNew processes created for service removal and registry modification.\n", "\nObfuscated communication logs.\n", "\nDeleted file remnants in system logs and event logs.\n", "\nHidden registry keys from users using Microsoft's Registry Editor.\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "d831ed99-2b25-41e6-a1bf-bf679a8527d5", "name": "Indicator Removal: File Deletion as used by the malware", "description": "Indicator removal is executed by COLDSTEEL malware variants, specifically the \"MileStone2017\" variant, through file deletion techniques.  \n\nUpon system startup, a custom DLL file, disguised as a legitimate system process, is loaded into memory by a Windows service created by the malware. The ServiceMain export within the DLL executes code responsible for indicator removal. \n\nFiles associated with specific network communication IDs used by the malware, such as \"MileStone2017,\" are targeted for deletion. This includes original DLL files, configuration files, and temporary files utilized by the malware. Additionally, logs and traces of malware activity are potentially deleted to hinder tracking efforts.  \n\nThe objective of this file deletion tactic is to maintain stealth and evade detection by security software and analysts. \n\n\n", "mitre_technique": {"id": "T1070.004", "name": "Indicator removal: file deletion", "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."}, "pre-conditions": ["\nThe malware is running on a compromised system.\n", "\nThe target files are accessible by the malware.\n"], "post-conditions": ["\nNewdev.dll file in AppData\\Roaming directory.\n", "\nPresence of XOR-encrypted and LZMA-compressed payload.\n", "\nData exfiltration potential.\n", "\nNetwork connections to command-and-control servers.\n", "\nDifficulty in detecting and removing the malware due to its sophisticated techniques.\n", "\nAltered registry entries related to newdev.dll and ColdSteel components.\n", "\nModified system services.\n", "\nLog files containing suspicious activity related to newdev.dll and ColdSteel.\n", "\nSystem instability and performance degradation.\n", "\nTraces of process manipulation and file system modifications.\n", "\nCompromised system with persistent backdoor access.\n"], "indicators": ["file : name = 'newdev.dll'  AND file : parent_directory_ref.path = 'C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming'"]}, {"id": "24e31a69-2525-4f52-b2f7-2431fca297e0", "name": "Access Token Manipulation: Create Process with Token as used by the malware", "description": "Technical analysis indicates potential collaboration among multiple malware groups, evidenced by the sharing of tools and infrastructure such as stolen certificates and command-and-control servers.  Samples were observed to be signed hours after compilation, suggesting an attempt to evade detection by utilizing legitimate code tools prior to flagging by security software.\n\nThe analysis highlights the utilization of the ObRegisterCallbacks function by malware, enabling interception of system calls pertaining to process and thread creation. Process termination permissions (PROCESS_TERMINATE) are manipulated for specific processes, indicating a desire to maintain control over designated targets and prevent their termination by security measures or user actions.  \n\nMalware creates processes with elevated tokens, such as \"ANONYMOUS,\" potentially executing code with heightened privileges beyond its original permissions. This facilitates further malicious activities, including access to sensitive data or installation of additional malware. \n\nFortinet Solutions FortiEDR is determined to effectively detect and block these threats without requiring specific configuration modifications. This implies the presence of pre-built rules and signatures within the security solution capable of recognizing the aforementioned malicious behaviors.  \n\n\n", "mitre_technique": {"id": "T1134.002", "name": "Access token manipulation: create process with token", "description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas."}, "pre-conditions": ["\nA process is running.\n", "\nA running operating system with a user account logged in.\n", "\nThe malware code must be present and executable.\n", "\nThe malware has access to the current process's token.\n"], "post-conditions": ["\nNetwork traffic to malicious IP addresses listed in the provided context.\n", "\nEvidence of data transfer (e.g., modified log files, empty folders).\n", "\nCompromised systems with installed malware.\n", "\nLogs indicating suspicious activity, such as process creation, file access, and network connections.\n", "\nData exfiltration from compromised systems.\n", "\nPotential for further attacks and lateral movement within the network.\n", "\nModified system registry entries.\n", "\nAltered firewall rules or security settings.\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}], "pre-conditions": ["\nThe malware utilizes software packing techniques.\n", "\nTools capable of unpacking packed executables (e.g., Themida).\n", "\nThe ability to analyze binary files.\n", "\nAccess to a system infected with the COLDSTEEL malware.\n", "\nThe malware has the necessary permissions to modify registry keys.\n", "\nA Windows operating system is present.\n", "\nThe malware is running.\n", "\nThe target system has a registry.\n", "\nThe malware is running on a compromised system.\n", "\nThe target files are accessible by the malware.\n", "\nA process is running.\n", "\nA running operating system with a user account logged in.\n", "\nThe malware code must be present and executable.\n", "\nThe malware has access to the current process's token.\n"], "post-conditions": ["\nXOR-encrypted communication logs\n", "\nData theft\n", "\nModified system registry entries\n", "\nCompromised system functionality\n", "\nRemote access by attacker\n", "\nSystem instability\n", "\nThemida packer artifacts\n", "\nLog4Shell exploit remnants\n", "\nAltered system configurations\n", "\nUnusual process activity in event logs\n", "\nBackdoor executables\n", "\nHidden files and folders\n", "\nNetwork traffic to C2 servers\n", "\nNew user accounts created\n", "\nInstallation of additional malware\n", "\nModified registry keys with timestamps indicating changes.\n", "\nDeleted files from the infected machine.\n", "\nAltered process list with potentially obfuscated entries.\n", "\nModified registry keys with added descriptions for the service.\n", "\nNetwork connections to command and control servers (if any).\n", "\nNew processes created for service removal and registry modification.\n", "\nObfuscated communication logs.\n", "\nDeleted file remnants in system logs and event logs.\n", "\nHidden registry keys from users using Microsoft's Registry Editor.\n", "\nNewdev.dll file in AppData\\Roaming directory.\n", "\nPresence of XOR-encrypted and LZMA-compressed payload.\n", "\nData exfiltration potential.\n", "\nNetwork connections to command-and-control servers.\n", "\nDifficulty in detecting and removing the malware due to its sophisticated techniques.\n", "\nAltered registry entries related to newdev.dll and ColdSteel components.\n", "\nModified system services.\n", "\nLog files containing suspicious activity related to newdev.dll and ColdSteel.\n", "\nSystem instability and performance degradation.\n", "\nTraces of process manipulation and file system modifications.\n", "\nCompromised system with persistent backdoor access.\n", "\nNetwork traffic to malicious IP addresses listed in the provided context.\n", "\nEvidence of data transfer (e.g., modified log files, empty folders).\n", "\nCompromised systems with installed malware.\n", "\nLogs indicating suspicious activity, such as process creation, file access, and network connections.\n", "\nData exfiltration from compromised systems.\n", "\nPotential for further attacks and lateral movement within the network.\n", "\nModified system registry entries.\n", "\nAltered firewall rules or security settings.\n"]}, {"id": "e04d04d4-5ca0-4164-bc74-1bf99120948d", "attack_steps": [{"id": "6a5a2e0e-3643-403b-874d-32bd21137693", "name": "System Information Discovery as used by the malware", "description": "System information is acquired by COLDSTEEL malware variants through various methods. Native Windows API calls are employed to retrieve system-wide data such as processor architecture, available memory, and operating system version via functions like GetComputerNameExW() and SystemInfo(). User account information and computer names in ASCII format are obtained using GetUserNameA()/GetComputerNameA().\n\nWindows Management Instrumentation (WMI) is leveraged by COLDSTEEL to query comprehensive system configurations, installed software, network interfaces, and hardware details through queries such as SELECT * FROM Win32_OperatingSystem and SELECT * FROM Win32_NetworkAdapterConfiguration.  Specific registry keys are accessed to extract information pertaining to installed applications, user accounts, recent file activity, and system settings.\n\nRunning processes on the system are enumerated by the malware, revealing active software and potential security vulnerabilities. Network information is gathered using commands such as ipconfig /all for network card details and tracert/traceroute to map network routes.  Certain variants may incorporate custom modules or scripts for targeted data collection tasks not covered by native functions.\n\n\nThe collected system information provides attackers with a detailed understanding of the victim's system and network infrastructure, enabling targeted attacks, credential theft, lateral movement, and data exfiltration. \n", "mitre_technique": {"id": "T1082", "name": "System information discovery", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe system has active network connections.\n", "\nA compromised system with an active internet connection.\n", "\nThe target system is running Windows.\n", "\nThe malware is running on a system.\n"], "post-conditions": [], "indicators": ["file : name = ' newdev . dll'", "file : parent_directory_ref.path = ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming '", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]", "IPv4: 103.224.80.76: [ ip v 4 - a d d r : v a l u e   =   ' 1 0 3 . 2 2 4 . 8 0 . 7 6 ' ]", "IPv4: 138.128.98.106: [ ip v 4 - a d d r : v a l u e   =   ' 1 3 8 . 1 2 8 . 9 8 . 1 0 6 ' ]", "IPv4: 1.9.5.38: [ ip v 4 - a d d r : v a l u e   =   ' 1 . 9 . 5 . 3 8 ' ]"]}, {"id": "19dcbb6d-2a7c-4ad2-9842-5db93320bc37", "name": "File and Directory Discovery as used by the malware", "description": "The provided textual evidence strongly suggests the execution of file and directory discovery operations by an unauthorized actor, potentially indicative of malicious intent (e.g., malware).  \n\nThis inference is supported by several factors:\n\n- The presence of URLs structured as 104.223.34[.]198/111.php, 104.223.34[.]198/1dll.php, and 104.223.34[.]198/syn.php suggests attempts to access files or scripts within a specific directory structure on a web server. Such behavior is frequently observed in malware seeking sensitive information (e.g., configuration files, credentials) or executing malicious code designed for actions such as data exfiltration, system compromise, or network propagation.\n\n- The IP addresses 104.223.34[.]198 and 103.224.80[.]76 are associated with the web server hosting the aforementioned suspicious files, indicating a targeted attack rather than random browsing activity.\n\n- The utilization of \".php\" extensions suggests that these files are likely PHP scripts, commonly employed on web servers for dynamic content generation and execution.\n\n\nFile and directory discovery operations are frequently performed by malware utilizing various techniques:\n\n- Operating system APIs: Malicious code may leverage libraries and functions provided by the operating system (e.g., opendir(), readdir() in PHP) to enumerate files and directories within specific paths.\n- Shell commands: Malware may execute shell commands such as \"ls\" or \"dir\" to retrieve directory listings and file information.\n- Network protocols: Certain malware types utilize network protocols (e.g., FTP or SMB) to scan for files and directories on remote systems. \n\n\n", "mitre_technique": {"id": "T1083", "name": "File and directory discovery", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe malware possesses the necessary permissions to access files and directories.\n", "\nThe malware has executed successfully.\n", "\nOperating System with a file system.\n", "\nMalware code capable of performing file and directory operations.\n"], "post-conditions": ["\nSystem instability or crashes\n", "\nUnusual system log entries\n", "\nHidden files and directories\n", "\nNew processes running with suspicious names\n", "\nCompromised system functionality\n", "\nRemote access by attacker\n", "\nModified registry entries\n", "\nNetwork connections to command-and-control servers\n", "\nData theft or manipulation\n", "\nModified file timestamps\n", "\nPersistence of malicious code\n", "\nPresence of malicious DLLs or executables\n", "\nEncrypted data remnants\n"], "indicators": ["file: name = 'newdev.dll'", "file: parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}, {"id": "d2e26fc0-43d7-4be2-ad6d-48e4ddf2da6a", "name": "Process Discovery as used by the malware", "description": "Process discovery techniques employed by FBI20111024 variants are primarily executed through the utilization of Windows API system calls. These calls encompass functions such as CreateToolhelp32Snapshot for capturing process snapshots and Process32First/Process32Next for iterating through captured processes.  Furthermore, GetModuleFileNameEx is leveraged to retrieve executable file paths associated with each identified process.\n\nAdvanced variants may also employ direct memory reading techniques to extract process information, contingent upon precise knowledge of memory layouts.\n\nThe significance of process discovery in malware operations lies in its ability to facilitate the identification of vulnerable processes and those handling sensitive data.  This information enables malware to target specific processes effectively. Additionally, understanding running processes allows malware to mimic legitimate activity, thereby evading detection mechanisms. Process discovery can also be instrumental in code injection techniques, enabling malware to insert malicious code into legitimate processes for system compromise.\n\nMitigating the risks associated with process discovery necessitates a multi-faceted approach.  Regular software updates are crucial to address known vulnerabilities in operating systems and applications. The implementation of reputable anti-malware solutions is essential for proactive threat detection and removal. Exercise caution when downloading files from untrusted sources and avoid clicking on suspicious links. Continuous monitoring of system activity, including unusual program launches or elevated CPU usage, can provide early indicators of potential compromise. \n\n\n", "mitre_technique": {"id": "T1057", "name": "Process discovery", "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe target system has processes running.\n", "\nNetwork connectivity (for communication with C2 server, if applicable).\n", "\nA running instance of the COLDSTEEL malware.\n", "\nThe malware is running on a target system.\n"], "post-conditions": [], "indicators": ["The file name is \"newdev.dll\".", "The file path is \"C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll\".", "The malware communicates with IPv4 addresses: 192.95.36.61, 103.224.80.76, 138.128.98.106, and 1.9.5.38."]}], "pre-conditions": ["\nThe system has active network connections.\n", "\nA compromised system with an active internet connection.\n", "\nThe target system is running Windows.\n", "\nThe malware is running on a system.\n", "\nThe malware possesses the necessary permissions to access files and directories.\n", "\nThe malware has executed successfully.\n", "\nOperating System with a file system.\n", "\nMalware code capable of performing file and directory operations.\n", "\nThe target system has processes running.\n", "\nNetwork connectivity (for communication with C2 server, if applicable).\n", "\nA running instance of the COLDSTEEL malware.\n", "\nThe malware is running on a target system.\n"], "post-conditions": ["\nSystem instability or crashes\n", "\nUnusual system log entries\n", "\nHidden files and directories\n", "\nNew processes running with suspicious names\n", "\nCompromised system functionality\n", "\nRemote access by attacker\n", "\nModified registry entries\n", "\nNetwork connections to command-and-control servers\n", "\nData theft or manipulation\n", "\nModified file timestamps\n", "\nPersistence of malicious code\n", "\nPresence of malicious DLLs or executables\n", "\nEncrypted data remnants\n"]}, {"id": "8e884b50-ca95-4c30-b8bf-bdc144cc52ad", "attack_steps": [{"id": "36d67985-c017-4634-bbb5-55caec9cf363", "name": "Non-Application Layer Protocol as used by the malware", "description": "TCP sockets are utilized by the malware for communication with its command and control (C2) server.  A custom message format is employed for these communications, deviating from standard protocols such as HTTP or SMTP. \n", "mitre_technique": {"id": "T1095", "name": "Non-application layer protocol", "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL)."}, "pre-conditions": ["\nA system infected with the COLDSTEEL malware is present.\n"], "post-conditions": ["\nUnusual network traffic to C2 server IPs\n", "\nLoss of sensitive information\n", "\nPotential for further malware infections\n", "\nCompromised system functionality\n", "\nNew files with malicious code\n", "\nSystem instability\n", "\nPersistence mechanisms (e.g., scheduled tasks, services)\n", "\nHidden artifacts within system files\n", "\nLog entries indicating suspicious activity\n", "\nEncrypted data transfers\n", "\nData exfiltration\n", "\nModified system configurations\n", "\nModified registry keys\n"], "indicators": ["IPv4: 192.95.36.61: is used by the malware.", "IPv4: 103.224.80.76: is used by the malware.", "IPv4: 138.128.98.106: is used by the malware.", "IPv4: 1.9.5.38: is used by the malware."]}], "pre-conditions": ["\nA system infected with the COLDSTEEL malware is present.\n"], "post-conditions": ["\nUnusual network traffic to C2 server IPs\n", "\nLoss of sensitive information\n", "\nPotential for further malware infections\n", "\nCompromised system functionality\n", "\nNew files with malicious code\n", "\nSystem instability\n", "\nPersistence mechanisms (e.g., scheduled tasks, services)\n", "\nHidden artifacts within system files\n", "\nLog entries indicating suspicious activity\n", "\nEncrypted data transfers\n", "\nData exfiltration\n", "\nModified system configurations\n", "\nModified registry keys\n"]}]