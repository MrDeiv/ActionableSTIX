[{"id": "0d325f91-d7a1-464e-8c74-dbf7234f4560", "attack_steps": [{"id": "1fabb4ac-f44a-4ab7-8050-86dd3a0cff73", "name": "Create or Modify System Process: Windows Service as used by the malware", "description": "A persistent infection is established by the malware, Goofy Guineapig, through the creation of a Windows service.  This action involves the injection of code into legitimate processes or the direct creation of new processes to facilitate service creation tasks. A new Windows service is defined utilizing the SCManagerCreateService and related API functions. This definition encompasses a unique name, potentially disguised as a legitimate process name, a user-friendly display name, a fabricated description, and an \"Automatic\" or \"Manual\" startup type. The executable path specified points to either the Goofy Guineapig binary itself or a separate proxy file. Dependencies on other system services may be established to ensure proper execution.  The service is registered with the Windows Service Control Manager (SCM) using the SCManagerRegisterService function. Upon registration, the service commences operation in the background, awaiting commands from the attacker's command-and-control server. This persistence allows for continued operation even after user logoff or system restarts. \n\n\n", "mitre_technique": {"id": "T1543.003", "name": "Create or modify system process: windows service", "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."}, "pre-conditions": ["\nA Windows operating system is present.\n", "\nThe malware possesses the necessary permissions to modify system processes.\n", "\nThe system has a valid Windows operating system installed.\n"], "post-conditions": ["\nPersistence on the system\n", "\nAltered registry entries\n", "\nNetwork traffic to C2 server (over HTTPS port 4443)\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nPresence of malicious DLL (\"Goofy Guineapig\")\n", "\nIndicators of compromise (IOCs) such as SHA1 hashes in logs or on disk\n", "\nAltered system configurations\n", "\nLeftover shellcode from config.dat\n", "\nUnusual file modifications or creations\n", "\nPotential for further malware infections\n", "\nNew Windows service\n", "\nModified system processes\n", "\nLog files containing suspicious activity\n"], "indicators": ["A file named \"tmp.bat\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\"."]}], "pre-conditions": ["\nA Windows operating system is present.\n", "\nThe malware possesses the necessary permissions to modify system processes.\n", "\nThe system has a valid Windows operating system installed.\n"], "post-conditions": ["\nPersistence on the system\n", "\nAltered registry entries\n", "\nNetwork traffic to C2 server (over HTTPS port 4443)\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nPresence of malicious DLL (\"Goofy Guineapig\")\n", "\nIndicators of compromise (IOCs) such as SHA1 hashes in logs or on disk\n", "\nAltered system configurations\n", "\nLeftover shellcode from config.dat\n", "\nUnusual file modifications or creations\n", "\nPotential for further malware infections\n", "\nNew Windows service\n", "\nModified system processes\n", "\nLog files containing suspicious activity\n"]}, {"id": "9ca3dad0-1963-4f9d-8d6a-2fb647f7edff", "attack_steps": [{"id": "4dda6106-b7de-4428-b949-774d4827d0da", "name": "Masquerading: Match Legitimate Name or Location as used by the malware", "description": "The malware, designated \"Goofy Guineapig,\" employs social engineering techniques to induce user execution.  It assumes the guise of legitimate software installers for widely recognized applications. \n\nInstances of this mimicry include:\n\n* A Firefox installation package, exploiting user familiarity with the browser and trust in Mozilla updates.\n* A Google Updater, leading users to believe they are updating essential software and inadvertently installing the malicious Goofy Guineapig DLL.\n\n\nThis deceptive tactic is intended to circumvent initial suspicion and security measures that may otherwise identify unfamiliar or potentially harmful executables. \n", "mitre_technique": {"id": "T1036.005", "name": "Masquerading: match legitimate name or location", "description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous."}, "pre-conditions": ["\nAccess to files and directories associated with Firefox or Google Update installations.\n", "\nThe malware has access to a list of legitimate names or locations.\n", "\nA target system running Firefox or Google Update software.\n", "\nAbility to modify file attributes and metadata.\n"], "post-conditions": ["\nPersistence on the system\n", "\nAltered registry entries\n", "\nData exfiltration\n", "\nNetwork traffic to command and control server over HTTPS port 4443\n", "\nExfiltrated data files\n", "\nCompromised system integrity\n", "\nPotential for further malicious activity\n", "\nModified system processes\n", "\nNew Windows service\n", "\nUnusual network connections using UDP, KCP protocols, or direct socket communications.\n", "\nMalicious DLL file\n"], "indicators": ["The file \"tmp.bat\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\"."]}, {"id": "5902538d-eeb7-48e9-b1b8-191dfdb773ab", "name": "Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware", "description": "Time Based Evasion is implemented by Goofy Guineapig through a series of actions.  System time is initially captured into a variable upon execution. Subsequently, after a predetermined duration, system time is read again. The difference between these two recorded timestamps is then calculated. If the calculated time difference exceeds 100 milliseconds, malware execution is terminated. This technique exploits potential discrepancies in system time measurement between real and virtualized environments to detect and avoid execution within sandboxed or virtual settings.  \n", "mitre_technique": {"id": "T1497.003", "name": "Virtualization/sandbox evasion: time based evasion", "description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time."}, "pre-conditions": ["\nThe Goofy Guineapig malware is running.\n", "\nThe malware is executing.\n", "\nThe system has a functioning CPU timestamp counter.\n"], "post-conditions": ["\nNetwork connections to command and control servers.\n", "\nData exfiltration from infected machine.\n", "\nCompromised system with persistent backdoor.\n", "\nLogs indicating suspicious activity.\n", "\nPotential for additional malware loading and execution.\n", "\nAltered registry entries.\n", "\nUnusual process activity.\n", "\nNew files created by the malware (backdoor, configuration files).\n", "\nModified timestamps on system files.\n", "\nModified system files.\n"], "indicators": ["The malware utilizes time-based evasion techniques."]}, {"id": "3e926f4f-92fd-4055-8d5c-da211ead6a07", "name": "Virtualization/Sandbox Evasion: System Checks as used by the malware", "description": "System checks are conducted by Goofy Guineapig to circumvent sandbox environments through the querying of system properties.  These checks encompass the determination of hard drive size utilizing Windows API functions such as GetLogicalDriveStrings or GetDiskFreeSpaceEx, physical memory size acquisition via the GlobalMemoryStatusEx function, and the identification of the number of logical processors employing functions like GetNumberOfProcessors or QueryThreadpool. \n\nSubsequent to the retrieval of these values, a comparison is performed against anticipated values characteristic of typical systems.  Significant deviations from established norms in any of these values lead to the inference that the system is a sandbox, resulting in the termination of execution by Goofy Guineapig.   \n", "mitre_technique": {"id": "T1497.001", "name": "Virtualization/sandbox evasion: system checks", "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."}, "pre-conditions": ["\nThe system has a defined number of logical processors.\n", "\nThe malware has access to system information.\n", "\nThe system has a defined disk size.\n", "\nAccess to Windows APIs.\n"], "post-conditions": ["\nPotential for additional malware execution and lateral movement.\n", "\nData exfiltration from infected machine.\n", "\nCompromised system with persistent backdoor access.\n", "\nNetwork traffic to command and control server(s) over HTTPS.\n", "\nAltered registry entries related to the backdoor and its functionality.\n", "\nUnusual disk access patterns.\n", "\nModified system configuration files.\n", "\nLogs indicating suspicious activity and process executions.\n", "\nTraces of deleted or modified system files.\n", "\nNew files created by the malware (backdoor, plugins).\n"], "indicators": ["The system checks for virtualization software presence."]}, {"id": "a128aa72-fc00-470a-a0d0-5bcc3f3e74f0", "name": "Virtualization/Sandbox Evasion: User Activity Based Checks as used by the malware", "description": "User Activity Based Checks implemented by Goofy Guineapig involve the monitoring of running processes for specific keywords indicative of debugging and reverse engineering environments.  Processes containing keywords such as \"dbg\", \"debug\", or \"ida\" trigger the immediate termination of Goofy Guineapig's execution. \n\n\n", "mitre_technique": {"id": "T1497.002", "name": "Virtualization/sandbox evasion: user activity based checks", "description": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."}, "pre-conditions": ["\nThe ability to check process names for specific strings is present.\n", "\nThe malware is running on a system.\n", "\nProcesses are running on the system.\n"], "post-conditions": ["\nAltered registry settings\n", "\nNew Windows service installed\n", "\nCommand and control communication established\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nModified system files\n", "\nNetwork traffic to command and control server\n", "\nExfiltrated data files\n", "\nPresence of malicious DLL\n", "\nLog entries indicating suspicious activity\n", "\nPersistence established\n"], "indicators": ["The process name is \"tmp.bat\".", "The file path includes \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat\"."]}, {"id": "520a346e-1333-4f21-ab6a-8f6ae17c8c68", "name": "Obfuscated Files or Information: Software Packing as used by the malware", "description": "The Goofy Guineapig malware binary undergoes compression and encryption via the UPX packer, obfuscating the original code from security analysis tools.  Furthermore, the malware is encapsulated within a Nullsoft Scriptable Install System (NSIS) installer, presenting a facade of legitimacy to potential users. This dual approach hinders detection by antivirus software and security analysts, enabling evasion tactics. The combination of UPX packing and the NSIS installer may facilitate persistence on compromised systems through mechanisms such as automatic execution during system startup or other predefined events. \n\n\n", "mitre_technique": {"id": "T1027.002", "name": "Obfuscated files or information: software packing", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."}, "pre-conditions": ["\nUPX is available.\n", "\nA legitimate NSIS installer is available.\n", "\nThe malware executable exists.\n"], "post-conditions": ["\nPersistence on the system\n", "\nNetwork traffic to command and control servers\n", "\nObfuscated or packed files\n", "\nNew processes and services running\n", "\nAltered registry settings\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nModified system files\n", "\nPotential for further malicious activity\n", "\nLog entries indicating suspicious activity\n"], "indicators": ["The file \"tmp.bat\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\".", "The file \"config.dat\" has a SHA-256 hash of \"3a1af09a0250c602569d458e79db90a45e305b76d8423b81eeeca14c69847b81c\".", "The file \"GoogUpdate\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\"."]}, {"id": "92b799e8-2ee5-48b4-9655-9c25db7a1c12", "name": "Deobfuscate/Decode Files or Information as used by the malware", "description": "Goofy Guineapig malware employs stack-based strings that are obfuscated through single-byte XOR or subtraction operations implemented within its binary code.  \n\nStack-based strings are embedded on the program's stack rather than being stored directly in memory, hindering detection by conventional string analysis tools. Each character within these strings undergoes manipulation via a simple XOR operation or subtraction against a constant key. \n\nXOR is a bitwise operation comparing corresponding bits; if different, the result is 1; otherwise, 0. This process effectively \"scrambles\" characters, rendering them as seemingly random data. Subtraction involves a fixed number being subtracted from each character's ASCII value, shifting characters within the string to obscure their original form.\n\nDecoding these strings necessitates the following: identification of stack-based string patterns within the binary code; determination of the obfuscation method (XOR or subtraction); and identification of the constant key used in the XOR operation or subtraction. This key could be revealed through code analysis or by leveraging known obfuscation techniques.  Finally, the inverse operation of XOR or subtraction is applied to each character using the discovered key, thereby revealing the original string. \n\n\n", "mitre_technique": {"id": "T1140", "name": "Deobfuscate/decode files or information", "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system."}, "pre-conditions": ["\nKnowledge of the specific obfuscation techniques used (e.g., XOR with a key).\n", "\nThe malware binary is present.\n", "\nThe strings are obfuscated with single byte XOR or subtraction.\n", "\nGoofy Guineapig contains stack-based strings.\n", "\nA system capable of executing the malware binary.\n", "\nTools capable of performing single byte XOR decryption.\n", "\nThe ability to analyze and interpret binary code.\n"], "post-conditions": ["\nPersistence on the system\n", "\nRC4 encrypted data\n", "\nUPX packed binary\n", "\nNew files created by the malware\n", "\nNetwork traffic analysis showing communication with C2 server\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nHTTPS connections to static.tcplog.com:4443\n", "\nLogs of system information collection\n", "\nModified registry entries\n", "\nAdditional malware loading\n", "\nObfuscated strings in memory and file\n", "\nXOR keys used for obfuscation\n", "\nNSIS installer\n"], "indicators": ["The file \"tmp.bat\" is located at \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\".", "The malware uses the User Agent string \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\"."]}, {"id": "0917b4e7-c8f2-403b-8f6d-d2e0868abafb", "name": "Hide Artifacts: Hidden Window as used by the malware", "description": "The malware, designated as \"Goofy Guineapig,\" employs process hollowing to conceal its artifacts.  This technique specifically targets the legitimate Windows process, dllhost.exe.\n\ndllhost.exe is selected as a target due to its common usage in hosting DLL files, thereby reducing the likelihood of detection by security software. \n\nThe malware injects its malicious code into the memory space of the running dllhost.exe process. Subsequently, the original code of dllhost.exe is replaced with the malware's payload, effectively granting control over the process.\n\nAs a result of this operation, the malicious code executes within the context and privileges of the legitimate dllhost.exe process. This allows the malware to operate under the guise of a legitimate Windows component, thereby evading detection.\n\nFurthermore, Goofy Guineapig creates a hidden window associated with the hollowed dllhost.exe process. This measure prevents security tools reliant on analyzing visible windows from identifying malicious activity. \n\n\n", "mitre_technique": {"id": "T1564.003", "name": "Hide artifacts: hidden window", "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks."}, "pre-conditions": ["\nAccess to system processes and windows.\n", "\nA running instance of the Goofy Guineapig malware.\n", "\nThe malware is running.\n"], "post-conditions": ["", "\nAltered system services configurations.\n", "\nModified file timestamps and access permissions.\n", "\nEvent log entries related to process creation, modification, and termination.\n", "\nPresence of suspicious processes running in memory.\n"], "indicators": ["The process name is \"tmp.bat\".", "A file named \"config.dat\" exists."]}, {"id": "06c84b26-ff48-4df5-bc05-df9246e0b81c", "name": "Indicator Removal on Host: File Deletion as used by the malware", "description": "Upon initial execution, Goofy Guineapig malware initiates file relocation procedures.  The malware copies its executable and associated files to a designated directory within the \"ProgramData\" folder. Subsequently, the original files are deleted from the initial download location. This operational sequence is designed to obfuscate evidence of infection and minimize the visibility of malicious files within the system environment. \n\n\n", "mitre_technique": {"id": "T1070.004", "name": "Indicator removal: file deletion", "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."}, "pre-conditions": ["\nThe malware has access to the file system.\n", "\nThe malware has successfully downloaded and extracted its files to a temporary location.\n", "\nThe malware has knowledge of the legitimate directory where Firefox installation files are located.\n", "\nA file system is present.\n", "\nThe malware has established persistence mechanisms.\n"], "post-conditions": ["\nLogs indicating process name checks for debuggers and sandboxes\n", "\nAdditional plugins loaded and executed\n", "\nHTTPS communication logs on non-standard port 4443\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNetwork traffic analysis revealing C2 server communication\n", "\nMalicious DLL file in ProgramData directory\n", "\nModified Windows service configuration\n", "\nDeleted files from initial download location\n", "\nRegistry modifications related to persistence mechanism\n", "\nPersistent backdoor infection\n", "\nIndicators of compromise (IOCs) matching known Goofy Guineapig artifacts\n"], "indicators": ["A file named \"tmp.bat\" was located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\".", "The file \"config.dat\" was deleted from the system."]}, {"id": "2063cf48-2de5-461b-931a-126b95ce382d", "name": "Hijack Execution Flow: DLL Side-Loading as used by the malware", "description": "The \"Goofy Guineapig\" malware employs DLL side-loading to subvert execution flow within target systems.  \n\nA malicious loader component is deployed, installing both a legitimate executable and a backdoor DLL onto the victim's system. The selection of legitimate executables, such as GoogleUpdate.exe, aims to circumvent security measures by leveraging existing trust associated with known software updates. \n\nDuring the execution of the legitimate executable, the malware exploits the standard process of loading dependent DLLs.  The malicious DLL is strategically positioned within the same directory as the legitimate executable and is named to resemble legitimate system or application DLLs.\n\nUpon loading, the legitimate executable inadvertently incorporates the malicious DLL into its own codebase. This enables the backdoor to establish a connection with a command and control server (C2), granting attackers the capability to:\n\n* Extract system information\n* Deploy additional malware payloads\n* Achieve complete control over the compromised machine\n\nTo hinder detection, \"Goofy Guineapig\" utilizes several evasion techniques:\n\n* Process name obfuscation may be employed to avoid recognition by security tools.\n* Trojanization of legitimate software packages, such as Firefox installers, facilitates malware integration within trusted contexts.\n* A window text check mechanism is implemented, scrutinizing the text content of running processes for specific strings. This serves as an additional layer of protection, but can be circumvented if the number of windows containing those strings is limited.\n\n\n\nThe \"Goofy Guineapig\" malware exploits the inherent trust associated with legitimate software to establish a foothold within victim systems. The DLL side-loading technique enables it to operate concealed within trusted processes, significantly complicating detection and removal efforts. \n", "mitre_technique": {"id": "T1574.002", "name": "Hijack execution flow: dll side-loading", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s)."}, "pre-conditions": ["\nA legitimate executable is installed on the system.\n", "\nThe malware must have the capability to load the malicious DLL into the legitimate process.\n"], "post-conditions": ["\nIndicators of compromise (IOCs) such as the SHA1 hash \"231ac2c5f3c9a833836be65f7443e3525eb1e7a3\" associated with Goofy Guineapig samples.\n", "\nCompromised system with persistent backdoor access.\n", "\nUPX packed NSIS installer with trojanized Firefox files.\n", "\nModified Firefox installation package.\n", "\nTimestamp manipulation in system logs.\n", "\nPresence of malicious DLL (Goopdate.dll) in system memory and/or on disk.\n", "\nData exfiltration from the infected system.\n", "\nPotential for further malware infections and lateral movement.\n", "\nLogs indicating process hollowing of dllhost.exe.\n", "\nNetwork connections to C2 server over HTTPS port 4443, HTTP, or KCP.\n", "\nModified GoogleUpdate.exe file.\n"], "indicators": ["The file \"tmp.bat\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\".", "The malware utilizes a DLL side-loading technique."]}, {"id": "dddc6046-90a9-4927-b883-af2fc7857f93", "name": "Process Injection: Process Hollowing as used by the malware", "description": "Process injection via process hollowing is employed by Goofy Guineapig malware.  The target process selected is dllhost.exe, a legitimate Windows executable responsible for hosting dynamic-link libraries (DLLs). This selection facilitates seamless integration of the malware.\n\nMemory allocation within the target process is performed by the malware to accommodate its malicious code. Subsequently, the existing contents of the dllhost.exe process image are overwritten with the injected payload, effectively hollowing out the original process and replacing its functionality.\n\nUpon successful code placement, Goofy Guineapig leverages standard Windows APIs to transfer control to the injected payload within the hollowed-out dllhost.exe process. This execution grants the malicious code the same privileges as the legitimate dllhost.exe process.\n\nAdditional components, such as plugins or modules, may be downloaded from a command and control (C2) server by the malware. These files are likely injected into the already hollowed-out dllhost.exe process, expanding the functionality of the backdoor. \n\n\nProcess hollowing, a sophisticated technique, can circumvent traditional signature-based detection methods.  \n", "mitre_technique": {"id": "T1055.012", "name": "Process injection: process hollowing", "description": "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process."}, "pre-conditions": ["\nA running instance of the dllhost.exe process is available.\n", "\nThe malware has the capability to modify the target process's image.\n"], "post-conditions": ["\nPersistence on the system\n", "\nModified legitimate executable\n", "\nIndicators of compromise (IOCs) in security logs\n", "\nPotential for further malware execution\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nShadow copies of infected files\n", "\nUnusual process creation and termination events\n", "\nModified system files\n", "\nDecoded shellcode remnants\n", "\nAltered system registry settings\n", "\nNew Windows service\n", "\nLog entries indicating suspicious activity\n", "\nNetwork traffic to C2 server\n", "\nMalicious DLL file\n"], "indicators": ["The process name is \"tmp.bat\".", "The file path includes \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat\"."]}, {"id": "83eb8219-5a00-4d02-807f-c8785d5d2a5b", "name": "Signed Binary Proxy Execution: Rundll32 as used by the malware", "description": "Persistence is achieved by the malware through the utilization of rundll32.exe and url.dll.  A legitimate binary is executed via rundll32.exe, which in turn loads the malicious Goofy Guineapig DLL. The specific function within url.dll invoked for this purpose remains undisclosed. This dynamic loading technique employed by the malware facilitates evasion of traditional detection methods reliant on static binary analysis. \n\n\n", "mitre_technique": {"id": "T1218.011", "name": "System binary proxy execution: rundll32", "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction})."}, "pre-conditions": ["\nThe malware has determined a suitable URL.dll entry point.\n", "\nWindows operating system.\n", "\nA malicious DLL is available to be loaded by rundll32.exe.\n", "exe` is present on the system."], "post-conditions": ["\nLogs of process injection and system calls\n", "\nNetwork connections to C2 server over HTTPS port 4443\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nModified legitimate executable (GoogleUpdate.exe)\n", "\nModified system files\n", "\nModified FireFox NSIS installation package\n", "\nAltered registry entries for persistence\n", "\nPotential for further malicious activity\n", "\nIndicators of compromise (IOCs) such as SHA1 hashes in logs or files\n", "\nMalicious DLL file\n", "\nUnusual activity in event logs\n", "\nPersistence established\n"], "indicators": ["The file \"tmp.bat\" is located at \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\"."]}], "pre-conditions": ["\nAccess to files and directories associated with Firefox or Google Update installations.\n", "\nThe malware has access to a list of legitimate names or locations.\n", "\nA target system running Firefox or Google Update software.\n", "\nAbility to modify file attributes and metadata.\n", "\nThe Goofy Guineapig malware is running.\n", "\nThe malware is executing.\n", "\nThe system has a functioning CPU timestamp counter.\n", "\nThe system has a defined number of logical processors.\n", "\nThe malware has access to system information.\n", "\nThe system has a defined disk size.\n", "\nAccess to Windows APIs.\n", "\nThe ability to check process names for specific strings is present.\n", "\nThe malware is running on a system.\n", "\nProcesses are running on the system.\n", "\nUPX is available.\n", "\nA legitimate NSIS installer is available.\n", "\nThe malware executable exists.\n", "\nKnowledge of the specific obfuscation techniques used (e.g., XOR with a key).\n", "\nThe malware binary is present.\n", "\nThe strings are obfuscated with single byte XOR or subtraction.\n", "\nGoofy Guineapig contains stack-based strings.\n", "\nA system capable of executing the malware binary.\n", "\nTools capable of performing single byte XOR decryption.\n", "\nThe ability to analyze and interpret binary code.\n", "\nAccess to system processes and windows.\n", "\nA running instance of the Goofy Guineapig malware.\n", "\nThe malware is running.\n", "\nThe malware has access to the file system.\n", "\nThe malware has successfully downloaded and extracted its files to a temporary location.\n", "\nThe malware has knowledge of the legitimate directory where Firefox installation files are located.\n", "\nA file system is present.\n", "\nThe malware has established persistence mechanisms.\n", "\nA legitimate executable is installed on the system.\n", "\nThe malware must have the capability to load the malicious DLL into the legitimate process.\n", "\nA running instance of the dllhost.exe process is available.\n", "\nThe malware has the capability to modify the target process's image.\n", "\nThe malware has determined a suitable URL.dll entry point.\n", "\nWindows operating system.\n", "\nA malicious DLL is available to be loaded by rundll32.exe.\n", "exe` is present on the system."], "post-conditions": ["\nPersistence on the system\n", "\nAltered registry entries\n", "\nData exfiltration\n", "\nNetwork traffic to command and control server over HTTPS port 4443\n", "\nExfiltrated data files\n", "\nCompromised system integrity\n", "\nPotential for further malicious activity\n", "\nModified system processes\n", "\nNew Windows service\n", "\nUnusual network connections using UDP, KCP protocols, or direct socket communications.\n", "\nMalicious DLL file\n", "\nNetwork connections to command and control servers.\n", "\nData exfiltration from infected machine.\n", "\nCompromised system with persistent backdoor.\n", "\nLogs indicating suspicious activity.\n", "\nPotential for additional malware loading and execution.\n", "\nAltered registry entries.\n", "\nUnusual process activity.\n", "\nNew files created by the malware (backdoor, configuration files).\n", "\nModified timestamps on system files.\n", "\nModified system files.\n", "\nPotential for additional malware execution and lateral movement.\n", "\nData exfiltration from infected machine.\n", "\nCompromised system with persistent backdoor access.\n", "\nNetwork traffic to command and control server(s) over HTTPS.\n", "\nAltered registry entries related to the backdoor and its functionality.\n", "\nUnusual disk access patterns.\n", "\nModified system configuration files.\n", "\nLogs indicating suspicious activity and process executions.\n", "\nTraces of deleted or modified system files.\n", "\nNew files created by the malware (backdoor, plugins).\n", "\nAltered registry settings\n", "\nNew Windows service installed\n", "\nCommand and control communication established\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nModified system files\n", "\nNetwork traffic to command and control server\n", "\nExfiltrated data files\n", "\nPresence of malicious DLL\n", "\nLog entries indicating suspicious activity\n", "\nPersistence established\n", "\nPersistence on the system\n", "\nNetwork traffic to command and control servers\n", "\nObfuscated or packed files\n", "\nNew processes and services running\n", "\nAltered registry settings\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nModified system files\n", "\nPotential for further malicious activity\n", "\nLog entries indicating suspicious activity\n", "\nPersistence on the system\n", "\nRC4 encrypted data\n", "\nUPX packed binary\n", "\nNew files created by the malware\n", "\nNetwork traffic analysis showing communication with C2 server\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nHTTPS connections to static.tcplog.com:4443\n", "\nLogs of system information collection\n", "\nModified registry entries\n", "\nAdditional malware loading\n", "\nObfuscated strings in memory and file\n", "\nXOR keys used for obfuscation\n", "\nNSIS installer\n", "", "\nAltered system services configurations.\n", "\nModified file timestamps and access permissions.\n", "\nEvent log entries related to process creation, modification, and termination.\n", "\nPresence of suspicious processes running in memory.\n", "\nLogs indicating process name checks for debuggers and sandboxes\n", "\nAdditional plugins loaded and executed\n", "\nHTTPS communication logs on non-standard port 4443\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNetwork traffic analysis revealing C2 server communication\n", "\nMalicious DLL file in ProgramData directory\n", "\nModified Windows service configuration\n", "\nDeleted files from initial download location\n", "\nRegistry modifications related to persistence mechanism\n", "\nPersistent backdoor infection\n", "\nIndicators of compromise (IOCs) matching known Goofy Guineapig artifacts\n", "\nIndicators of compromise (IOCs) such as the SHA1 hash \"231ac2c5f3c9a833836be65f7443e3525eb1e7a3\" associated with Goofy Guineapig samples.\n", "\nCompromised system with persistent backdoor access.\n", "\nUPX packed NSIS installer with trojanized Firefox files.\n", "\nModified Firefox installation package.\n", "\nTimestamp manipulation in system logs.\n", "\nPresence of malicious DLL (Goopdate.dll) in system memory and/or on disk.\n", "\nData exfiltration from the infected system.\n", "\nPotential for further malware infections and lateral movement.\n", "\nLogs indicating process hollowing of dllhost.exe.\n", "\nNetwork connections to C2 server over HTTPS port 4443, HTTP, or KCP.\n", "\nModified GoogleUpdate.exe file.\n", "\nPersistence on the system\n", "\nModified legitimate executable\n", "\nIndicators of compromise (IOCs) in security logs\n", "\nPotential for further malware execution\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nShadow copies of infected files\n", "\nUnusual process creation and termination events\n", "\nModified system files\n", "\nDecoded shellcode remnants\n", "\nAltered system registry settings\n", "\nNew Windows service\n", "\nLog entries indicating suspicious activity\n", "\nNetwork traffic to C2 server\n", "\nMalicious DLL file\n", "\nLogs of process injection and system calls\n", "\nNetwork connections to C2 server over HTTPS port 4443\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nModified legitimate executable (GoogleUpdate.exe)\n", "\nModified system files\n", "\nModified FireFox NSIS installation package\n", "\nAltered registry entries for persistence\n", "\nPotential for further malicious activity\n", "\nIndicators of compromise (IOCs) such as SHA1 hashes in logs or files\n", "\nMalicious DLL file\n", "\nUnusual activity in event logs\n", "\nPersistence established\n"]}, {"id": "8d0704f8-c886-4460-aa1d-7d3dbdc91601", "attack_steps": [{"id": "26b79fcf-02fd-4d95-a7a2-02952821f403", "name": "System Information Discovery as used by the malware", "description": "System information discovery performed by Goofy Guineapig involves the collection of various data points pertaining to the infected machine.  \n\nThis data encompasses operating system details (caption), antivirus product identification (display name), adapter configurations, host and hostname information, and the computer's name. \n\nData acquisition is facilitated through two primary methods: Windows Management Instrumentation (WMI) access via COM for retrieving the operating system caption and antivirus product display name, and the utilization of relevant Windows Application Programming Interfaces (APIs) to obtain the remaining system information.  \n\nCollected data undergoes obfuscation and is subsequently embedded within an \"Authorization\" string contained in the HTTP header of each communication packet transmitted to the Command and Control (C2) server. This embedding technique serves to conceal the sensitive nature of the transmitted data. \n\n\n", "mitre_technique": {"id": "T1082", "name": "System information discovery", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe malware is running on a victim machine.\n", "\nAccess to the Windows Management Instrumentation (WMI) is available.\n", "\nA Windows operating system is present.\n", "\nThe victim machine has an operating system.\n", "\nAccess to relevant Windows APIs is available.\n", "\nNetwork connectivity is required for communication with the command and control server.\n"], "post-conditions": ["\nProcess creation logs\n", "\nUnusual file access patterns in system logs\n", "\nPotential for further malware execution and actions\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nModified system files\n", "\nNetwork traffic logs (HTTPS)\n", "\nExfiltrated data files\n", "\nEvent log entries related to service installation/modification\n", "\nPersistence on the infected machine\n", "\nNew registry entries\n"], "indicators": ["The system's operating system is Windows NT 6.1.", "The system architecture is WOW64."]}], "pre-conditions": ["\nThe malware is running on a victim machine.\n", "\nAccess to the Windows Management Instrumentation (WMI) is available.\n", "\nA Windows operating system is present.\n", "\nThe victim machine has an operating system.\n", "\nAccess to relevant Windows APIs is available.\n", "\nNetwork connectivity is required for communication with the command and control server.\n"], "post-conditions": ["\nProcess creation logs\n", "\nUnusual file access patterns in system logs\n", "\nPotential for further malware execution and actions\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nModified system files\n", "\nNetwork traffic logs (HTTPS)\n", "\nExfiltrated data files\n", "\nEvent log entries related to service installation/modification\n", "\nPersistence on the infected machine\n", "\nNew registry entries\n"]}, {"id": "f179688e-06eb-42c1-98b5-71ca5609510e", "attack_steps": [{"id": "5cb6aa33-6f3e-4aca-8e79-947469fad5ed", "name": "Application Layer Protocol: Web Protocols as used by the malware", "description": "HTTPS is employed as the primary communication protocol for interactions between the infected machine and the C2 server.  Data exchanged between these entities is encrypted using Transport Layer Security (TLS), thereby ensuring confidentiality and integrity. \n\n\n", "mitre_technique": {"id": "T1071.001", "name": "Application layer protocol: web protocols", "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."}, "pre-conditions": ["\nPort 4443 is open on the target machine.\n", "\nThe infected machine has a network connection.\n", "\nThe malware is running.\n", "\nAccess to the domain static.tcplog.com.\n", "\nA functioning internet connection.\n", "\nHTTPS protocol support.\n"], "post-conditions": ["\nModified system configuration files\n", "\nAltered system registry entries\n", "\nCompromised system\n", "\nNetwork traffic to command and control server (static[.]tcplog[.]com) on non-standard port 4443\n", "\nData exfiltration\n", "\nEvidence of communication using KCP protocol over UDP\n", "\nTraces of anti-sandbox/anti-VM techniques employed by the malware\n", "\nPotential for further malware infections\n", "\nLogs containing obfuscated strings related to the malware's activity\n", "\nRemote control of infected machine\n", "\nNew files created with malicious content\n"], "indicators": ["The URL HTTPS://static.tcplog.com is accessed.", "A User Agent string indicating Chrome/54.0.2840.71 Safari/537.36 is used."]}, {"id": "3100ca25-44f8-4448-855e-b984c879d24d", "name": "Fallback Channels as used by the malware", "description": "Communication channels utilized by Goofy Guineapig are determined by a configuration string embedded within its binary. These channels include UDP for data transmission, KCP (Kubernetes Control Plane) protocol for efficient and reliable network communication, and direct socket communications for bypassing intermediary protocols.  \n", "mitre_technique": {"id": "T1008", "name": "Fallback channels", "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds."}, "pre-conditions": ["\nThe embedded configuration string in the malware binary specifies UDP or KCP as communication protocols.\n", "\nAn embedded configuration string exists within the malware binary.\n", "\nThe Goofy Guineapig malware binary is present and running.\n", "\nA system with a network connection.\n", "\nThe malware is configured to use fallback channels.\n"], "post-conditions": ["\nPersistence on the system\n", "\nModified system configuration files\n", "\nNetwork traffic to and from hardcoded IP addresses (e.g., static.tcplog.com)\n", "\nLogs indicating unusual activity or process execution\n", "\nAltered registry entries\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nFirewall rules modifications\n", "\nPotential for further malware infections\n", "\nDisk space usage increase\n", "\nNew files created (e.g., malicious DLLs, configuration files)\n"], "indicators": ["The file tmp.bat is located in the directory C:\\ProgramData\\GoogleUpdate\\GoogleUpdate."]}, {"id": "d3244091-c94f-46f4-a437-f1ceca65a5dd", "name": "Non-Standard Port as used by the malware", "description": "Command and control communications for Goofy Guineapig malware are conducted over the non-standard HTTPS port 4443.  \n", "mitre_technique": {"id": "T1571", "name": "Non-standard port", "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data."}, "pre-conditions": [""], "post-conditions": ["\nModified Windows service configuration.\n", "\nCompromised system with persistent backdoor access.\n", "\nFiles containing command and control communication data.\n", "\nPotential for further malware loading and execution.\n", "\nNetwork traffic to \"static.tcplog.com:4443\" using HTTPS protocol.\n", "\nAltered registry entries associated with the backdoor's persistence mechanism.\n", "\nMalicious DLL file present in system memory and/or on disk.\n", "\nData exfiltration from the compromised system.\n"], "indicators": []}], "pre-conditions": ["\nPort 4443 is open on the target machine.\n", "\nThe infected machine has a network connection.\n", "\nThe malware is running.\n", "\nAccess to the domain static.tcplog.com.\n", "\nA functioning internet connection.\n", "\nHTTPS protocol support.\n", "\nThe embedded configuration string in the malware binary specifies UDP or KCP as communication protocols.\n", "\nAn embedded configuration string exists within the malware binary.\n", "\nThe Goofy Guineapig malware binary is present and running.\n", "\nA system with a network connection.\n", "\nThe malware is configured to use fallback channels.\n", ""], "post-conditions": ["\nModified system configuration files\n", "\nAltered system registry entries\n", "\nCompromised system\n", "\nNetwork traffic to command and control server (static[.]tcplog[.]com) on non-standard port 4443\n", "\nData exfiltration\n", "\nEvidence of communication using KCP protocol over UDP\n", "\nTraces of anti-sandbox/anti-VM techniques employed by the malware\n", "\nPotential for further malware infections\n", "\nLogs containing obfuscated strings related to the malware's activity\n", "\nRemote control of infected machine\n", "\nNew files created with malicious content\n", "\nPersistence on the system\n", "\nModified system configuration files\n", "\nNetwork traffic to and from hardcoded IP addresses (e.g., static.tcplog.com)\n", "\nLogs indicating unusual activity or process execution\n", "\nAltered registry entries\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nFirewall rules modifications\n", "\nPotential for further malware infections\n", "\nDisk space usage increase\n", "\nNew files created (e.g., malicious DLLs, configuration files)\n", "\nModified Windows service configuration.\n", "\nCompromised system with persistent backdoor access.\n", "\nFiles containing command and control communication data.\n", "\nPotential for further malware loading and execution.\n", "\nNetwork traffic to \"static.tcplog.com:4443\" using HTTPS protocol.\n", "\nAltered registry entries associated with the backdoor's persistence mechanism.\n", "\nMalicious DLL file present in system memory and/or on disk.\n", "\nData exfiltration from the compromised system.\n"]}]