[{"id": "79650cb4-1228-4f4b-9f39-30b826c88adc", "attack_steps": [{"id": "e0078099-9405-4fd8-a7f2-4676f767ef01", "name": "Exploit Public-Facing Application as used by the malware", "description": "It is inferred that the deployment of COLDSTEEL malware is contingent upon the exploitation of a vulnerability present within publicly accessible applications.  This inference is supported by the observed emphasis on kernel-level operations subsequent to the initial compromise, suggesting an initial attack vector aimed at establishing a foothold and gaining access. The malware's primary focus on persistence mechanisms further supports this conclusion, as such techniques are unlikely to be achieved through a simple exploit. \n\n\n", "mitre_technique": {"id": "T1190", "name": "Exploit public-facing application", "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration."}, "pre-conditions": ["\nInternet connectivity to reach the target public-facing application.\n", "\nThe malware is capable of identifying and exploiting the vulnerability.\n", "\nA public-facing application exists with a known vulnerability.\n", "\nThe malware must be deployed on a system with access to the internet.\n"], "post-conditions": ["\nModified driver code in the system.\n", "\nSystem stability may be compromised due to processes running indefinitely.\n", "\nSystem logs indicating changes to process permissions.\n", "\nNetwork connections established with command and control servers (if applicable).\n", "\nProcesses can no longer be terminated by user-mode applications.\n", "\nFiles containing malicious code or configuration data.\n", "\nRegistry entries related to the driver and its callbacks.\n"], "indicators": ["The file name is \"newdev.dll\".", "The path includes \"AppData\\Roaming\\newdev.dll\"."]}]}, {"id": "d7aa0fe7-77cc-456a-b57c-1d66a58cb1d6", "attack_steps": [{"id": "9c594503-c0e3-49e7-829c-6dc798a9fb0c", "name": "Command and Scripting Interpreter: Windows Command Shell as used by the malware", "description": "The malware variant COLDSTEEL exhibits command execution capabilities through the exploitation of cmd.exe. Certain variants obfuscate their actions by copying cmd.exe into the dllhost.exe process, potentially evading detection mechanisms focused on cmd.exe executions.  COLDSTEEL's ability to execute arbitrary commands via these methods allows for remote control of infected machines, data exfiltration, and the installation of additional malicious software. \n\n\n", "mitre_technique": {"id": "T1059.003", "name": "Command and scripting interpreter: windows command shell", "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH."}, "pre-conditions": ["\nA Windows operating system is present.\n", "\nA compromised Windows machine.\n", "\nThe malware has successfully infected the target machine.\n", "\nNetwork connectivity may be required for the malware to communicate with its command and control server.\n", "\nThe malware has access to execute commands within the Windows Command Shell.\n"], "post-conditions": ["\nModified system files\n", "\nLog entries indicating suspicious activity\n", "\nRemote control of infected machine\n", "\nHidden processes running in memory\n", "\nPotential for further malware installation\n", "\nAltered process lists\n", "\nNetwork traffic to command and control server\n", "\nData exfiltration\n", "\nNew files created with malicious code\n", "\nUnusual registry entries\n", "\nSystem compromise\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "e9e601e2-05f8-4f64-904a-7931f032ccf0", "name": "System Services: Service Execution as used by the malware", "description": "COLDSTEEL malware is characterized by its persistent nature and sophisticated design, with documented versions including FBI20111024, Milestone 2016, and Milestone 2017. Its primary objectives encompass establishing persistence within infected systems, gathering comprehensive system information, facilitating communication with a Command and Control (C2) server, and executing additional tasks as directed by the C2 server.\n\nWindows services are integral system components designed for continuous background operation and provision of diverse functionalities. Their inherent trustworthiness by the operating system and elevated privileges render them attractive targets for malware such as COLDSTEEL.  The exploitation of these services enables malware to achieve persistence through automatic startup upon Windows boot, gain system-level access for sensitive resource manipulation, and operate stealthily in the background, evading detection by security software or users.\n\nCOLDSTEEL's operational strategy involves leveraging system services to execute malicious code under a legitimate service context. Initial access is gained, followed by installation as a Windows service. Upon system startup, the COLDSTEEL service automatically initiates operations, encompassing information gathering, C2 server communication, and execution of additional commands. \n\nThe utilization of system services by COLDSTEEL grants it stealth, persistence, and elevated privileges, potentially resulting in data theft, including passwords, financial data, or intellectual property, as well as system compromise through the disabling of security features, installation of additional malicious software, or repurposing of the infected system for further attacks. \n\n\n", "mitre_technique": {"id": "T1569.002", "name": "System services: service execution", "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net."}, "pre-conditions": ["\nA Windows operating system is present.\n", "\nThe malware possesses the capability to create and manipulate Windows services.\n", "\nA running Windows system with enabled service functionality.\n", "\nThe malware has successfully infiltrated the target system.\n"], "post-conditions": ["\nModified system files\n", "\nLog entries indicating suspicious activity\n", "\nProcess creation and execution logs\n", "\nLoss of system control\n", "\nRegistry changes\n", "\nWindows service installed\n", "\nIncreased risk of further attacks\n", "\nNew files created or modified\n", "\nData exfiltration possible\n", "\nNetwork traffic to C2 server\n", "\nSystem compromised\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}]}, {"id": "ea094c16-83bc-45c8-a584-7fb3ed281961", "attack_steps": [{"id": "abea4a73-0423-47f0-9e63-f5b3591cdb3b", "name": "Create or Modify System Process: Windows Service as used by the malware", "description": "A Windows service is created by COLDSTEEL malware to achieve persistence on a compromised system. This action aligns with the T1543.003: Create or Modify System Process tactic.  \n\nDuring system startup, the newly created service is configured for automatic execution. Malicious code payloads are executed within the context of this Windows service. \n\n\n", "mitre_technique": {"id": "T1543.003", "name": "Create or modify system process: windows service", "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."}, "pre-conditions": ["\nNetwork connectivity to communicate with a command and control (C2) server.\n", "\nA Windows operating system is present.\n", "\nAccess to system resources for creating and modifying services.\n", "\nThe ability to execute code within the context of a Windows service.\n", "\nThe malware has access to the system's kernel.\n"], "post-conditions": ["\nLog entries indicating suspicious activity\n", "\nDeleted or altered original files\n", "\nNew files with suspicious names and extensions\n", "\nUnusual network traffic to C2 server addresses\n", "\nPersistence mechanisms in startup folders or registry keys\n", "\nRegistry modifications\n", "\nData exfiltration\n", "\nSystem instability\n", "\nCompromised system functionality\n", "\nIncreased security risks\n", "\nModified system services\n", "\nPotential for further malware infections\n"], "indicators": ["file : name = 'newdev.dll'", "file : parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}]}, {"id": "123aa290-1375-468e-ad0b-bb664038754e", "attack_steps": [{"id": "0c3818a7-4d43-4dc1-a88f-577f8def42d7", "name": "Obfuscated Files or Information: Software Packing as used by the malware", "description": "Software packing techniques are frequently employed by malicious actors to obfuscate malware code, rendering it less susceptible to detection and analysis. This process involves compressing and encrypting the original malware code using a specialized packer program, resulting in a significantly smaller file that appears benign.  \n\nThe packed file often incorporates a segment of code designated as \"shellcode,\" which is responsible for unpacking the malware upon execution. \n\nSoftware packing confers several advantages to malicious developers, including evasion of antivirus and security software due to the disguised nature of the packed files, and increased difficulty for security researchers in comprehending the malware's functionality owing to the concealment of the original code.\n\nThemida, a widely utilized packing tool renowned for its advanced features, is frequently employed by malware variants such as \"MileStone2017.\" \n\n\nFortinet's FortiEDR security solution offers out-of-the-box detection capabilities against known packing techniques, including Themida, eliminating the need for manual configuration or updates.  \n", "mitre_technique": {"id": "T1027.002", "name": "Obfuscated files or information: software packing", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."}, "pre-conditions": ["\nAccess to a computer system infected with the malware.\n", "\nA tool capable of analyzing and unpacking software (e.g., disassembler, debugger).\n", "\nThe malware utilizes software packing techniques.\n"], "post-conditions": [], "indicators": ["file : name = ' newdev . dll'", "file : hashes.sha256 =  '...' (Replace with actual SHA256 hash)", "file : hashes.md5 =  '...' (Replace with actual MD5 hash)"]}, {"id": "57df195b-2495-4916-a7bf-4878857b643a", "name": "Modify Registry as used by the malware", "description": "Registry modifications are executed by the COLDSTEEL malware through the utilization of the T1112 technique.  Direct manipulation of registry keys, rather than standard Windows APIs, is employed to facilitate stealthy operations. This approach circumvents typical logging and auditing mechanisms. \n\nThe malware specifically targets registry entries associated with its own service, modifying the description field to obscure its true nature and hinder detection.\n\n\nThis technique enables COLDSTEEL to conceal its presence by disguising its service, thereby making it more difficult for security tools and administrators to identify its activity.  Security software often relies on known registry patterns or descriptions to flag malicious processes; consequently, modification of these entries can assist the malware in evading detection. \n", "mitre_technique": {"id": "T1112", "name": "Modify registry", "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution."}, "pre-conditions": ["\nA Windows operating system is present.\n", "\nThe target system is running a supported operating system version.\n", "\nThe malware possesses the necessary code to interact with the Windows Registry API.\n"], "post-conditions": ["\nBackdoor executable files\n", "\nModified registry keys\n", "\nDeleted files\n", "\nData loss\n", "\nNetwork connections to unknown servers\n", "\nIncreased vulnerability to further attacks\n", "\nNew processes running with suspicious names\n", "\nUnusual log entries\n", "\nSystem instability\n", "\nCompromised system functionality\n", "\nAltered system configurations\n", "\nHidden files and folders\n", "\nUnauthorized access to sensitive information\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "47b598de-ee6c-4a3d-86b4-8189ff14e150", "name": "Indicator Removal: File Deletion as used by the malware", "description": "File deletion is employed by the COLDSTEEL malware family as a means of indicator removal.  Specific files targeted for deletion may encompass antivirus or security software components, logs documenting malicious activity, and system files essential for security and integrity. This file deletion functionality is executed through the ServiceMain function within the injected DLL, which operates as part of a newly created Windows service. The malware's persistence is facilitated by this service creation mechanism, ensuring continued execution even after user interaction or system restarts.  \n\n\n", "mitre_technique": {"id": "T1070.004", "name": "Indicator removal: file deletion", "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."}, "pre-conditions": ["\nThe malware has successfully infected a system.\n"], "post-conditions": ["\nModified registry keys\n", "\nCompromised user accounts\n", "\nDeleted files\n", "\nAltered system logs\n", "\nNetwork vulnerabilities\n", "\nData loss\n", "\nSuspicious file modifications or creations\n", "\nSystem instability\n", "\nBackdoors or malware implants\n", "\nUnusual network connections to external IP addresses\n", "\nNew processes created with elevated privileges\n", "\nMalware persistence\n"], "indicators": ["file : name = 'newdev.dll'", "file : parent_directory_ref.path = 'C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming'"]}, {"id": "50adf7ab-3122-4927-9358-f68772534b09", "name": "Access Token Manipulation: Create Process with Token as used by the malware", "description": "The described malware exhibits characteristics indicative of an advanced persistent threat (APT) group. Multiple samples were compiled contemporaneously and subsequently signed within a short timeframe, suggesting collaborative development practices among the perpetrators. The utilization of legitimate certificates for code signing is a common tactic employed to circumvent antivirus detection by imparting an aura of trustworthiness to the malicious software.\n\nThe malware leverages the \"ObRegisterCallbacks\" technique to manipulate system-level processes at the driver level. This manipulation enables the malware to intercept process creation events and modify associated permissions, such as removing the ability for termination. Processes are created utilizing the \"Anonymous\" user account, a tactic often employed to evade detection due to its less privileged yet widespread nature.\n\nThe most critical aspect of this malware is its capability to manipulate access tokens. Access tokens contain information pertaining to a user's permissions and privileges. By creating processes with specific tokens, the malware can effectively impersonate legitimate users or escalate its own privileges within the system.\n\nThis type of malware presents significant threats, including privilege escalation, enabling access to sensitive data, modification of system settings, and installation of additional malicious software. Data theft is another potential consequence, as high-level access permits the exfiltration of valuable information such as usernames, passwords, financial data, or intellectual property. Furthermore, the malware's ability to modify process creation permissions ensures its persistence even in the face of security measures aimed at removal.\n\nFortinet's FortiEDR solution is capable of detecting and blocking these threats automatically. This functionality stems from pre-defined rules and signatures that recognize the specific characteristics of this malware, including its code signing, driver techniques, and process creation behavior. Additionally, FortiEDR can analyze system activity in real time to identify malicious actions such as access token manipulation. \n\n\n", "mitre_technique": {"id": "T1134.002", "name": "Access token manipulation: create process with token", "description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas."}, "pre-conditions": ["\nThe malware has successfully infected the target system.\n", "\nA process with elevated privileges exists.\n", "\nThe malware has knowledge of the ANONYMOUS user account.\n", "\nThe system is running a Windows operating system.\n", "\nThe malware possesses code capable of manipulating access tokens.\n"], "post-conditions": ["\nNetwork communication with C2 server\n", "\nLog entries indicating suspicious activity\n", "\nAltered registry settings\n", "\nDeleted files\n", "\nHidden or encrypted files\n", "\nData exfiltration\n", "\nModified system services\n", "\nService persistence\n", "\nSystem compromise\n", "\nNew processes created\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}]}, {"id": "d198da3e-6168-4faa-a3c8-8e68dbdcc40f", "attack_steps": [{"id": "aa53f9d0-3509-4d46-8849-7136ae1c5bb5", "name": "System Information Discovery as used by the malware", "description": "System information discovery is a key function of the COLDSTEEL malware.  Information pertaining to the compromised system is collected by various techniques to facilitate attacker understanding of the environment, identification of potential vulnerabilities, and tailoring of subsequent attacks.\n\nThe specific data points targeted by COLDSTEEL likely encompass:\n\n* Operating System Details: Version, edition, build number, and service pack information are extracted.\n* Hardware Information:  CPU model and speed, RAM size, motherboard manufacturer and model, network adapter details (MAC address and IP address), and disk drive information (size and type) are gathered.\n* Running Processes: Process names and IDs, along with the user accounts associated with each process, are collected.\n* Installed Software: Application names and versions are identified.\n* Network Configuration: Active network connections, DNS servers, and the IP routing table are determined.\n\nThe execution of these information gathering tasks is likely achieved through a combination of system calls, API functions, and potentially custom code modules. Techniques such as leveraging Win32 APIs (e.g., GetSystemInfo, GetComputerName, EnumProcesses) and utilizing PowerShell cmdlets for efficient automation are plausible methods employed by COLDSTEEL.\n\nVariations in information gathering techniques across different COLDSTEEL variants have been observed. Early versions may exhibit limited compatibility with Windows 10 operating systems. Additionally, certain variants might introduce memory leaks, potentially impacting system performance or stability over time.\n\n\n", "mitre_technique": {"id": "T1082", "name": "System information discovery", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe COLDSTEEL malware variant is active and running.\n", "\nNetwork connectivity to the C2 server.\n", "\nThe malware has successfully infected a target machine.\n", "\nA compromised Windows system.\n"], "post-conditions": ["\nModified system registry entries\n", "\nHidden or encrypted data\n", "\nAltered log files\n", "\nData exfiltration\n", "\nSystem instability\n", "\nCompromised system functionality\n", "\nIncreased security vulnerability\n", "\nNew files created with malicious code\n", "\nUnusual process activity logs\n", "\nNetwork traffic to C2 server\n"], "indicators": ["file : name = ' newdev . dll'", "file : parent_directory_ref.path = ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming '", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]", "IPv4: 103.224.80.76: [ ip v 4 - a d d r : v a l u e   =   ' 1 0 3 . 2 2 4 . 8 0 . 7 6 ' ]", "IPv4: 138.128.98.106: [ ip v 4 - a d d r : v a l u e   =   ' 1 3 8 . 1 2 8 . 9 8 . 1 0 6 ' ]", "IPv4: 1.9.5.38: [ ip v 4 - a d d r : v a l u e   =   ' 1 . 9 . 5 . 3 8 ' ]"]}, {"id": "7eea0df2-eb01-4e27-ac85-16f6d605fdb5", "name": "File and Directory Discovery as used by the malware", "description": "File and directory discovery activities are suspected based on observed patterns within provided textual data.  The repeated occurrence of \"http://104.223.34.[.]198/filename.php\" suggests an attempt to access files on a designated server, potentially disguised as harmless PHP scripts. This pattern is indicative of malware probing the target system's file structure for valuable information or vulnerabilities.  File extensions such as \"111.php\", \"1dll.php\", and \"syn.php\" further indicate attempts to access files with common extensions associated with executable programs or system configurations. Malware frequently targets these file types for executing commands, data exfiltration, or propagation. The listed domains, including \"giga.gnisoft.com\" and \"4vpn2.smi1egate.com\", are likely compromised servers utilized by the malware's command and control infrastructure or decoys designed to obfuscate security analysis.\n\nFile discovery is typically executed through various methods employed by malware. These methods encompass recursive directory scanning to access and analyze file contents, utilization of system calls such as \"listdir\" or \"opendir\" for listing directory contents and opening files, and exploitation of vulnerabilities within the target system to gain unauthorized access to sensitive files or directories.\n\nThe consequences of successful file and directory discovery can be severe. Malware may steal confidential information including passwords, financial data, or intellectual property.  Furthermore, malware can install backdoors or rootkits, granting attackers persistent control over the compromised system. File and directory discovery often precedes ransomware attacks, enabling malware to identify valuable files for subsequent encryption in exchange for ransom. \n\n\n", "mitre_technique": {"id": "T1083", "name": "File and directory discovery", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nNetwork connectivity may be required for certain file discovery techniques, such as querying remote servers or utilizing cloud-based resources.\n", "\nThe malware has successfully infected a target machine.\n", "\nThe malware has access to the system's filesystem.\n"], "post-conditions": ["\nRootkit artifacts in memory\n", "\nReputational damage\n", "\nPersistence through backdoors and rootkits\n", "\nModified system registry entries\n", "\nNew user accounts created\n", "\nBackdoor executables\n", "\nData exfiltration\n", "\nLateral movement within the network\n", "\nNetwork traffic to command-and-control servers\n", "\nAltered system configurations\n", "\nDisruption of services\n", "\nDeleted or modified log files\n", "\nUnusual process activity logs\n", "\nHidden files and folders\n", "\nSystem compromise\n"], "indicators": ["file: name = 'newdev.dll'", "file: parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}, {"id": "9fc3355f-280c-4247-97ad-0f40a6459669", "name": "Process Discovery as used by the malware", "description": "Process discovery techniques employed by FBI20111024 malware variants may involve the utilization of system calls to retrieve process-related information from the operating system. These calls encompass functions such as GetProcesses for listing running processes, OpenProcess for accessing specific process details, and QueryProcessInformation for querying process attributes.\n\nFurthermore, direct memory inspection techniques may be leveraged by the malware to scan system memory for process data structures, enabling the acquisition of granular process information, including loaded modules and thread activity.\n\nThe gathered process information is potentially exfiltrated to a command-and-control (C2) server controlled by the attackers. This facilitates their understanding of the compromised system's state, identification of potential exploitation targets based on process characteristics, and tailoring of subsequent attacks according to the compromised machine's environment. \n\n\nIndicators of compromise (IOCs) potentially associated with this malware variant include specific IP addresses, URLs, and domain names. These IOCs may be indicative of C2 server infrastructure or compromised systems.  \n", "mitre_technique": {"id": "T1057", "name": "Process discovery", "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nSystem resources are available for process information retrieval.\n", "\nThe malware possesses capabilities to enumerate processes.\n", "\nA compromised system with the malware installed and active.\n"], "post-conditions": ["\nModified system files\n", "\nLog entries indicating suspicious activity\n", "\nFiles downloaded from C2 server\n", "\nRegistry modifications\n", "\nService disruption\n", "\nNetwork reconnaissance\n", "\nData exfiltration\n", "\nLateral movement potential\n", "\nNetwork traffic analysis revealing communication patterns\n", "\nRaw TCP connections to C2 server\n", "\nNew Windows service\n", "\nProcess creation logs\n", "\nSystem compromise\n"], "indicators": ["The file name is \"newdev.dll\".", "The file path is \"C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll\".", "The malware communicates with IPv4 addresses: 192.95.36.61, 103.224.80.76, 138.128.98.106, and 1.9.5.38."]}]}, {"id": "7902d2ab-054d-45ab-aaab-2252ad1d6338", "attack_steps": [{"id": "9d540d5b-0ae7-453f-af6f-e7d6bb3a24f2", "name": "Non-Application Layer Protocol as used by the malware", "description": "TCP sockets are utilized by the COLDSTEEL malware for communication with its command and control (C2) server.  A TCP socket connection is established by COLDSTEEL to the designated C2 server IP address and port. A custom message format is employed by COLDSTEEL for its communication, rather than standard application protocols such as HTTP or HTTPS. This format likely encodes commands, data exfiltration requests, and other information pertinent to the malware's functionality.  Data exchange between COLDSTEEL and the C2 server occurs via messages utilizing this custom format. Instructions may be sent to the infected machine by the server, stolen data may be received, or further communication channels may be established. The utilization of a non-standard protocol, such as TCP sockets with a custom message format, presents challenges for security tools in detecting and analyzing COLDSTEEL's communication, thereby contributing to its stealthy nature. \n", "mitre_technique": {"id": "T1095", "name": "Non-application layer protocol", "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL)."}, "pre-conditions": ["\nCOLDSTEEL is active and running.\n", "\nNetwork connectivity to allow communication between COLDSTEEL and its Command and Control (C2) server.\n", "\nThe malware COLDSTEEL is present in the system.\n"], "post-conditions": ["", "\nData files transferred to the C2 server.\n", "\nModified system registry settings for persistence.\n", "\nObfuscated files containing malicious code.\n", "\nLogs indicating process creation and communication with the C2 server.\n"], "indicators": ["IPv4: 192.95.36.61: is used by the malware.", "IPv4: 103.224.80.76: is used by the malware.", "IPv4: 138.128.98.106: is used by the malware.", "IPv4: 1.9.5.38: is used by the malware."]}]}]