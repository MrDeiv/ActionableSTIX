[{"id": "b4019213-f74f-4a01-86ba-2d650d6b994e", "attack_steps": [{"id": "e60d6fdc-fef2-49de-ae53-391616b91978", "name": "Exploit Public-Facing Application as used by the malware", "description": "This document details variations of the COLDSTEEL malware, emphasizing distinctions from prior iterations and elucidating its functionality concerning process handle exploitation. Three primary variants are delineated: FBI20111024, MileStone 2016, and MileStone 2017. Each variant exhibits unique characteristics. The FBI20111024 variant lacks Windows 10 compatibility and presents a memory leak upon execution.  MileStone 2016 and MileStone 2017 variants share functionalities centered on manipulating process handles through the ObRegisterCallbacks technique.\n\nThe core malicious action involves the hijacking of system-level handle operations. This is achieved through callback registration with the operating system (ObRegisterCallbacks), triggering a function upon the creation or duplication of new process or thread handles. Upon occurrence of a handle access request originating from user mode, the malware analyzes the target process's image path and Process ID. If these values correspond to processes on its pre-populated \"allow list,\" action is taken.  Crucially, PROCESS_TERMINATE permission is removed from the handle access request by COLDSTEEL, effectively preventing legitimate processes from terminating the hijacked process, even if possessing the necessary rights.\n\nThe disabling of termination permissions for specific processes enables COLDSTEEL to maintain persistence, allowing malicious code within these processes to continue executing undetected despite system restarts or shutdown attempts.  Furthermore, control over critical system processes is gained, potentially redirecting resources, manipulating data, or launching further attacks. This manipulation of handle permissions hinders security tools and analysis by impeding typical process termination methods.\n\nA potential connection to Log4j exploitation is mentioned within the document. While specifics are lacking, it is likely that COLDSTEEL was deployed following successful exploitation of a vulnerable Log4j instance, leveraging compromised systems as initial footholds for its operations. \n\n\n", "mitre_technique": {"id": "T1190", "name": "Exploit public-facing application", "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration."}, "pre-conditions": ["\nA public-facing application exists with a known vulnerability.\n", "\nThe malware is capable of identifying and exploiting the vulnerability.\n", "\nA system with an internet connection.\n"], "post-conditions": ["\nLogs indicating process creation and handle access modifications.\n", "\nThreat actor's malicious processes are harder to detect and remove.\n", "\nNew driver loaded into the system.\n", "\nCallback routine registered with ObRegisterCallbacks.\n", "\nNetwork connections between compromised machine and C2 server.\n", "\nModified registry keys.\n", "\nModified or new files on the system, such as \"dllhost.exe\".\n", "\nProcesses can no longer be terminated by standard APIs.\n"], "indicators": ["The file name is \"newdev.dll\".", "The path includes \"AppData\\Roaming\\newdev.dll\"."]}], "pre-conditions": ["\nA public-facing application exists with a known vulnerability.\n", "\nThe malware is capable of identifying and exploiting the vulnerability.\n", "\nA system with an internet connection.\n"], "post-conditions": ["\nLogs indicating process creation and handle access modifications.\n", "\nThreat actor's malicious processes are harder to detect and remove.\n", "\nNew driver loaded into the system.\n", "\nCallback routine registered with ObRegisterCallbacks.\n", "\nNetwork connections between compromised machine and C2 server.\n", "\nModified registry keys.\n", "\nModified or new files on the system, such as \"dllhost.exe\".\n", "\nProcesses can no longer be terminated by standard APIs.\n"]}, {"id": "87aa6bcb-2105-41e6-b330-13ae65c67c6f", "attack_steps": [{"id": "88e89e86-382e-405d-a7b9-467d43ab054c", "name": "Command and Scripting Interpreter: Windows Command Shell as used by the malware", "description": "The execution of arbitrary commands on compromised systems by the COLDSTEEL malware is facilitated through the utilization of the Windows Command Shell (cmd.exe).  Initial access to a victim system is typically achieved through methods such as phishing, exploitation vulnerabilities, or other techniques. \n\nOnce established, the malware's functionality enables the execution of commands via cmd.exe, with the specific commands being determined by attacker directives. To evade detection, certain variants employ obfuscation techniques, including the copying of cmd.exe to dllhost.exe prior to command execution. This tactic is commonly used by malware to circumvent security measures specifically designed to monitor CMD executions.\n\nThe malware's capabilities are demonstrated through its ability to gather and relay sensitive data, such as information pertaining to current system sessions, to a command-and-control server.  \n\nThe arbitrary execution capability afforded by cmd.exe empowers COLDSTEEL to perform a wide range of actions, encompassing both simple file manipulations and complex tasks requiring system-level access. The utilization of cmd.exe provides attackers with a versatile tool for customizing their attacks and achieving specific objectives on compromised systems. \n\n\n", "mitre_technique": {"id": "T1059.003", "name": "Command and scripting interpreter: windows command shell", "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH."}, "pre-conditions": ["\nA Windows operating system with cmd.exe available.\n", "\nThe target system is running a Windows operating system.\n", "\nThe malware executable must be present and loaded into memory.\n", "\nThe malware has successfully gained execution on the target system.\n"], "post-conditions": ["\nLog entries indicating suspicious activity\n", "\nData exfiltration\n", "\nBackdoor access established\n", "\nUnusual network traffic\n", "\nMalicious service running\n", "\nSystem instability\n", "\nIncreased security risks\n", "\nCommunication logs with C2 server\n", "\nAltered registry settings\n", "\nNew files with malicious code\n", "\nModified system configurations\n", "\nCompromised system functionality\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "a77981b0-5835-467d-a7a2-f28d76071309", "name": "System Services: Service Execution as used by the malware", "description": "The malware designated as COLDSTEEL is engineered for espionage purposes, with functionalities encompassing data collection from infected systems and potential execution of commands transmitted by its command-and-control (C2) server.  \n\nCOLDSTEAL establishes persistence on compromised machines through the utilization of a Windows service. This mechanism ensures continuous operation even after user logoff or system restarts. \n\nSystem information is surveyed by COLDSTEEL, encompassing hardware specifications, software inventory, and network configurations. The gathered data is subsequently transmitted to the C2 server via raw TCP connections, facilitating communication between the malware and its controllers.\n\nThe C2 server possesses the capability to dispatch additional instructions to COLDSTEEL. These directives may encompass further reconnaissance activities on the infected system, execution of arbitrary code, or acquisition of sensitive data. \n\nVariations of COLDSTEEL exist, each exhibiting distinct capabilities and support for diverse operating systems. Notably, early variants may lack compatibility with Windows 10.\n\nCOLDSTEEL leverages \"System Services: Service Execution\" to conceal its malicious activities within the legitimate Windows service framework.  A new Windows service is created by the malware, adopting a seemingly benign name. Upon initiation, this service executes the embedded malicious code within COLDSTEEL. This code may be responsible for data collection, establishment of communication with the C2 server, downloading and executing additional malware payloads, or deletion of evidence.\n\nDue to the background operation of services, even after user logoff or system restarts, COLDSTEEL maintains its active state and continues execution of its malicious code. \n\n\n", "mitre_technique": {"id": "T1569.002", "name": "System services: service execution", "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net."}, "pre-conditions": ["\nThe COLDSTEEL malware code is available to be executed.\n", "\nA Windows operating system is present.\n", "\nThe ability to create and configure new Windows services.\n", "\nThe malware has successfully gained a foothold on the target system.\n"], "post-conditions": ["\nAltered registry entries\n", "\nData exfiltration\n", "\nDeleted or modified original files\n", "\nMalicious service running\n", "\nSystem instability\n", "\nIncreased security risks\n", "\nModified system processes\n", "\nNetwork connections to command-and-control servers\n", "\nNew files with suspicious names and content\n", "\nUnusual log entries\n", "\nBackdoors installed\n", "\nCompromised system functionality\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}], "pre-conditions": ["\nA Windows operating system with cmd.exe available.\n", "\nThe target system is running a Windows operating system.\n", "\nThe malware executable must be present and loaded into memory.\n", "\nThe malware has successfully gained execution on the target system.\n", "\nThe COLDSTEEL malware code is available to be executed.\n", "\nA Windows operating system is present.\n", "\nThe ability to create and configure new Windows services.\n", "\nThe malware has successfully gained a foothold on the target system.\n"], "post-conditions": ["\nLog entries indicating suspicious activity\n", "\nData exfiltration\n", "\nBackdoor access established\n", "\nUnusual network traffic\n", "\nMalicious service running\n", "\nSystem instability\n", "\nIncreased security risks\n", "\nCommunication logs with C2 server\n", "\nAltered registry settings\n", "\nNew files with malicious code\n", "\nModified system configurations\n", "\nCompromised system functionality\n", "\nAltered registry entries\n", "\nData exfiltration\n", "\nDeleted or modified original files\n", "\nMalicious service running\n", "\nSystem instability\n", "\nIncreased security risks\n", "\nModified system processes\n", "\nNetwork connections to command-and-control servers\n", "\nNew files with suspicious names and content\n", "\nUnusual log entries\n", "\nBackdoors installed\n", "\nCompromised system functionality\n"]}, {"id": "d897f063-3e9e-4bab-b74a-d9cf38e90bed", "attack_steps": [{"id": "6583f6ed-d788-4156-9ad8-6570751f8f92", "name": "Create or Modify System Process: Windows Service as used by the malware", "description": "A Windows service is generated by COLDSTEEL with a designated name and configuration parameters, enabling automatic execution upon system startup.  The core malicious functionality of COLDSTEEL is encapsulated within a DLL file (e.g., C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll). Upon service initiation, this DLL is loaded into memory.\n\nA specialized function designated \"ServiceMain\" exists within the loaded DLL. Execution of this function occurs when the service commences operation, containing code that facilitates the malware's activities. \n\nThe creation and configuration of an autostart service by COLDSTEEL ensures continuous execution of its malicious code even after system reboots. This characteristic renders it highly resistant to removal attempts by users or security software.  \n", "mitre_technique": {"id": "T1543.003", "name": "Create or modify system process: windows service", "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."}, "pre-conditions": ["\nA Windows operating system is present.\n", "\nThe malware has the capability to interact with the Windows API.\n", "\nThe malware has access to the system's kernel.\n"], "post-conditions": ["\nBackdoor executables\n", "\nRemote server connections\n", "\nUnauthorized access to sensitive information\n", "\nSystem instability\n", "\nData corruption\n", "\nModified system files\n", "\nLoss of functionality\n", "\nIncreased security vulnerabilities\n", "\nCompromised user accounts\n", "\nHidden processes\n", "\nSuspicious code injections\n", "\nUnusual file activity\n", "\nAltered network traffic logs\n", "\nNew registry entries\n"], "indicators": ["file : name = 'newdev.dll'", "file : parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}], "pre-conditions": ["\nA Windows operating system is present.\n", "\nThe malware has the capability to interact with the Windows API.\n", "\nThe malware has access to the system's kernel.\n"], "post-conditions": ["\nBackdoor executables\n", "\nRemote server connections\n", "\nUnauthorized access to sensitive information\n", "\nSystem instability\n", "\nData corruption\n", "\nModified system files\n", "\nLoss of functionality\n", "\nIncreased security vulnerabilities\n", "\nCompromised user accounts\n", "\nHidden processes\n", "\nSuspicious code injections\n", "\nUnusual file activity\n", "\nAltered network traffic logs\n", "\nNew registry entries\n"]}, {"id": "9314f479-e5c9-4d64-a28e-96fdd2aeb4aa", "attack_steps": [{"id": "5358ecb2-f537-458f-a2d8-b20603aef2b0", "name": "Obfuscated Files or Information: Software Packing as used by the malware", "description": "Software packing is employed by the Milestone2017 malware variants for code obfuscation purposes. Themida, a software packer, is utilized to render the malware's code more difficult to analyze and detect by security researchers and antivirus programs.  \n", "mitre_technique": {"id": "T1027.002", "name": "Obfuscated files or information: software packing", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."}, "pre-conditions": ["\nThemida software is available.\n", "\nThe malware code exists in a format that requires obfuscation.\n", "\nThe malware developer possesses knowledge of how to use Themida for packing.\n", "\nAccess to the source code of the malware.\n"], "post-conditions": ["\nHidden files or folders containing malware\n", "\nNetwork traffic to command and control servers\n", "\nNetwork reconnaissance\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nAltered registry entries\n", "\nMalware persistence\n", "\nModified system files\n", "\nBackdoors or rootkits installed\n", "\nLateral movement within the network\n", "\nNew user accounts created\n", "\nUnusual process activity in system logs\n", "\nData transfers to external locations\n"], "indicators": ["file: name = 'newdev.dll'", "file: hashes.sha256 = '...' (replace with actual SHA256 hash)", "file: hashes.md5 = '...' (replace with actual MD5 hash)", "file: parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}, {"id": "51c36bcd-db0d-4916-ae09-621d0aea65b5", "name": "Modify Registry as used by the malware", "description": "Registry keys are directly modified by COLDSTEEL to introduce a descriptive element associated with its service entry. This modification circumvents conventional Windows APIs intended for registry manipulation, enabling surreptitious operations that potentially evade logging and monitoring protocols.  The specific description appended to the service entry is designed to obfuscate the true nature of the malicious service, thereby reducing the likelihood of detection by administrators or security tools. \n", "mitre_technique": {"id": "T1112", "name": "Modify registry", "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution."}, "pre-conditions": ["\nA Windows operating system is present.\n", "\nThe target system is running a supported version of Windows.\n", "\nThe malware has successfully infected the target system.\n", "\nThe malware executable is loaded and running.\n", "\nThe malware possesses the necessary permissions to modify registry keys.\n"], "post-conditions": ["\nModified registry keys\n", "\nHidden files and processes\n", "\nAltered system logs\n", "\nBackdoor executables\n", "\nPerformance degradation\n", "\nUnauthorized access to sensitive information\n", "\nUnusual file timestamps\n", "\nSystem instability\n", "\nCompromised security\n", "\nModified system configurations\n", "\nNetwork traffic to suspicious domains\n", "\nData loss\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]"]}, {"id": "a6dea54c-3ad2-46a9-9199-65bffd6bfe14", "name": "Indicator Removal: File Deletion as used by the malware", "description": "Indicator removal techniques employed by the COLDSTEEL malware variant (Milestone2017) primarily involve file deletion.  \n\nThe malware leverages a Windows service created through malicious DLL injection to facilitate persistent backdoor access and execute core functions, including file deletion. \n\nIdentification of indicators of compromise (IOCs) is achieved through predefined rules or patterns targeting files such as security software logs, antivirus database entries, and debugging tools or analysis artifacts.  \n\nUpon identification, the malware's ServiceMain function locates target files based on file paths or metadata and initiates permanent removal using Windows API functions like DeleteFile. \n\n\nThis process effectively eliminates evidence of malicious activity, hindering security analysis and incident response efforts.   \n", "mitre_technique": {"id": "T1070.004", "name": "Indicator removal: file deletion", "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."}, "pre-conditions": ["\nThe malware is running on an infected machine.\n"], "post-conditions": ["\nModified registry keys\n", "\nDeleted files\n", "\nNew service created with custom DLL\n", "\nNetwork connections to malicious IP addresses\n", "\nNetwork reconnaissance and exfiltration\n", "\nAltered file information in directory listings\n", "\nLog entries indicating suspicious activity\n", "\nSystem instability\n", "\nMalicious software execution\n", "\nCompromised user accounts\n", "\nPresence of malicious code in memory or on disk\n", "\nData loss\n"], "indicators": ["file : name = 'newdev.dll'  AND file : parent_directory_ref.path = 'C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming'"]}, {"id": "f7946413-8e1c-4bba-a7a6-8316fe685eef", "name": "Access Token Manipulation: Create Process with Token as used by the malware", "description": "A potential connection between multiple malware samples is suggested by shared characteristics among them.  These connections may involve the utilization of common resources such as stolen digital certificates and command-and-control (C2) servers. The delayed signing of malware samples, occurring hours after compilation, could indicate a rushed development process or an attempt to evade detection by avoiding signatures during initial creation.\n\nFortinet FortiEDR is designed to proactively detect and mitigate threats of this nature. Signature-based detection mechanisms within FortiEDR would likely identify these samples if they eventually utilize legitimate certificates or contain portions that match known malicious code.  Furthermore, behavioral analysis capabilities within FortiEDR monitor process and file behavior for suspicious activities. Techniques such as ObRegisterCallbacks, often employed by malicious software to manipulate system functions like process creation, are flagged as potential indicators of compromise. The ability to create processes with elevated privileges, such as utilizing the ANONYMOUS user, further suggests malicious intent as it allows malware to circumvent normal security restrictions.  Pre-configured rules and detection signatures within FortiEDR would likely address these known threats without requiring additional administrative configuration.\n\nThe implementation of Fortinet FortiEDR would present significant challenges to malware operators. Detection and blockage of their samples prior to payload execution would be a primary consequence. Additionally, the countermeasures implemented by FortiEDR against manipulation techniques such as ObRegisterCallbacks would hinder the malware's ability to achieve its objectives. \n\n\n", "mitre_technique": {"id": "T1134.002", "name": "Access token manipulation: create process with token", "description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas."}, "pre-conditions": ["\nAccess to the necessary system libraries for process creation.\n", "\nA user account named ANONYMOUS exists on the infected machine.\n", "\nA running operating system with process creation capabilities.\n", "\nThe malware has infected a machine.\n"], "post-conditions": ["\nNetwork vulnerabilities\n", "\nDeleted files\n", "\nSuspicious process activity in event logs\n", "\nMalware persistence\n", "\nSystem instability\n", "\nModified system registry entries\n", "\nBackdoor connections to external servers\n", "\nCompromised user accounts\n", "\nUnusual network traffic patterns\n", "\nData loss\n", "\nAltered log files\n", "\nNew malicious files (DLLs, executables)\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}], "pre-conditions": ["\nThemida software is available.\n", "\nThe malware code exists in a format that requires obfuscation.\n", "\nThe malware developer possesses knowledge of how to use Themida for packing.\n", "\nAccess to the source code of the malware.\n", "\nA Windows operating system is present.\n", "\nThe target system is running a supported version of Windows.\n", "\nThe malware has successfully infected the target system.\n", "\nThe malware executable is loaded and running.\n", "\nThe malware possesses the necessary permissions to modify registry keys.\n", "\nThe malware is running on an infected machine.\n", "\nAccess to the necessary system libraries for process creation.\n", "\nA user account named ANONYMOUS exists on the infected machine.\n", "\nA running operating system with process creation capabilities.\n", "\nThe malware has infected a machine.\n"], "post-conditions": ["\nHidden files or folders containing malware\n", "\nNetwork traffic to command and control servers\n", "\nNetwork reconnaissance\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nAltered registry entries\n", "\nMalware persistence\n", "\nModified system files\n", "\nBackdoors or rootkits installed\n", "\nLateral movement within the network\n", "\nNew user accounts created\n", "\nUnusual process activity in system logs\n", "\nData transfers to external locations\n", "\nModified registry keys\n", "\nHidden files and processes\n", "\nAltered system logs\n", "\nBackdoor executables\n", "\nPerformance degradation\n", "\nUnauthorized access to sensitive information\n", "\nUnusual file timestamps\n", "\nSystem instability\n", "\nCompromised security\n", "\nModified system configurations\n", "\nNetwork traffic to suspicious domains\n", "\nData loss\n", "\nModified registry keys\n", "\nDeleted files\n", "\nNew service created with custom DLL\n", "\nNetwork connections to malicious IP addresses\n", "\nNetwork reconnaissance and exfiltration\n", "\nAltered file information in directory listings\n", "\nLog entries indicating suspicious activity\n", "\nSystem instability\n", "\nMalicious software execution\n", "\nCompromised user accounts\n", "\nPresence of malicious code in memory or on disk\n", "\nData loss\n", "\nNetwork vulnerabilities\n", "\nDeleted files\n", "\nSuspicious process activity in event logs\n", "\nMalware persistence\n", "\nSystem instability\n", "\nModified system registry entries\n", "\nBackdoor connections to external servers\n", "\nCompromised user accounts\n", "\nUnusual network traffic patterns\n", "\nData loss\n", "\nAltered log files\n", "\nNew malicious files (DLLs, executables)\n"]}, {"id": "d9511d20-049d-4990-a4f6-69ddaee34edc", "attack_steps": [{"id": "574c9e87-839f-4dae-bd16-35d05ee66a48", "name": "System Information Discovery as used by the malware", "description": "System information is gathered by COLDSTEEL malware through various techniques. Fundamental system data, such as operating system version, processor specifications, and memory capacity, are likely retrieved using standard Windows API calls.  \n\nNetwork configuration details, including IP addresses, MAC addresses, and DNS server information, may also be acquired.  COLDSTEEL potentially employs methods such as Windows registry key examination or file system scans to compile an inventory of installed applications and their versions. \n\nUser account information, encompassing usernames and creation dates, is likely extracted from user profile data stored within the Windows registry.  File system details, including available drives, directory structures, and sensitive file identification, are potential targets for analysis.  Running processes are scrutinized to determine names, IDs, parent process relationships, and command-line arguments.  Active network connections (TCP/UDP) are potentially identified, with details such as remote addresses, ports, and protocols being gathered.\n\nSpecific commands within variants like FBI20111024 may be designed for targeted information retrieval or system setting manipulation. \n\nFunctional variations exist between COLDSTEEL malware variants.  FBI20111024 likely focused on core reconnaissance activities with potentially less advanced capabilities compared to later milestones.  Milestone 2016 and 2017 variants likely incorporated enhanced system support, expanded functionality including session information retrieval or lateral movement capabilities, and increased obfuscation techniques for evasion purposes.\n\n\nIt is important to note that the precise commands and functionalities of COLDSTEEL variants can vary significantly based on attacker objectives and specific build configurations.  \n", "mitre_technique": {"id": "T1082", "name": "System information discovery", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe target system has active network connections.\n", "\nAccess to system resources, including network interfaces and system information.\n", "\nThe malware is running on a target system.\n", "\nA compromised system with an active internet connection.\n"], "post-conditions": ["\nModified system files (e.g., DLLs, drivers).\n", "\nLog entries indicating suspicious activity (e.g., unauthorized access attempts, file modifications).\n", "\nData files transferred to external servers.\n", "\nIncreased vulnerability to further attacks.\n", "\nUnusual network traffic patterns (e.g., connections to command and control servers).\n", "\nBackdoor executable files hidden within system directories.\n", "\nCompromised system with persistent backdoor access.\n", "\nSystem performance degradation.\n", "\nData exfiltration potentially occurring.\n", "\nNew user accounts created with unusual credentials.\n"], "indicators": ["file : name = ' newdev . dll'", "file : parent_directory_ref.path = ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming '", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]", "IPv4: 103.224.80.76: [ ip v 4 - a d d r : v a l u e   =   ' 1 0 3 . 2 2 4 . 8 0 . 7 6 ' ]", "IPv4: 138.128.98.106: [ ip v 4 - a d d r : v a l u e   =   ' 1 3 8 . 1 2 8 . 9 8 . 1 0 6 ' ]", "IPv4: 1.9.5.38: [ ip v 4 - a d d r : v a l u e   =   ' 1 . 9 . 5 . 3 8 ' ]"]}, {"id": "1d869004-135a-4df9-adda-1a455362bf1e", "name": "File and Directory Discovery as used by the malware", "description": "The provided textual data exhibits characteristics indicative of file and directory discovery activities potentially conducted by malicious software.  URLs incorporating file paths, such as 104.223.34[.]198/111.php and 104.223.34[.]198/1dll.php, suggest an attempt by the malware to access specific files and directories on a remote server, potentially under the guise of harmless PHP scripts.  \n\nDomain names such as vpn2.smi1egate[.]com and svn1.smi1egate[.]com raise suspicion due to their potential association with legitimate VPN services and subversion (SVN) servers, respectively. The use of \"giga\" in giga.gnisoft[.]com may indicate an attempt by the malware to project an image of greater scale or sophistication.\n\nThe prevalence of .php extensions within the URLs indicates a likelihood that the malware utilizes PHP scripting for executing commands and retrieving data from the remote server. \n\n\nFile and directory discovery is frequently employed by malware through techniques such as directory scanning, file permission checking, file content reading, and the creation of new files and directories. These actions enable malware to identify valuable targets, map system structures for more targeted attacks, establish persistent access points (backdoors), and exfiltrate sensitive information. \n", "mitre_technique": {"id": "T1083", "name": "File and directory discovery", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nA running instance of the malware exists within the target system.\n", "\nThe target system possesses a functioning file system.\n"], "post-conditions": ["\nUnusual network traffic to the listed C2 servers\n", "\nIncreased vulnerability to further attacks\n", "\nLog entries indicating suspicious activity\n", "\nData exfiltration\n", "\nPersistent malware presence\n", "\nNew files with suspicious names and extensions\n", "\nSystem instability\n", "\nModified system registry entries\n", "\nPresence of backdoor or rootkit code in memory\n", "\nEncrypted data transfers\n", "\nModified system configurations\n", "\nCompromised system functionality\n"], "indicators": ["file: name = 'newdev.dll'", "file: parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}, {"id": "9236e0e7-2979-4896-b505-1be40a6e0b76", "name": "Process Discovery as used by the malware", "description": "Process discovery capabilities within FBI20111024 variants are likely executed through the utilization of system calls and Windows API functions.  System calls such as CreateToolhelp32Snapshot, Process32First, and Process32Next enable the retrieval of process-related information, including process ID (PID), name, handle, module paths, and other pertinent details.  Furthermore, Windows API functions like OpenProcess, GetModuleFileNameEx, and QueryInformationProcess are potentially employed to access system information. These techniques may be utilized to identify running security software, target specific applications, or construct a comprehensive map of active processes on the infected machine. \n\n\n", "mitre_technique": {"id": "T1057", "name": "Process discovery", "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nA running instance of the COLDSTEEL malware.\n", "\nNetwork connectivity may be required for communication with a command and control server.\n", "\nThe malware is running.\n", "\nThe target system has processes running.\n"], "post-conditions": ["\nBackdoor executables\n", "\nLog entries indicating suspicious activity\n", "\nSystem compromise\n", "\nPotential for lateral movement\n", "\nData exfiltration\n", "\nNew user accounts\n", "\nUnusual network traffic\n", "\nHidden processes\n", "\nModified system files\n", "\nCommunication logs with C2 servers\n", "\nAltered registry settings\n", "\nFiles containing stolen data\n", "\nPersistence on the system\n"], "indicators": ["The file name is \"newdev.dll\".", "The file path is \"C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll\".", "The malware communicates with IPv4 addresses: 192.95.36.61, 103.224.80.76, 138.128.98.106, and 1.9.5.38."]}], "pre-conditions": ["\nThe target system has active network connections.\n", "\nAccess to system resources, including network interfaces and system information.\n", "\nThe malware is running on a target system.\n", "\nA compromised system with an active internet connection.\n", "\nA running instance of the malware exists within the target system.\n", "\nThe target system possesses a functioning file system.\n", "\nA running instance of the COLDSTEEL malware.\n", "\nNetwork connectivity may be required for communication with a command and control server.\n", "\nThe malware is running.\n", "\nThe target system has processes running.\n"], "post-conditions": ["\nModified system files (e.g., DLLs, drivers).\n", "\nLog entries indicating suspicious activity (e.g., unauthorized access attempts, file modifications).\n", "\nData files transferred to external servers.\n", "\nIncreased vulnerability to further attacks.\n", "\nUnusual network traffic patterns (e.g., connections to command and control servers).\n", "\nBackdoor executable files hidden within system directories.\n", "\nCompromised system with persistent backdoor access.\n", "\nSystem performance degradation.\n", "\nData exfiltration potentially occurring.\n", "\nNew user accounts created with unusual credentials.\n", "\nUnusual network traffic to the listed C2 servers\n", "\nIncreased vulnerability to further attacks\n", "\nLog entries indicating suspicious activity\n", "\nData exfiltration\n", "\nPersistent malware presence\n", "\nNew files with suspicious names and extensions\n", "\nSystem instability\n", "\nModified system registry entries\n", "\nPresence of backdoor or rootkit code in memory\n", "\nEncrypted data transfers\n", "\nModified system configurations\n", "\nCompromised system functionality\n", "\nBackdoor executables\n", "\nLog entries indicating suspicious activity\n", "\nSystem compromise\n", "\nPotential for lateral movement\n", "\nData exfiltration\n", "\nNew user accounts\n", "\nUnusual network traffic\n", "\nHidden processes\n", "\nModified system files\n", "\nCommunication logs with C2 servers\n", "\nAltered registry settings\n", "\nFiles containing stolen data\n", "\nPersistence on the system\n"]}, {"id": "2a59c35d-a6f6-4c15-959c-1ea0d81b2bd3", "attack_steps": [{"id": "66b299f2-e321-4ff7-97e9-a465791adb71", "name": "Non-Application Layer Protocol as used by the malware", "description": "Communication between the malware designated as COLDSTEEL and its command and control (C2) server is facilitated through TCP sockets operating at the transport layer.  A custom message format is employed for data exchange, deviating from standard protocols such as HTTP or SMTP. This non-application layer protocol necessitates analysis of the malware's code to decipher the specific content of communications. \n\n\n", "mitre_technique": {"id": "T1095", "name": "Non-application layer protocol", "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL)."}, "pre-conditions": ["\nA Windows operating system is present.\n", "\nA connection to a Command and Control (C2) server is established.\n", "\nCOLDSTEEL is active and running.\n", "\nA TCP/IP network connection is available.\n", "\nThe malware COLDSTEEL is present in the system.\n"], "post-conditions": ["\nModified registry keys\n", "\nAltered system configurations\n", "\nPotential for further malware installation\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nLog entries indicating suspicious activity\n", "\nEvidence of data transfer (e.g., modified files, empty directories)\n", "\nHidden files or folders containing malware components\n", "\nUnusual network traffic to C2 server\n", "\nRemote control of infected system\n", "\nNew Windows service\n"], "indicators": ["IPv4: 192.95.36.61: is used by the malware.", "IPv4: 103.224.80.76: is used by the malware.", "IPv4: 138.128.98.106: is used by the malware.", "IPv4: 1.9.5.38: is used by the malware."]}], "pre-conditions": ["\nA Windows operating system is present.\n", "\nA connection to a Command and Control (C2) server is established.\n", "\nCOLDSTEEL is active and running.\n", "\nA TCP/IP network connection is available.\n", "\nThe malware COLDSTEEL is present in the system.\n"], "post-conditions": ["\nModified registry keys\n", "\nAltered system configurations\n", "\nPotential for further malware installation\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nLog entries indicating suspicious activity\n", "\nEvidence of data transfer (e.g., modified files, empty directories)\n", "\nHidden files or folders containing malware components\n", "\nUnusual network traffic to C2 server\n", "\nRemote control of infected system\n", "\nNew Windows service\n"]}]