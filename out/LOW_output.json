[{"id": "2f9b52f8-6099-4c50-a751-0e2158532170", "attack_steps": [{"id": "58dbb772-5850-4d60-9cc3-a3295b3b58c6", "name": "Exploit Public-Facing Application as used by the malware", "description": "The malware family designated as COLDSTEEL exhibits obfuscation techniques, including potential log blending strategies to obscure malicious activities.  Functionality variations are observed across different COLDSTEEL variants, with notable distinctions in Windows 10 compatibility and the utilization of ObRegisterCallbacks for process handle permission manipulation.\n\nExploitation of publicly accessible applications is strongly implied as a primary method of initial access for COLDSTEEL variants. This suggests potential exploitation of vulnerabilities such as Log4j to gain entry into systems.  Following successful exploitation, malicious payloads are executed, potentially delivered through the compromised application. Subsequently, techniques like ObRegisterCallbacks are employed to escalate privileges within compromised systems.\n\nPersistence mechanisms, including registry entries and scheduled tasks, are likely implemented by COLDSTEEL to ensure continued presence on compromised machines even after system reboots. Data theft, aimed at sensitive information such as credentials and financial data, is a probable objective of the malware.  Communication with a remote Command and Control (C2) server controlled by its creators is anticipated for receiving further instructions or exfiltrated data. \n\n\n", "mitre_technique": {"id": "T1190", "name": "Exploit public-facing application", "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration."}, "pre-conditions": ["\nA public-facing application exists with a known vulnerability.\n", "\nA network connection exists between the compromised system and the target application server.\n", "\nThe malware is capable of identifying and targeting the vulnerable application.\n"], "post-conditions": ["dll, 1.bat)", "\nNetwork traffic analysis revealing communication with C2 servers\n", "\nRegistry modifications\n", "\nPowerShell execution logs\n"], "indicators": ["The file name is \"newdev.dll\".", "The path includes \"AppData\\Roaming\\newdev.dll\"."]}]}, {"id": "8306825d-618d-4b05-91b5-9bd2ae3f3166", "attack_steps": [{"id": "1f1d9702-e44d-4da4-9fb1-77070daa97ef", "name": "Command and Scripting Interpreter: Windows Command Shell as used by the malware", "description": "The malware variant COLDSTEEL exhibits capabilities for command execution leveraging the Windows Command Shell (cmd.exe).  Certain variants obfuscate this activity by copying cmd.exe to dllhost.exe, thereby mimicking legitimate system processes and potentially evading detection by security software.\n\nThis inherent ability to execute arbitrary commands grants COLDSTEEL significant operational latitude, enabling actions such as file manipulation, modification of system configurations and registry entries, data exfiltration to a command-and-control server, and potential lateral movement within a network infrastructure.  For instance, COLDSTEEL can utilize cmd commands to enumerate active processes and gather details regarding running applications, potentially compromising sensitive information. \n\n\n", "mitre_technique": {"id": "T1059.003", "name": "Command and scripting interpreter: windows command shell", "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH."}, "pre-conditions": ["\nA computer running the Windows operating system is present.\n", "\nThe malware has successfully infected the target computer.\n", "\nThe malware has gained sufficient permissions to execute commands in the Windows Command Shell.\n"], "post-conditions": ["\nURLs: hxxp://104.223.34.[.]198/111.php, hxxp://104.223.34.[.]198/1dll.php, hxxp://104.223.34.[.]198/syn.php\n", "\nMalware delivery: The URLs might lead to sites hosting malware that could be downloaded and executed.\n", "223.34.198, 103.224.80.76", "To determine the consequences and traces, I need more context about the specific actions being performed.", "\nWhat commands are being executed?\n", "\nData exfiltration:  The attacker might be trying to steal data from the targeted systems.\n", "\nWhat network connections are being established?\n", "\nDomain names: bd82563c72e6f72adff76bd8c6940c6037516a2a89c5fd0c23b8af622f0e91939b486e9db7faef192.95.36[.]61vpn2.smi1egate[.]comsvn1.smi1egate[.]comgiga.gnisoft[.]com\n", "\nWhat files are being accessed or modified?\n", "\nWeb server exploitation: Attempting to access or exploit vulnerabilities on web servers at the given IP addresses.\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "880e64a5-b08a-4740-89f9-7886ecb41c99", "name": "System Services: Service Execution as used by the malware", "description": "COLDSTEEL malware exhibits characteristics indicative of sophisticated functionality and behavior.  Persistence is established through the utilization of a Windows service, enabling continuous operation even after system reboots. A comprehensive system survey is conducted upon establishment of persistence, gathering information pertaining to the target machine. The collected data is subsequently transmitted to a Command and Control (C2) server via raw TCP connections. \n\nVariations in functionality are observed across different COLDSTEEL variants. Older versions demonstrate limited support for Windows 10, potentially resulting in memory leaks during execution attempts. Newer variants are anticipated to address these limitations and incorporate enhanced capabilities.\n\nCommunication with the C2 server is facilitated through potential server IP addresses such as 104.223.34[.]198 and protocols that may not adhere to standard web conventions.  URLs ending in .smi1egate, .gnisoft, and .com are mentioned, potentially representing C2 infrastructure or additional malware components.\n\nObfuscation techniques are employed by COLDSTEEL to conceal its true purpose and communication channels. This is evidenced by the presence of various IP addresses, URLs, and references to svn1, giga, dll, and syn.  Exploitation of legitimate Windows service functionality is utilized by COLDSTEEL for executing malicious code under the guise of a legitimate system process. This tactic allows for circumvention of security measures, persistence, and stealthy operation. \n\n\nCOLDSTEEL represents a sophisticated malware family characterized by capabilities encompassing persistence, information gathering, remote command execution, and communication obfuscation.  \n", "mitre_technique": {"id": "T1569.002", "name": "System services: service execution", "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net."}, "pre-conditions": ["\nNetwork connectivity to the C2 server is available.\n", "\nThe malware code is loaded into memory.\n", "\nThe malware has successfully infiltrated the target system.\n", "\nA Windows operating system is present.\n", "\nA running instance of a Windows service exists.\n"], "post-conditions": ["\nSystem instability\n", "\nFirewall rule modifications\n", "\nFiles downloaded from C2 server\n", "\nPotential for further malicious activity\n", "\nModified system registry entries\n", "\nProcess creation logs\n", "\nData exfiltration\n", "\nAltered system configuration files\n", "\nNew log files with suspicious activity\n", "\nCompromised system functionality\n", "\nHidden or modified files\n", "\nWindows service installation\n", "\nNetwork traffic to C2 server\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}]}, {"id": "3d19561b-801f-4264-8c3e-0402f043aba1", "attack_steps": [{"id": "a8186cd4-fdfe-47ce-8f34-631d6bcd9c93", "name": "Create or Modify System Process: Windows Service as used by the malware", "description": "A new autostart Windows service is created by COLDSTEEL malware to ensure persistence across system reboots. This service generation is accomplished through the utilization of the Create or Modify System Process technique, enabling automatic execution upon system startup.  The malware's core functionality is subsequently loaded and executed as part of this persistent service. To evade detection, COLDSTEEL likely employs unique service names that resemble legitimate system processes. The executable file for the service is newdev.dll, demonstrating the malware's active modification of system processes for malicious purposes. \n\n\n", "mitre_technique": {"id": "T1543.003", "name": "Create or modify system process: windows service", "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."}, "pre-conditions": ["\nA user account with sufficient privileges exists.\n", "\nA Windows operating system.\n", "\nAn active internet connection for communication with the C2 server.\n", "\nAccess to system resources, including file system and registry.\n", "\nThe malware has access to the necessary files and directories.\n", "\nThe system is running a supported version of Windows.\n", "\nThe ability to execute code on the target system.\n"], "post-conditions": ["\nSystem instability\n", "\nFirewall rule modifications\n", "\nDNS queries to malicious domains\n", "\nSuspicious files in temporary directories\n", "\nNetwork connections to C2 servers\n", "\nPotential for further malware infections\n", "\nLoss of sensitive information\n", "\nData exfiltration\n", "\nUnusual process activity logs\n", "\nCompromised system functionality\n", "\nModified system registry settings\n", "\nNew user accounts created\n", "\nAltered log files\n", "\nFile transfers to and from external servers\n"], "indicators": ["file : name = 'newdev.dll'", "file : parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}]}, {"id": "65dd5bfe-ec3b-4a02-b2fb-dd0f58505cd6", "attack_steps": [{"id": "21fa9608-7911-44c8-8b49-e17d707ae8ba", "name": "Obfuscated Files or Information: Software Packing as used by the malware", "description": "Software packing techniques, specifically employing Themida, are utilized by the malware known as Milestone2017 to obfuscate its files or information.  The process involves embedding and encrypting the malware's code within a larger executable file, presenting a facade of benignity. \n\nThemida is integrated into the malware development workflow, enabling the attackers to package the malicious code of Milestone2017 within a container file generated by Themida. Subsequently, the embedded malware code is encrypted by Themida, rendering it unreadable in its raw form.  The container file is then compiled into a seemingly legitimate executable, concealing the encrypted and hidden Milestone2017 code.\n\nUpon execution of this packed file on a victim's system, Themida's internal mechanisms decrypt and extract the original Milestone2017 malware code. The decrypted malware subsequently executes, carrying out its malicious activities. \n\n\nThe utilization of software packing techniques presents challenges for traditional antivirus solutions, which primarily rely on known malicious signatures.  Themida's sophisticated encryption and embedding techniques effectively conceal the true nature of the malware until decryption and execution occur.   \n", "mitre_technique": {"id": "T1027.002", "name": "Obfuscated files or information: software packing", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."}, "pre-conditions": ["\nThe malware utilizes software packing techniques to obfuscate its code.\n", "\nAccess to a system infected with the COLDSTEEL malware.\n", "\nTools capable of analyzing malware and unpacking packed files.\n", "\nKnowledge of malware analysis techniques.\n"], "post-conditions": ["\nUnusual network traffic\n", "\nSystem compromise\n", "\nPersistence on the system\n", "\nHidden or encrypted files containing malware\n", "\nPotential for further malicious activity\n", "\nAltered registry settings\n", "\nLog entries indicating suspicious activity\n", "\nDNS requests to malicious domains\n", "\nData exfiltration\n", "\nFile transfers to external servers\n", "\nModified system files\n", "\nNew processes and services running\n"], "indicators": ["file : name = ' newdev . dll'", "file : hashes.sha256 =  '...' (Replace with actual SHA256 hash)", "file : hashes.md5 =  '...' (Replace with actual MD5 hash)"]}, {"id": "5ea11002-795e-4dec-8a43-9158930c4ba1", "name": "Modify Registry as used by the malware", "description": "Registry keys are directly modified by the COLDSTEEL malware to append a description to its Windows service.  \n", "mitre_technique": {"id": "T1112", "name": "Modify registry", "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution."}, "pre-conditions": ["\nThe malware possesses the necessary code modules for registry manipulation.\n", "\nThe target system has a Windows operating system installed.\n", "\nThe malware executable is loaded and running.\n", "\nThe malware has successfully gained administrative privileges on the target system.\n"], "post-conditions": ["\nSystem instability\n", "\nHidden files and folders\n", "\nMalware persistence\n", "\nLog files containing malicious activity\n", "\nBackdoor executables\n", "\nModified registry keys\n", "\nCompromised system functionality\n", "\nUnusual process activity in event logs\n", "\nData theft\n", "\nAltered system configurations\n", "\nNetwork connections to suspicious IP addresses\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming ' ]"]}, {"id": "5116817e-9b30-44d9-83b6-999e7b3e4c4a", "name": "Indicator Removal: File Deletion as used by the malware", "description": "The provided textual analysis indicates potential malicious activity associated with a COLDSTEEL variant, possibly MileStone2017. This variant is hypothesized to leverage Windows services for persistence and communication.  \n\nA custom DLL file (newdev.dll) located within the user's AppData directory is purportedly utilized by the malware to create a Windows service. The execution of this service triggers the ServiceMain export, which is believed to encompass the core functionality of the malware. Network communications employing identifiers such as \"MileStone2017\" are suggested to facilitate tracking and differentiation of variants.\n\nWhile file deletion is not explicitly stated as a primary action, inferences can be drawn from the context. The malware's deployment within the AppData directory, a common location for obfuscation and persistence, coupled with the existence of multiple variants indicative of active development, suggests a potential capability for file removal. This could encompass the deletion of temporary files or logs to obscure its presence and activities, or potentially target critical system files or user data for manipulation or theft.\n\nFurther investigation into the ServiceMain function's code execution and the malware's network communications is recommended to provide a more comprehensive understanding of its capabilities. \n\n\n", "mitre_technique": {"id": "T1070.004", "name": "Indicator removal: file deletion", "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."}, "pre-conditions": ["\nThe malware has successfully executed.\n", "\nThe files to be deleted exist on the system.\n", "\nFile access permissions\n", "\nMalware execution environment\n", "\nOperating System\n"], "post-conditions": ["\nPotential for further attacks\n", "\nSystem compromise\n", "\nMalware persistence\n", "\nNetwork reconnaissance\n", "\nAccess logs on compromised servers\n", "\nEmail communication with attackers\n", "\nNew files (e.g., malicious DLLs)\n", "\nData exfiltration\n", "\nFirewall bypass attempts\n", "\nDNS queries to suspicious domains\n", "\nRegistry changes\n", "\nModified system files\n", "\nUnusual network traffic logs\n"], "indicators": ["file : name = 'newdev.dll'", "file : parent_directory_ref.path = 'C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming'"]}, {"id": "a47dd77d-f740-48e8-8000-9228e0ab9c10", "name": "Access Token Manipulation: Create Process with Token as used by the malware", "description": "A sophisticated cyber attack employing malware exhibiting several concerning characteristics has been identified.  Malware samples were digitally signed hours after compilation, suggesting a potentially evasive tactic to circumvent detection by security tools reliant on trusted signatures. The malware utilizes techniques such as ObRegisterCallbacks to manipulate process access rights within the Windows operating system.\n\nThe specific action of \"Access Token Manipulation: Create Process with Token as used by the malware\" has been highlighted. This entails the creation of new processes while impersonating the user 'ANONYMOUS'.  This action presents a significant risk due to the potential for elevated privileges associated with the 'ANONYMOUS' account, enabling more destructive actions. Furthermore, operating as 'ANONYMOUS' allows the malware to potentially conceal its true identity and intentions from security monitoring tools typically focused on known user accounts.\n\nFortinet SolutionsFortiEDR (Endpoint Detection and Response) has been identified as a security product capable of detecting and blocking this malware.  FortiEDR functions \"out-of-the-box\" without requiring specific configurations for this threat, leveraging pre-built threat intelligence. \n\n\n", "mitre_technique": {"id": "T1134.002", "name": "Access token manipulation: create process with token", "description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas."}, "pre-conditions": ["\nNetwork connectivity may be required for communication with command and control servers.\n", "\nA vulnerable system running a compatible operating system.\n", "\nA process is running.\n", "\nThe malware has access to the current process's token.\n", "\nThe malware code is present and loaded into memory.\n"], "post-conditions": ["\nUnusual log entries\n", "\nHidden files and folders\n", "\nSystem compromise\n", "\nBackdoors or malware remnants\n", "\nPersistence on the system\n", "\nNew user accounts\n", "\nAltered registry settings\n", "\nData exfiltration\n", "\nNetwork traffic manipulation\n", "\nModified system files\n", "\nNetwork connections to suspicious IPs\n"], "indicators": ["Path: C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll: [ file : name   =   ' newdev . dll '   A N D   file : parent _ directory _ ref . path   =   ' C : \\ \\ Users \\ \\ < user > \\ \\ App Data \\ \\ Roaming ' ]", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]"]}]}, {"id": "aa6fb133-30da-4e74-9cd1-7a639306ae97", "attack_steps": [{"id": "30c52cf9-07bd-408f-af60-95783c99d929", "name": "System Information Discovery as used by the malware", "description": "System information discovery is a common tactic employed by malware such as COLDSTEEL to gather intelligence regarding the infected machine.  The precise methods utilized by COLDSTEEL for system information collection are likely detailed within the comprehensive analysis provided. However, malware typically employs various techniques to acquire this data.\n\nOperating system details, including version, edition, and build number, are frequently extracted. Hardware information, such as processor type and speed, RAM size, motherboard model, and disk drive specifications, is also commonly targeted.  Network configuration details, encompassing IP addresses, MAC addresses, network interfaces, and active connections, may be collected.\n\nFurthermore, malware often seeks to identify installed software, listing programs and their versions. User account information, including local user names and privileges, is another common target. System events, such as recent logon/logoff events and application activity, are also frequently monitored.  File system information, encompassing file paths, names, sizes, and user folders, may be acquired.\n\nThe transmission of this gathered system information back to a command-and-control (C&C) server is typically accomplished through various methods, including HTTP/HTTPS, DNS tunneling, or other protocols such as SMTP, IRC, or custom protocols. \n\n\n", "mitre_technique": {"id": "T1082", "name": "System information discovery", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe target machine has system information available.\n", "\nA running instance of the COLDSTEEL malware.\n", "\nNetwork connectivity may be required for some types of system information gathering.\n", "\nThe malware is running on a target machine.\n"], "post-conditions": ["\nSystem instability\n", "\nSystem compromise\n", "\nMalware persistence\n", "\nHidden or encrypted data files\n", "\nModified system registry entries\n", "\nIndicators of compromise (IOCs) in security logs\n", "\nNetwork traffic to command-and-control servers\n", "\nData exfiltration\n", "\nNew files and directories created\n", "\nBackdoors or rootkits installed\n", "\nAltered system configurations\n", "\nUnusual process activity in logs\n", "\nPerformance degradation\n"], "indicators": ["file : name = ' newdev . dll'", "file : parent_directory_ref.path = ' C : \\ \\ Users \\ \\ < user > \\ \\ AppData \\ \\ Roaming '", "IPv4: 192.95.36.61: [ ip v 4 - a d d r : v a l u e   =   ' 1 9 2 . 9 5 . 3 6 . 6 1 ' ]", "IPv4: 103.224.80.76: [ ip v 4 - a d d r : v a l u e   =   ' 1 0 3 . 2 2 4 . 8 0 . 7 6 ' ]", "IPv4: 138.128.98.106: [ ip v 4 - a d d r : v a l u e   =   ' 1 3 8 . 1 2 8 . 9 8 . 1 0 6 ' ]", "IPv4: 1.9.5.38: [ ip v 4 - a d d r : v a l u e   =   ' 1 . 9 . 5 . 3 8 ' ]"]}, {"id": "a4b69bbc-4c15-4cbf-a765-aa53aa6c4bb4", "name": "File and Directory Discovery as used by the malware", "description": "File and directory discovery activities indicative of malicious behavior are observed within the provided context.  URLs and IP addresses associated with potential command-and-control (C&C) servers are listed. Suspicious file extensions, such as \".php,\" suggest the potential execution of scripts designed to gather file information.\n\nMalware employs various techniques to enumerate files and directories. These techniques include direct utilization of operating system functions like listdir() or GetFileInformationByHandle(), execution of shell commands such as \"dir\" or \"ls,\" and transmission of network requests to C&C servers for specific file or directory listings.\n\nThe purpose of file and directory discovery by malware is multifaceted. It enables the identification of valuable files, facilitates the mapping of target filesystem structures to understand their organization and potential vulnerabilities, and aids in the expansion of malware's reach within networks by discovering shares, network drives, or connected systems. \n\n\n", "mitre_technique": {"id": "T1083", "name": "File and directory discovery", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nOperating system access.\n", "\nThe malware is running on a victim machine.\n", "\nPotential network connectivity (for remote file/directory information).\n", "\nThe victim machine is not in safe mode.\n"], "post-conditions": ["\nMasked network connections\n", "\nHidden registry keys\n", "\nHidden files and directories\n", "\nNetwork traffic logs with obfuscated destinations or content\n", "\nConcealed loader and backdoor files\n", "\nModified system files (e.g., drivers)\n", "\nRegistry entries with unusual values or timestamps\n", "\nProcess creation events with altered names or descriptions\n", "\nObfuscated process activity\n"], "indicators": ["file: name = 'newdev.dll'", "file: parent_directory_ref.path = 'C:\\Users\\<user>\\AppData\\Roaming'"]}, {"id": "0ca566dd-dd79-42a2-a8c1-7a9f61b08bf1", "name": "Process Discovery as used by the malware", "description": "Process discovery is employed by the FBI20111024 malware to ascertain information pertaining to running processes on an infected system. This process is likely effectuated through the utilization of system calls provided by the operating system to query process lists and retrieve process details, such as names, identifiers, parent processes, and execution paths. Additionally, direct inspection of memory regions containing process information may be undertaken, requiring advanced comprehension of memory structures and potentially involving techniques such as reading specific process control blocks (PCBs).  The transmission of gathered process information to a command-and-control (C&C) server for subsequent analysis or instructions is suggested by the provided URLs. \n\n\n", "mitre_technique": {"id": "T1057", "name": "Process discovery", "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe target system has active network connections.\n", "\nThe operating system must have specific builds that are compatible with the malware's DKOM techniques.\n", "\nThe malware is running on a target system.\n", "\nAccess to kernel objects and structures through Direct Kernel Object Modification (DKOM).\n"], "post-conditions": ["\nUnusual network traffic\n", "\nSystem instability\n", "\nLog file alterations\n", "\nNew registry entries\n", "\nMalware propagation\n", "\nEvidence of DKOM usage\n", "\nRemote code execution\n", "\nData breaches\n", "\nLoss of system control\n", "\nHidden processes\n", "\nSuspicious DLLs\n", "\nModified system files\n", "\nAltered system configurations\n", "\nBackdoor creation\n"], "indicators": ["The file name is \"newdev.dll\".", "The file path is \"C:\\Users\\<user>\\AppData\\Roaming\\newdev.dll\".", "The malware communicates with IPv4 addresses: 192.95.36.61, 103.224.80.76, 138.128.98.106, and 1.9.5.38."]}]}, {"id": "29ea40ee-d6d4-4c2a-b029-639c7a65a087", "attack_steps": [{"id": "0d454fed-23bc-468f-8fd7-d577c8e3ed2b", "name": "Non-Application Layer Protocol as used by the malware", "description": "Communication between the malware and its command and control (C2) server is facilitated through TCP sockets operating at a level below conventional applications, thereby characterizing it as a \"Non-Application Layer Protocol.\"  A custom message format is employed by the malware, deviating from standard protocols such as HTTP or FTP. This non-conformance to established network traffic patterns presents a challenge for detection mechanisms. \n\n\n", "mitre_technique": {"id": "T1095", "name": "Non-application layer protocol", "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL)."}, "pre-conditions": ["Requirements:", "\nThe malware is active on a target system.\n", "Pre-Conditions:", "\nThe operating system supports the specific non-application layer protocol used by the malware.\n", "\nA network connection exists between the infected system and the command and control server.\n"], "post-conditions": ["\nUnauthorized access to sensitive information\n", "\nSystem instability\n", "\nModified kernel objects\n", "\nMalware propagation\n", "\nUnusual network traffic patterns\n", "\nNew files with suspicious names and extensions\n", "\nBackdoor connections established to external servers\n", "\nData corruption\n", "\nHidden processes and threads\n", "\nLog entries indicating unauthorized activity\n", "\nAltered system registry entries\n", "\nPerformance degradation\n"], "indicators": ["IPv4: 192.95.36.61: is used by the malware.", "IPv4: 103.224.80.76: is used by the malware.", "IPv4: 138.128.98.106: is used by the malware.", "IPv4: 1.9.5.38: is used by the malware."]}]}]