[{"id": "e64aeda8-cde4-4c1f-84b8-ccc9edf74628", "attack_steps": [{"id": "b0d3da1e-3c0d-4766-89e7-2cde87354f3a", "name": "Create or Modify System Process: Windows Service as used by the malware", "description": "A persistent infection is established by Goofy Guineapig through the creation and modification of a Windows service.  The malware utilizes standard Windows API calls to generate a new service on the infected machine, employing a plausible name to evade detection. Service configuration parameters, including startup type, display name, and description, are meticulously set by the malware, potentially mimicking legitimate service attributes. The malware's executable code is deployed as the service binary, enabling continuous background execution even after user logoff or system reboot.  A persistence loop is established within the malware's code, running as a service, to monitor for specific triggers such as scheduled times or network events. Upon activation of these triggers, the malicious payload is executed, encompassing activities like communication with command-and-control servers, data exfiltration, or initiation of further attacks.  The effectiveness of this approach stems from the deep integration of Windows services within the operating system, designed for continuous operation. Additionally, services often possess elevated privileges, granting malware capabilities otherwise inaccessible. \n\n\n", "mitre_technique": {"id": "T1543.003", "name": "Create or modify system process: windows service", "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."}, "pre-conditions": ["\nAdministrative privileges.\n", "\nThe malware has successfully executed its initial code.\n", "\nThe malware requires access to system functions for creating and modifying services.\n", "\nAccess to the Windows Service Control Manager API.\n", "\nWindows operating system.\n"], "post-conditions": ["\nSuspicious files created or modified\n", "\nExecution of malicious code\n", "\nNew Windows service installed\n", "\nNetwork traffic to command and control servers\n", "\nUnusual process activity logs\n", "\nData theft\n", "\nRemote access by attackers\n", "\nAltered system event logs\n", "\nModified registry entries\n", "\nYARA rule match in security logs\n", "\nHidden files or folders\n", "\nSystem instability\n", "\nCompromised system security\n"], "indicators": ["A file named \"tmp.bat\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\"."]}], "pre-conditions": ["\nAdministrative privileges.\n", "\nThe malware has successfully executed its initial code.\n", "\nThe malware requires access to system functions for creating and modifying services.\n", "\nAccess to the Windows Service Control Manager API.\n", "\nWindows operating system.\n"], "post-conditions": ["\nSuspicious files created or modified\n", "\nExecution of malicious code\n", "\nNew Windows service installed\n", "\nNetwork traffic to command and control servers\n", "\nUnusual process activity logs\n", "\nData theft\n", "\nRemote access by attackers\n", "\nAltered system event logs\n", "\nModified registry entries\n", "\nYARA rule match in security logs\n", "\nHidden files or folders\n", "\nSystem instability\n", "\nCompromised system security\n"]}, {"id": "bb058960-db15-40e5-bb78-688163525f69", "attack_steps": [{"id": "8ba51be7-2ed3-4b1a-894e-b5b0c2fec627", "name": "Masquerading: Match Legitimate Name or Location as used by the malware", "description": "The malware Goofy Guineapig employs masquerading techniques to evade detection by assuming the guise of legitimate software installations.  It specifically presents itself as Firefox Installer and Google Updater, leveraging user trust in these widely recognized applications. By mimicking their graphical elements and nomenclature, Goofy Guineapig induces users to execute the malicious file under the assumption that it is legitimate software, thereby circumventing security measures that may otherwise flag suspicious files based on their actual name or origin.  \n", "mitre_technique": {"id": "T1036.005", "name": "Masquerading: match legitimate name or location", "description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous."}, "pre-conditions": ["\nAccess to system files and processes.\n", "\nThe malware has access to information about legitimate Google update components.\n", "\nAbility to modify file metadata.\n", "\nThe malware is capable of modifying its own name or location.\n"], "post-conditions": ["\nUnusual process activity and resource usage\n", "\nYARA rule matches indicating the presence of Goofy Guineapig strings\n", "\nModified system registry entries\n", "\nData theft\n", "\nRemote access by attackers\n", "\nNew files created in various directories (e.g., temporary folders, user profiles)\n", "\nModified system configuration files\n", "\nNetwork connections to suspicious IP addresses\n", "\nEvidence of data exfiltration (e.g., unusual file transfers)\n", "\nExecution of malicious plugins\n", "\nSystem instability\n", "\nCompromised system security\n", "\nAltered system logs (event logs, application logs)\n", "\nPresence of Goofy Guineapig malware code fragments in memory or on disk\n"], "indicators": ["The file \"tmp.bat\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\"."]}, {"id": "18d22bc2-ba50-4672-b79e-3c5e06c0a019", "name": "Virtualization/Sandbox Evasion: Time Based Evasion as used by the malware", "description": "The Goofy Guineapig malware implements a Time-Based Evasion technique to circumvent detection within virtualized or sandboxed environments.  This technique involves an initial system time register reading followed by a delay exceeding 100 milliseconds. Subsequently, the system time register is read again. A comparison of the timestamps is then performed. If the difference exceeds an anticipated range, indicative of artificially accelerated time progression characteristic of sandbox environments, malware execution is terminated.   \n", "mitre_technique": {"id": "T1497.003", "name": "Virtualization/sandbox evasion: time based evasion", "description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time."}, "pre-conditions": ["\nThe Goofy Guineapig malware is running.\n", "\nAccess to the CPU timestamp counter.\n", "\nThe system time register is accessible.\n", "\nThe malware is executing.\n", "\nA Windows operating system.\n"], "post-conditions": ["\nPresence of malware artifacts in memory dumps\n", "\nModified system registry entries\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nLog entries indicating process creation and execution of malicious code\n", "\nMalware persistence\n", "\nUnusual network traffic to suspicious IP addresses\n", "\nEvidence of data transfer via encrypted channels\n", "\nPotential for further malicious activity\n", "\nNew files created in various directories (e.g., %TEMP%, AppData)\n", "\nNetwork communication with C2 server\n", "\nAltered system configurations\n"], "indicators": ["The malware utilizes time-based evasion techniques."]}, {"id": "a3e410a4-bb47-40e3-bcfd-c8220cc14adb", "name": "Virtualization/Sandbox Evasion: System Checks as used by the malware", "description": "System checks are conducted by the Goofy Guineapig malware to ascertain the presence of a virtualized or sandboxed environment. These checks encompass an analysis of the system's hard drive size, physical memory size, and logical processor count.  Deviations in these parameters from established norms for real systems may indicate a sandboxed or virtualized environment, prompting the termination of Goofy Guineapig's execution to preclude the exposure of malicious activities within a controlled testing setting. \n\n\n", "mitre_technique": {"id": "T1497.001", "name": "Virtualization/sandbox evasion: system checks", "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."}, "pre-conditions": ["\nThe system has logical processors.\n", "\nThe system has a physical memory size.\n", "\nThe malware is running.\n", "\nAccess to Windows APIs for retrieving system information (e.g., physical memory size, disk size, number of logical processors).\n", "\nOperating System with access to system information (e.g., Windows)\n"], "post-conditions": ["\nModified system settings\n", "\nNetwork connections to command and control servers\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNew registry entries\n", "\nFile downloads and uploads\n", "\nUnusual process creation and termination events\n", "\nMalware infection\n", "\nModified system files\n", "\nProcess hijacking\n", "\nEncrypted data remnants\n", "\nPersistence mechanisms (e.g., scheduled tasks, boot-sector infections)\n", "\nResource depletion\n", "\nLog file entries indicating suspicious activity\n"], "indicators": ["The system checks for virtualization software presence."]}, {"id": "4e5943a3-0c95-4506-bae6-345e1bf09075", "name": "Virtualization/Sandbox Evasion: User Activity Based Checks as used by the malware", "description": "Process name monitoring is employed by Goofy Guineapig malware to identify potentially hostile environments.  The malware scans active processes for keywords indicative of debugging or reverse engineering activities. These keywords include \"dbg,\" \"debug,\" and \"ida.\" Upon detection of these keywords, the malware terminates its own execution, thereby evading analysis in sandboxed environments or during debugging sessions. This behavior is predicated on the common practice within the software development and security research communities of utilizing debugging tools and naming processes accordingly during malware analysis.  \n", "mitre_technique": {"id": "T1497.002", "name": "Virtualization/sandbox evasion: user activity based checks", "description": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."}, "pre-conditions": ["\nAccess to process information on the system.\n", "\nThe malware is running on a system.\n", "\nProcesses are running on the system.\n"], "post-conditions": ["\nNetwork traffic to command and control servers\n", "\nModified system registry entries\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nAltered log files\n", "\nPotential for further malware execution\n", "\nNew files created in various directories\n", "\nPersistence on the system\n", "\nYARA rule matches in security logs\n", "\nProcess hollowing artifacts\n"], "indicators": ["The process name is \"tmp.bat\".", "The file path includes \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat\"."]}, {"id": "008aa655-8d78-490d-9148-95db7995a11f", "name": "Obfuscated Files or Information: Software Packing as used by the malware", "description": "Goofy Guineapig malware is obfuscated through software packing utilizing UPX (Ultimate Packer for X86).  The malicious code undergoes compression by UPX to minimize its size and impede analysis.  Furthermore, it is integrated within a legitimate Windows Installer (.exe) constructed using the Nullsoft Scriptable Install System (NSIS), thereby enhancing its perceived legitimacy. Upon execution of the installer, UPX decrypts and decompresses the Goofy Guineapig code in memory prior to its execution. This process renders static analysis of the packed file challenging as the actual malicious instructions are not readily discernible within the original file.  \n\n\n", "mitre_technique": {"id": "T1027.002", "name": "Obfuscated files or information: software packing", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."}, "pre-conditions": ["\nThe malware executable exists.\n", "\nA legitimate NSIS installer is accessible.\n", "\nUPX packing tool is available.\n"], "post-conditions": ["\nNetwork traffic to command and control servers\n", "\nAltered file timestamps\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNew registry entries\n", "\nPotential for further malware execution\n", "\nUnusual process creation and termination events\n", "\nModified system files\n", "\nLog files containing suspicious activity\n", "\nPersistence established\n", "\nHidden or encrypted files\n", "\nNetwork communication with C2 server\n", "\nYARA rule files\n"], "indicators": ["The file \"tmp.bat\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\".", "The file \"config.dat\" has a SHA-256 hash of \"3a1af09a0250c602569d458e79db90a45e305b76d8423b81eeeca14c69847b81c\".", "The file \"GoogUpdate\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\"."]}, {"id": "1dc8ec92-2cef-45d8-9809-2ea7779faa8e", "name": "Deobfuscate/Decode Files or Information as used by the malware", "description": "The malware Goofy Guineapig employs two primary techniques for deobfuscation and decoding: Single Byte XOR and Subtraction.  Stack-based strings within the binary are encrypted via the XOR operation utilizing a single byte key. This process renders the characters unreadable without the application of the inverse XOR operation.  Subtraction is similarly employed to obfuscate certain code segments or data. A predetermined numerical value is subtracted from each character's ASCII representation, rendering the information unintelligible without the reversal of the subtraction process. \n\nThese encrypted strings are embedded within the malware's own code and structure. Upon execution reaching a point requiring a decoded string, the program applies the corresponding XOR or subtraction algorithm utilizing the predetermined key. This reveals the original, meaningful text necessary for functions such as command execution, data transmission, or communication with command-and-control servers. \n\n\nThese techniques are commonly utilized in malware due to their relative simplicity and effectiveness in concealing malicious intent.  Analysis and comprehension of these obfuscation methods are crucial for security researchers and analysts to effectively detect, reverse engineer, and mitigate the threat posed by Goofy Guineapig.   \n", "mitre_technique": {"id": "T1140", "name": "Deobfuscate/decode files or information", "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system."}, "pre-conditions": ["\nThe ability to analyze and interpret binary code.\n", "\nUnderstanding of stack-based string obfuscation methods.\n", "\nThe obfuscated strings within the malware exist.\n", "\nThe malware binary is present.\n", "\nA system capable of executing the malware binary.\n", "\nKnowledge of XOR encryption and decryption techniques.\n"], "post-conditions": ["\nHidden files and folders\n", "\nNetwork traffic to malicious servers\n", "\nModified system registry entries\n", "\nLeftover shellcode fragments\n", "\nData theft\n", "\nRemote access by attackers\n", "\nInstallation of additional malware\n", "\nAltered system files\n", "\nUnusual process activity\n", "\nFirewall rules changes\n", "\nSystem instability\n", "\nObfuscated code remnants in memory\n", "\nLog entries indicating suspicious activity\n", "\nCompromised system security\n", "\nDNS requests to unknown domains\n", "\nNew user accounts created\n"], "indicators": ["The file \"tmp.bat\" is located at \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\".", "The malware uses the User Agent string \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\"."]}, {"id": "a39e1006-e556-41ad-9c13-e96251ce6c76", "name": "Hide Artifacts: Hidden Window as used by the malware", "description": "Process hollowing is employed by Goofy Guineapig malware against instances of dllhost.exe. This technique involves the identification of a running dllhost.exe process followed by the emptying of its memory contents. Subsequently, malicious shellcode or payload is injected into the vacated memory space.  \n\nThe process name remains unchanged, and initial behavior appears consistent with legitimate dllhost.exe functionality. This obfuscation hinders detection by security tools and analysts reliant on process name examination or code signature analysis. The hijacking of a system process grants the malware increased stability and persistence within the target machine. \n\n\n", "mitre_technique": {"id": "T1564.003", "name": "Hide artifacts: hidden window", "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks."}, "pre-conditions": ["\nA process with a specific name is running.\n", "\nThe malware is running.\n", "\nA window exists with relevant strings.\n"], "post-conditions": ["\nPersistence established on the system\n", "\nHidden files and folders\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNew registry entries\n", "\nUnusual process activity logs\n", "\nNamed pipe created with hashed computer name\n", "\nRemote access granted to attacker\n", "\nModified system files\n", "\nModified DLLhost.exe process\n", "\nPotential for further malware infections\n", "\nNetwork connections to malicious servers\n", "\nYARA rule matches in security logs\n", "\nAltered system configurations\n"], "indicators": ["The process name is \"tmp.bat\".", "A file named \"config.dat\" exists."]}, {"id": "cc47c6b9-a3e4-4f14-a6e0-0bc6f6e3c445", "name": "Indicator Removal on Host: File Deletion as used by the malware", "description": "The Goofy Guineapig malware utilizes \"Indicator Removal on Host: File Deletion\" to obfuscate its presence. Upon initial execution from a temporary download location, the malware relocates downloaded files to directories commonly associated with system software or applications. Subsequently, the original files are deleted from the initial download directory, effectively eliminating traces of the malware's entry point. This tactic serves to conceal malware activity and evade detection by security tools and analysts.  \n", "mitre_technique": {"id": "T1070.004", "name": "Indicator removal: file deletion", "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."}, "pre-conditions": ["\nA command execution capability exists within the environment.\n", "\nAccess to the ProgramData directory is available.\n", "\nAccess to the initial download location is available.\n", "\nThe malware has successfully downloaded and extracted its files.\n", "\nThe malware has determined the initial download location.\n", "\nA file system is present.\n", "\nThe malware has identified a legitimate-looking directory.\n"], "post-conditions": ["\nData exfiltration and/or manipulation.\n", "\nAltered log files indicating unusual activity.\n", "\nFile fragments containing Goofy Guineapig strings.\n", "\nSystem instability and performance degradation.\n", "\nHidden files and directories in ProgramData.\n", "\nNew processes running with suspicious names or behavior.\n", "\nDeleted original download location files.\n", "\nModified system registry entries.\n", "\nCompromised system with persistent malware infection.\n", "\nIncreased vulnerability to further attacks.\n", "\nYARA rule matches in security logs.\n", "\nNetwork connections to malicious command-and-control servers.\n"], "indicators": ["A file named \"tmp.bat\" was located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\".", "The file \"config.dat\" was deleted from the system."]}, {"id": "986875d8-035d-417e-9337-236e89a1d0c3", "name": "Hijack Execution Flow: DLL Side-Loading as used by the malware", "description": "The \"Hijack Execution Flow: DLL Side-Loading\" technique employed by Goofy Guineapig involves the exploitation of legitimate software processes for malicious payload delivery. A malicious DLL is introduced alongside a legitimate installer package, leveraging the established practice of executable loading of additional DLLs for functionality.  \n\nThis technique exploits the trust associated with signed executables, such as GoogleUpdate.exe, to execute the malicious DLL without raising suspicion from security software. Upon execution, the malicious DLL verifies its own format and triggers its entry point, initiating the core functionality defined by the attacker. A specific function, \"plugin_run,\" is likely responsible for executing the intended malicious actions.  \n\n\n", "mitre_technique": {"id": "T1574.002", "name": "Hijack execution flow: dll side-loading", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s)."}, "pre-conditions": ["\nA legitimate executable is present on the system.\n", "\nThe malicious DLL exists.\n", "\nNetwork connectivity is available for downloading the malicious DLL.\n", "\nThe Goofy Guineapig loader is active.\n", "\nFile system access is available to write and execute files.\n", "\nA Windows operating system is present.\n"], "post-conditions": ["\nNetwork connections to command-and-control servers.\n", "\nLog files containing suspicious activity.\n", "\nUPX packed NSIS installer file.\n", "\nModified Firefox installation package.\n", "\nSystem instability and performance degradation.\n", "\nPresence of Goofy Guineapig loader shellcode remnants.\n", "\nMalicious DLL file in the ProgramData directory.\n", "\nData exfiltration and/or data manipulation.\n", "\nCompromised system with persistent malware infection.\n", "\nIncreased vulnerability to further attacks.\n", "\nModified registry entries related to the malicious process.\n", "\nAltered system files and configurations.\n"], "indicators": ["The file \"tmp.bat\" is located in the directory \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\".", "The malware utilizes a DLL side-loading technique."]}, {"id": "2a462333-1d7e-4f2e-a108-60f81c2b07e9", "name": "Process Injection: Process Hollowing as used by the malware", "description": "Process injection via process hollowing is executed by Goofy Guineapig malware against the dllhost.exe binary. Malicious code is retrieved from a Command and Control (C2) server. The malicious code replaces the existing memory space of the identified dllhost.exe process, effectively \"hollowing it out.\" Execution of the injected malicious code occurs within the hollowed dllhost.exe process, mimicking legitimate behavior and circumventing security measures that target newly spawned processes.  \n", "mitre_technique": {"id": "T1055.012", "name": "Process injection: process hollowing", "description": "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process."}, "pre-conditions": ["\nThe malware has the capability to read and modify memory.\n", "\nA target system running Windows.\n", "\nThe malware has downloaded a payload executable.\n", "\nA running instance of the dllhost.exe process exists.\n"], "post-conditions": ["\nExecution of malicious code\n", "\nModified system registry entries\n", "\nNetwork traffic to command-and-control servers\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nFirewall logs showing unauthorized connections\n", "\nModified system configuration files\n", "\nMalware persistence\n", "\nLog entries indicating unusual activity\n", "\nAltered process lists\n", "\nProcess injection\n", "\nShadow copies containing malware artifacts\n", "\nNew files created with suspicious names and content\n"], "indicators": ["The process name is \"tmp.bat\".", "The file path includes \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat\"."]}, {"id": "2ea3cbd1-60b0-4ab7-b309-3971ad8145a7", "name": "Signed Binary Proxy Execution: Rundll32 as used by the malware", "description": "Rundll32 is utilized by Goofy Guineapig malware for persistence through a multi-stage process. A legitimate executable is deployed concurrently with a malicious DLL.  A rundll32 command is constructed to leverage the URLMON_OpenURL function within url.dll, a system DLL responsible for URL protocol execution.  The crafted command, when executed, triggers the loading and execution of the malicious DLL by exploiting the specified function. The malicious DLL, operating with elevated privileges if applicable, facilitates communication with a command-and-control server, data exfiltration, additional malware installation, and arbitrary command execution. \n\nThis technique is favored due to rundll32's inherent low suspicion as a common Windows utility, enabling function hijacking through URLMON_OpenURL for reduced detection, and facilitating DLL injection into legitimate processes for heightened permissions and increased removal complexity.  \n\n\n", "mitre_technique": {"id": "T1218.011", "name": "System binary proxy execution: rundll32", "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction})."}, "pre-conditions": ["\nurl.dll is available.\n", "exe is available.", "\nThe legitimate executable is loaded into memory.\n"], "post-conditions": ["\nNetwork traffic to command and control servers\n", "\nRemote code execution\n", "\nModified system registry entries\n", "\nAltered process logs\n", "\nHidden or encrypted data files\n", "\nData exfiltration\n", "\nModified firewall rules\n", "\nUnusual system resource usage patterns\n", "\nNew files created with malicious content\n", "\nPotential for further malware infections\n", "\nPersistence on the system\n", "\nCompromised system integrity\n", "\nSuspicious DNS queries\n"], "indicators": ["The file \"tmp.bat\" is located at \"C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\"."]}], "pre-conditions": ["\nAccess to system files and processes.\n", "\nThe malware has access to information about legitimate Google update components.\n", "\nAbility to modify file metadata.\n", "\nThe malware is capable of modifying its own name or location.\n", "\nThe Goofy Guineapig malware is running.\n", "\nAccess to the CPU timestamp counter.\n", "\nThe system time register is accessible.\n", "\nThe malware is executing.\n", "\nA Windows operating system.\n", "\nThe system has logical processors.\n", "\nThe system has a physical memory size.\n", "\nThe malware is running.\n", "\nAccess to Windows APIs for retrieving system information (e.g., physical memory size, disk size, number of logical processors).\n", "\nOperating System with access to system information (e.g., Windows)\n", "\nAccess to process information on the system.\n", "\nThe malware is running on a system.\n", "\nProcesses are running on the system.\n", "\nThe malware executable exists.\n", "\nA legitimate NSIS installer is accessible.\n", "\nUPX packing tool is available.\n", "\nThe ability to analyze and interpret binary code.\n", "\nUnderstanding of stack-based string obfuscation methods.\n", "\nThe obfuscated strings within the malware exist.\n", "\nThe malware binary is present.\n", "\nA system capable of executing the malware binary.\n", "\nKnowledge of XOR encryption and decryption techniques.\n", "\nA process with a specific name is running.\n", "\nThe malware is running.\n", "\nA window exists with relevant strings.\n", "\nA command execution capability exists within the environment.\n", "\nAccess to the ProgramData directory is available.\n", "\nAccess to the initial download location is available.\n", "\nThe malware has successfully downloaded and extracted its files.\n", "\nThe malware has determined the initial download location.\n", "\nA file system is present.\n", "\nThe malware has identified a legitimate-looking directory.\n", "\nA legitimate executable is present on the system.\n", "\nThe malicious DLL exists.\n", "\nNetwork connectivity is available for downloading the malicious DLL.\n", "\nThe Goofy Guineapig loader is active.\n", "\nFile system access is available to write and execute files.\n", "\nA Windows operating system is present.\n", "\nThe malware has the capability to read and modify memory.\n", "\nA target system running Windows.\n", "\nThe malware has downloaded a payload executable.\n", "\nA running instance of the dllhost.exe process exists.\n", "\nurl.dll is available.\n", "exe is available.", "\nThe legitimate executable is loaded into memory.\n"], "post-conditions": ["\nUnusual process activity and resource usage\n", "\nYARA rule matches indicating the presence of Goofy Guineapig strings\n", "\nModified system registry entries\n", "\nData theft\n", "\nRemote access by attackers\n", "\nNew files created in various directories (e.g., temporary folders, user profiles)\n", "\nModified system configuration files\n", "\nNetwork connections to suspicious IP addresses\n", "\nEvidence of data exfiltration (e.g., unusual file transfers)\n", "\nExecution of malicious plugins\n", "\nSystem instability\n", "\nCompromised system security\n", "\nAltered system logs (event logs, application logs)\n", "\nPresence of Goofy Guineapig malware code fragments in memory or on disk\n", "\nPresence of malware artifacts in memory dumps\n", "\nModified system registry entries\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nLog entries indicating process creation and execution of malicious code\n", "\nMalware persistence\n", "\nUnusual network traffic to suspicious IP addresses\n", "\nEvidence of data transfer via encrypted channels\n", "\nPotential for further malicious activity\n", "\nNew files created in various directories (e.g., %TEMP%, AppData)\n", "\nNetwork communication with C2 server\n", "\nAltered system configurations\n", "\nModified system settings\n", "\nNetwork connections to command and control servers\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNew registry entries\n", "\nFile downloads and uploads\n", "\nUnusual process creation and termination events\n", "\nMalware infection\n", "\nModified system files\n", "\nProcess hijacking\n", "\nEncrypted data remnants\n", "\nPersistence mechanisms (e.g., scheduled tasks, boot-sector infections)\n", "\nResource depletion\n", "\nLog file entries indicating suspicious activity\n", "\nNetwork traffic to command and control servers\n", "\nModified system registry entries\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nAltered log files\n", "\nPotential for further malware execution\n", "\nNew files created in various directories\n", "\nPersistence on the system\n", "\nYARA rule matches in security logs\n", "\nProcess hollowing artifacts\n", "\nNetwork traffic to command and control servers\n", "\nAltered file timestamps\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNew registry entries\n", "\nPotential for further malware execution\n", "\nUnusual process creation and termination events\n", "\nModified system files\n", "\nLog files containing suspicious activity\n", "\nPersistence established\n", "\nHidden or encrypted files\n", "\nNetwork communication with C2 server\n", "\nYARA rule files\n", "\nHidden files and folders\n", "\nNetwork traffic to malicious servers\n", "\nModified system registry entries\n", "\nLeftover shellcode fragments\n", "\nData theft\n", "\nRemote access by attackers\n", "\nInstallation of additional malware\n", "\nAltered system files\n", "\nUnusual process activity\n", "\nFirewall rules changes\n", "\nSystem instability\n", "\nObfuscated code remnants in memory\n", "\nLog entries indicating suspicious activity\n", "\nCompromised system security\n", "\nDNS requests to unknown domains\n", "\nNew user accounts created\n", "\nPersistence established on the system\n", "\nHidden files and folders\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNew registry entries\n", "\nUnusual process activity logs\n", "\nNamed pipe created with hashed computer name\n", "\nRemote access granted to attacker\n", "\nModified system files\n", "\nModified DLLhost.exe process\n", "\nPotential for further malware infections\n", "\nNetwork connections to malicious servers\n", "\nYARA rule matches in security logs\n", "\nAltered system configurations\n", "\nData exfiltration and/or manipulation.\n", "\nAltered log files indicating unusual activity.\n", "\nFile fragments containing Goofy Guineapig strings.\n", "\nSystem instability and performance degradation.\n", "\nHidden files and directories in ProgramData.\n", "\nNew processes running with suspicious names or behavior.\n", "\nDeleted original download location files.\n", "\nModified system registry entries.\n", "\nCompromised system with persistent malware infection.\n", "\nIncreased vulnerability to further attacks.\n", "\nYARA rule matches in security logs.\n", "\nNetwork connections to malicious command-and-control servers.\n", "\nNetwork connections to command-and-control servers.\n", "\nLog files containing suspicious activity.\n", "\nUPX packed NSIS installer file.\n", "\nModified Firefox installation package.\n", "\nSystem instability and performance degradation.\n", "\nPresence of Goofy Guineapig loader shellcode remnants.\n", "\nMalicious DLL file in the ProgramData directory.\n", "\nData exfiltration and/or data manipulation.\n", "\nCompromised system with persistent malware infection.\n", "\nIncreased vulnerability to further attacks.\n", "\nModified registry entries related to the malicious process.\n", "\nAltered system files and configurations.\n", "\nExecution of malicious code\n", "\nModified system registry entries\n", "\nNetwork traffic to command-and-control servers\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nFirewall logs showing unauthorized connections\n", "\nModified system configuration files\n", "\nMalware persistence\n", "\nLog entries indicating unusual activity\n", "\nAltered process lists\n", "\nProcess injection\n", "\nShadow copies containing malware artifacts\n", "\nNew files created with suspicious names and content\n", "\nNetwork traffic to command and control servers\n", "\nRemote code execution\n", "\nModified system registry entries\n", "\nAltered process logs\n", "\nHidden or encrypted data files\n", "\nData exfiltration\n", "\nModified firewall rules\n", "\nUnusual system resource usage patterns\n", "\nNew files created with malicious content\n", "\nPotential for further malware infections\n", "\nPersistence on the system\n", "\nCompromised system integrity\n", "\nSuspicious DNS queries\n"]}, {"id": "8007eddd-5076-44f8-981a-a9f5c85db7c7", "attack_steps": [{"id": "536cbc08-74b5-4fc1-83a9-8e165b539a30", "name": "System Information Discovery as used by the malware", "description": "System Information Discovery is conducted by the Goofy Guineapig malware through the collection of various details pertaining to the infected machine. These data points are subsequently embedded within an obfuscated \"Authorization\" string transmitted in each communication (C2 packet) over HTTPS.\n\nData acquisition is achieved through the utilization of COM and WMI, enabling the retrieval of information such as the operating system caption and antivirus product display name.  Additional system details, including adapter information, host and hostname, and computer name, are obtained through direct invocation of relevant Windows APIs.\n\nThe collected information undergoes a process of obfuscation to mitigate detection by security measures. This \"Authorization\" string, containing the disguised system data, is incorporated into each HTTP header directed towards the Command and Control (C2) server. Consequently, the obfuscated \"Authorization\" string accompanies every C2 communication, effectively transmitting sensitive system information to the attackers without immediately raising suspicion. \n\n\n", "mitre_technique": {"id": "T1082", "name": "System information discovery", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["\nThe victim machine has an operating system.\n", "\nThe malware is running on a victim machine.\n", "\nNetwork connectivity is required for communication with the Command and Control (C2) server.\n", "\nAccess to the Windows Management Instrumentation (WMI) is available.\n", "\nAccess to relevant Windows APIs is available.\n", "\nA Windows operating system is present.\n", "\nHTTPS protocol is used for communication with the C2 server.\n"], "post-conditions": ["\nWMI queries indicating information gathering about the system.\n", "\nData exfiltration from infected machine.\n", "\nPotential for further malicious activity execution.\n", "\nModified system files with malicious code injections.\n", "\nObfuscated strings and encoded data within system files.\n", "\nUnusual network traffic to command-and-control servers.\n", "\nYARA rule matches identifying Goofy Guineapig components.\n", "\nTraces of communication protocols like HTTP, HTTPS, and KCP.\n", "\nCompromised system with persistent backdoor access.\n", "\nSystem instability and performance degradation.\n", "\nLog entries indicating suspicious process activity and file modifications.\n", "\nNew files created in various directories (e.g., malware binaries, configuration files).\n", "\nModified Windows registry entries.\n"], "indicators": ["The system's operating system is Windows NT 6.1.", "The system architecture is WOW64."]}], "pre-conditions": ["\nThe victim machine has an operating system.\n", "\nThe malware is running on a victim machine.\n", "\nNetwork connectivity is required for communication with the Command and Control (C2) server.\n", "\nAccess to the Windows Management Instrumentation (WMI) is available.\n", "\nAccess to relevant Windows APIs is available.\n", "\nA Windows operating system is present.\n", "\nHTTPS protocol is used for communication with the C2 server.\n"], "post-conditions": ["\nWMI queries indicating information gathering about the system.\n", "\nData exfiltration from infected machine.\n", "\nPotential for further malicious activity execution.\n", "\nModified system files with malicious code injections.\n", "\nObfuscated strings and encoded data within system files.\n", "\nUnusual network traffic to command-and-control servers.\n", "\nYARA rule matches identifying Goofy Guineapig components.\n", "\nTraces of communication protocols like HTTP, HTTPS, and KCP.\n", "\nCompromised system with persistent backdoor access.\n", "\nSystem instability and performance degradation.\n", "\nLog entries indicating suspicious process activity and file modifications.\n", "\nNew files created in various directories (e.g., malware binaries, configuration files).\n", "\nModified Windows registry entries.\n"]}, {"id": "3db22499-cd0b-4791-9dfe-338b5c608bfd", "attack_steps": [{"id": "6876f6d7-242b-4ad8-9bfd-01696c0a2e91", "name": "Application Layer Protocol: Web Protocols as used by the malware", "description": "HTTPS is employed by the malware for establishing communication with its command and control server.  Obfuscated data pertaining to the infected machine is incorporated into HTTP headers, specifically within the \"Authorization\" field of requests transmitted to the C2 server. \n\n\n", "mitre_technique": {"id": "T1071.001", "name": "Application layer protocol: web protocols", "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."}, "pre-conditions": ["\nA functioning internet connection.\n", "\nThe malware is running.\n", "\nThe infected machine has an internet connection.\n", "\nHTTPS protocol support.\n", "\nThe ability to send and receive HTTP GET and POST requests.\n", "\nStatic[.]tcplog[.]com domain resolvability.\n"], "post-conditions": ["\nModified system registry entries\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNetwork traffic to C2 server (static[.]tcplog[.]com)\n", "\nNew files created in various directories\n", "\nPresence of Goofy Guineapig malware code fragments\n", "\nPotential for further malicious activity\n", "\nUnusual process activity and memory usage patterns\n", "\nPersistence on the system\n", "\nLogs containing suspicious activity\n", "\nAltered system configurations\n"], "indicators": ["The URL HTTPS://static.tcplog.com is accessed.", "A User Agent string indicating Chrome/54.0.2840.71 Safari/537.36 is used."]}, {"id": "7b650a2e-5c6b-4d67-a525-225e0481f8e2", "name": "Fallback Channels as used by the malware", "description": "The malware's communication channels are configurable and include UDP, KCP, and direct socket communications.  UDP is employed for connectionless communication suitable for applications prioritizing low latency. KCP, a protocol designed for real-time communication, offers speed, security, and efficiency. Direct socket connections provide flexibility but may be more complex to implement. The specific channel utilized is determined by an embedded configuration string within the malware, enabling attackers to dynamically select the most appropriate method based on environmental factors and operational objectives. \n\n\n", "mitre_technique": {"id": "T1008", "name": "Fallback channels", "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds."}, "pre-conditions": ["\nA network connection is available.\n", "\nThe KCP protocol is accessible.\n", "\nThe malware is running.\n", "\nThe embedded configuration string contains \"UDP\" or \"udp\".\n", "\nAn embedded configuration string exists within the malware binary.\n"], "post-conditions": ["\nRemote access by attacker\n", "\nUnusual process activity and resource usage\n", "\nModified system registry entries\n", "\nNew files created with malicious code\n", "\nData theft\n", "\nNetwork traffic to suspicious IP addresses\n", "\nAltered log files\n", "\nUnique identifier based on concatenated host information and MD5 hash\n", "\nSystem instability\n", "\nEvidence of data exfiltration\n", "\nCompromised system security\n", "\nHardcoded configuration strings within malware binaries\n", "\nPresence of YARA rule matches in system logs\n"], "indicators": ["The file tmp.bat is located in the directory C:\\ProgramData\\GoogleUpdate\\GoogleUpdate."]}, {"id": "ac8d716e-ddcc-4523-b063-44208329662c", "name": "Non-Standard Port as used by the malware", "description": "The utilization of a non-standard HTTPS port (4443) for communication is employed by the malware Goofy Guineapig. This practice deviates from the standard HTTPS port (443) conventionally utilized by legitimate connections.  The implementation of this non-standard port constitutes an attempt to circumvent detection and analysis by security tools that predominantly focus on traffic traversing the standard HTTPS port. \n", "mitre_technique": {"id": "T1571", "name": "Non-standard port", "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data."}, "pre-conditions": [""], "post-conditions": ["\nNew files created in various directories (e.g., DLLs, configuration files)\n", "\nModified system registry entries\n", "\nEvidence of process creation and execution with suspicious names\n", "\nPresence of malicious code within legitimate executables\n", "\nData theft\n", "\nRemote access by attackers\n", "\nMalware persistence\n", "\nUnusual disk activity patterns\n", "\nModified system event logs\n", "\nSystem instability\n", "\nCompromised system security\n", "\nAltered network traffic logs (unusual connections, non-standard ports)\n", "\nLeftover communication data in temporary files or memory dumps\n"], "indicators": []}], "pre-conditions": ["\nA functioning internet connection.\n", "\nThe malware is running.\n", "\nThe infected machine has an internet connection.\n", "\nHTTPS protocol support.\n", "\nThe ability to send and receive HTTP GET and POST requests.\n", "\nStatic[.]tcplog[.]com domain resolvability.\n", "\nA network connection is available.\n", "\nThe KCP protocol is accessible.\n", "\nThe malware is running.\n", "\nThe embedded configuration string contains \"UDP\" or \"udp\".\n", "\nAn embedded configuration string exists within the malware binary.\n", ""], "post-conditions": ["\nModified system registry entries\n", "\nSystem compromise\n", "\nData exfiltration\n", "\nNetwork traffic to C2 server (static[.]tcplog[.]com)\n", "\nNew files created in various directories\n", "\nPresence of Goofy Guineapig malware code fragments\n", "\nPotential for further malicious activity\n", "\nUnusual process activity and memory usage patterns\n", "\nPersistence on the system\n", "\nLogs containing suspicious activity\n", "\nAltered system configurations\n", "\nRemote access by attacker\n", "\nUnusual process activity and resource usage\n", "\nModified system registry entries\n", "\nNew files created with malicious code\n", "\nData theft\n", "\nNetwork traffic to suspicious IP addresses\n", "\nAltered log files\n", "\nUnique identifier based on concatenated host information and MD5 hash\n", "\nSystem instability\n", "\nEvidence of data exfiltration\n", "\nCompromised system security\n", "\nHardcoded configuration strings within malware binaries\n", "\nPresence of YARA rule matches in system logs\n", "\nNew files created in various directories (e.g., DLLs, configuration files)\n", "\nModified system registry entries\n", "\nEvidence of process creation and execution with suspicious names\n", "\nPresence of malicious code within legitimate executables\n", "\nData theft\n", "\nRemote access by attackers\n", "\nMalware persistence\n", "\nUnusual disk activity patterns\n", "\nModified system event logs\n", "\nSystem instability\n", "\nCompromised system security\n", "\nAltered network traffic logs (unusual connections, non-standard ports)\n", "\nLeftover communication data in temporary files or memory dumps\n"]}]