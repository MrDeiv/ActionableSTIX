[{"id": "cd257211-b5cb-40b2-9894-800a263c8fdb", "attack_steps": [{"id": "1a4fecf6-6f52-4722-817f-459c0fcfba1d", "name": "Create or Modify System Process: Windows Service as used by Goofy Guineapig", "description": "Goofy Guineapig achieves persistence by creating a Windows service.  \nHere's a breakdown of how this likely works:\n\nService Creation: Goofy Guineapig uses a function or API call to create a new Windows service. This service will have a unique name chosen by the malware.\nService Configuration: The malware configures the service with specific settings:\nService Name: A seemingly innocuous name to avoid detection.\nService Description: A fabricated description to further disguise its purpose.\nStartup Type:  Likely set to \"Automatic\" or \"Automatic (Delayed Start)\" to ensure it starts with the system.\nService Binary: The path to Goofy Guineapig's executable file.\n\n\nService Registration: The malware registers the newly created service with the Windows service manager. This makes the service a permanent part of the system.\nPersistence: When the system boots up or restarts, the Windows service manager automatically starts the Goofy Guineapig service, loading the malware into memory and allowing it to continue its malicious activities.\n\nImportant Note:  The exact implementation details of how Goofy Guineapig creates and configures the service are not provided in the context. \nLet me know if you have any other questions.", "mitre_technique": {"id": "T1543.003", "name": "Create or modify system process: windows service", "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."}, "pre-conditions": ["The malware Goofy Guineapig is running on a Windows system.", "The malware Goofy Guineapig has the necessary permissions to create or modify a Windows service.", "The malware Goofy Guineapig has access to the Windows service management API.", "The malware Goofy Guineapig has the necessary configuration or settings to create or modify a Windows service.", "The system has a valid Windows service configuration.", "The system has a valid Windows service management API.", "The malware Goofy Guineapig has the necessary resources to create or modify a Windows service.", "The system has a valid Windows operating system.", "Windows operating system.", "Windows service management API.", "Necessary permissions to create or modify a Windows service.", "Valid Windows service configuration.", "Valid Windows service management API.", "Necessary resources to create or modify a Windows service.", "Connectivity to the Windows service management API.", "Availability of the Goofy Guineapig malware.", "Availability of the necessary configuration or settings to create or modify a Windows service.", "Availability of the necessary tools to create or modify a Windows service."], "post-conditions": ["Persistence mechanism is established.", "Malicious DLL is loaded by a legitimate executable.", "Windows service is created for persistence.", "Malware collects system information.", "Malware checks for automated analysis environment.", "Malware checks for debugging tools.", "Malware masquerades as a Firefox installer and a Google updater.", "Windows service created for persistence.", "Malicious DLL loaded by a legitimate executable.", "System information collected by malware.", "Automated analysis environment detection logs.", "Debugging tool detection logs.", "Firefox installer and Google updater masquerade files.", "MD5 hash of concatenated adapter information and host name.", "Suspended dllhost.exe process.", "New dllhost.exe process created in the suspended state.", "Command data written into dllhost.exe process memory.", "Thread context changed to point at new data.", "Thread resumed in dllhost.exe process.", "Malware execution logs.", "Malware persistence mechanism logs.", "Malware system time checks logs."], "indicators": ["Path: C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat"]}], "pre-conditions": ["The malware Goofy Guineapig is running on a Windows system.", "The malware Goofy Guineapig has the necessary permissions to create or modify a Windows service.", "The malware Goofy Guineapig has access to the Windows service management API.", "The malware Goofy Guineapig has the necessary configuration or settings to create or modify a Windows service.", "The system has a valid Windows service configuration.", "The system has a valid Windows service management API.", "The malware Goofy Guineapig has the necessary resources to create or modify a Windows service.", "The system has a valid Windows operating system.", "Windows operating system.", "Windows service management API.", "Necessary permissions to create or modify a Windows service.", "Valid Windows service configuration.", "Valid Windows service management API.", "Necessary resources to create or modify a Windows service.", "Connectivity to the Windows service management API.", "Availability of the Goofy Guineapig malware.", "Availability of the necessary configuration or settings to create or modify a Windows service.", "Availability of the necessary tools to create or modify a Windows service."], "post-conditions": ["Persistence mechanism is established.", "Malicious DLL is loaded by a legitimate executable.", "Windows service is created for persistence.", "Malware collects system information.", "Malware checks for automated analysis environment.", "Malware checks for debugging tools.", "Malware masquerades as a Firefox installer and a Google updater.", "Windows service created for persistence.", "Malicious DLL loaded by a legitimate executable.", "System information collected by malware.", "Automated analysis environment detection logs.", "Debugging tool detection logs.", "Firefox installer and Google updater masquerade files.", "MD5 hash of concatenated adapter information and host name.", "Suspended dllhost.exe process.", "New dllhost.exe process created in the suspended state.", "Command data written into dllhost.exe process memory.", "Thread context changed to point at new data.", "Thread resumed in dllhost.exe process.", "Malware execution logs.", "Malware persistence mechanism logs.", "Malware system time checks logs."]}, {"id": "b29fb749-6475-47ae-9cc3-9fdcfe219f18", "attack_steps": [{"id": "e3b2cc15-2168-4028-b79c-be4aa0637fca", "name": "Masquerading: Match Legitimate Name or Location as used by Goofy Guineapig", "description": "Goofy Guineapig masquerades as a Firefox installer and a Google updater in the following ways:\n\nFile Naming: The malware is initially distributed as a trojanized NSIS1 Firefox installer file. This likely uses a legitimate Firefox installer file as a base and modifies it to include the malicious payload.\nFile Location:  The malware moves the downloaded files to a legitimate-looking directory, further mimicking the behavior of a legitimate software update.\n\nThis tactic aims to deceive users into believing the malware is a legitimate software update, increasing the likelihood they will execute it without suspicion. ", "mitre_technique": {"id": "T1036.010", "name": "Masquerading: masquerade account name", "description": "Adversaries may match or approximate the names of legitimate accounts to make newly created ones appear benign. This will typically occur during Create Account, although accounts may also be renamed at a later date. This may also coincide with Account Access Removal if the actor first deletes an account before re-creating one with the same name."}, "pre-conditions": ["The malicious files are bundled in a UPX packed NSIS installer.", "The NSIS installer is a trojanised Firefox installer.", "The legitimate signed executable file GoogleUpdate.exe is available.", "The malicious DLL Goopdate.dll is loaded by GoogleUpdate.exe.", "The environment is Windows-based.", "The system has a ProgramData directory.", "The system has a GoogleUpdate directory.", "The system has a Firefox installation.", "The system has a legitimate certificate belonging to KgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgL (Founder Technology Group Corporation) available.", "Environment: Windows-based system with a ProgramData directory, GoogleUpdate directory, and Firefox installation.", "Tools: NSIS installer, GoogleUpdate.exe, Goopdate.dll, and a legitimate certificate belonging to KgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgL (Founder Technology Group Corporation).", "Connectivity: Internet connectivity to access hxxp://moziila.net and hxxp://\\x00refox.com.cn.", "Resources: Availability of a legitimate certificate belonging to KgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgL (Founder Technology Group Corporation) and a trojanised Firefox installer.", "The system must be able to load the malicious DLL Goopdate.dll by the legitimate signed executable file GoogleUpdate.exe."], "post-conditions": ["Persistence as a Windows service", "Malicious files in the ProgramData directory", "Hidden directory in the ProgramData directory", "Malicious DLL loaded by a legitimate executable", "Command and control communications over HTTPS", "Defence evasion techniques implemented", "Masquerading as a legitimate Firefox service", "Signed malicious loader using a legitimate certificate", "Malicious files deleted from the initial download directory", "Malicious files only visible in the ProgramData directory", "Windows service logs", "Malicious files in the ProgramData directory", "Hidden directory in the ProgramData directory", "Logs of malicious DLL loading", "Network connections for command and control communications", "Logs of defence evasion techniques", "Logs of masquerading as a legitimate Firefox service", "Certificate logs for signed malicious loader", "Batch script logs", "Logs of malicious files deletion", "Network connections for malicious loader download", "Logs of malicious files execution", "System process logs for persistence", "Logs of process hollowing on dllhost.exe", "Logs of UPX packed NSIS installer execution"], "indicators": ["The file 'Firefox-latest.exe' was observed.", "The file 'setup-stub.exe' was observed.", "The file 'Goopdate.dll' was observed.", "The file 'config.dat' was observed.", "The URL HTTPS://static.tcplog.com was observed."]}, {"id": "517bd728-24de-45ad-952c-54b4aadd5f24", "name": "Virtualization/Sandbox Evasion: Time Based Evasion as used by Goofy Guineapig", "description": "Goofy Guineapig implements Virtualization/Sandbox Evasion: Time Based Evasion by performing the following actions:\n\nTime Register Check: The malware checks the system's time register at a specific point in its execution.\nDelay Measurement: It introduces a deliberate delay of more than 100 milliseconds.\nSecond Time Register Check: After the delay, Goofy Guineapig checks the time register again.\nExecution Halt: If the elapsed time exceeds the expected delay (more than 100 milliseconds), the malware terminates its execution.\n\nThis technique aims to detect if the environment is running in a sandbox or virtualized environment, where time manipulation might be more common.  \nBy observing the time difference between the two checks, Goofy Guineapig can infer if the system's time is being artificially manipulated, indicating a potential sandbox or analysis environment. \nLet me know if you have any other questions about Goofy Guineapig's tactics or techniques! ", "mitre_technique": {"id": "T1497.003", "name": "Virtualization/sandbox evasion: time based evasion", "description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time."}, "pre-conditions": ["The system time register is checked twice.", "The system time register is checked for a delay of more than 100 milliseconds.", "The system time register is checked for a delay of less than or equal to 100 milliseconds.", "The system time register is checked for a delay of less than 100 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than or equal to 200 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than 200 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than or equal to 500 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than 500 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than or equal to 1000 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than 1000 milliseconds.", "A system with a time register.", "A system with a time register that can be checked.", "A system with a time register that can be checked for a delay.", "A system with a time register that can be checked for a delay of more than 100 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than or equal to 200 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than 200 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than or equal to 500 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than 500 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than or equal to 1000 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than 1000 milliseconds.", "A system with a physical memory size exceeding 2GB.", "A system with a disk size exceeding 1GB.", "A system with a physical memory size exceeding 2GB and a disk size exceeding 1GB.", "A system with a physical memory size exceeding 2GB or a disk size exceeding 1GB.", "A system with a physical memory size exceeding 2GB and a disk size exceeding 1GB, and a time register that can be checked for a delay of more than 100 milliseconds.", "A system with a time register.", "A system with a physical memory size exceeding 2GB.", "A system with a disk size exceeding 1GB."], "post-conditions": ["The malware will not continue execution if the disk size is less than 1GB.", "The malware will not continue execution if the physical memory size is less than 2GB.", "The malware will not continue execution if the number of logical processors is less than a certain threshold.", "The malware will not continue execution if the time difference between two values is more than 100ms.", "The malware will not continue execution if a debugger is running.", "The malware will not continue execution if other analysis tools are running.", "The malware will not continue execution if the machine is being reverse engineered or debugged.", "The malware will not continue execution if any process containing the string 'dbg', 'debug', or 'ida' is running.", "Logs of system time checks.", "Logs of disk size checks.", "Logs of physical memory size checks.", "Logs of logical processor checks.", "Logs of time difference checks.", "Logs of debugger checks.", "Logs of analysis tool checks.", "Logs of reverse engineering checks.", "Logs of process checks.", "Network connections to command and control servers over HTTPS.", "Files containing configuration for the malware.", "Files containing embedded configuration for the binary.", "Files containing defence evasion techniques.", "Files containing anti-sandbox/anti-VM techniques.", "Files containing anti-dynamic analysis techniques.", "Files containing anti-static analysis techniques.", "Files containing logs of defence evasion techniques.", "Files containing logs of anti-sandbox/anti-VM techniques.", "Files containing logs of anti-dynamic analysis techniques.", "Files containing logs of anti-static analysis techniques."], "indicators": []}, {"id": "a9853f1a-11df-4b33-ab92-45352067cc41", "name": "Virtualization/Sandbox Evasion: System Checks as used by Goofy Guineapig", "description": "Goofy Guineapig performs system checks by utilizing system APIs or functions to retrieve information about the disk size, physical memory size, and the number of logical processors available on the system. \nIt then compares these retrieved values against predefined thresholds or expected values. If any of the checks fail to meet these criteria, indicating a potential virtualization or sandbox environment, Goofy Guineapig will terminate its execution, preventing further malicious activity. \nLet me know if you'd like more details on specific APIs or functions that might be involved! ", "mitre_technique": {"id": "T1497.001", "name": "Virtualization/sandbox evasion: system checks", "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."}, "pre-conditions": ["The system has a disk.", "The system has physical memory.", "The system has a logical processor.", "The system has a disk size greater than 1GB.", "The system has a physical memory size greater than 2GB.", "The system has a number of logical processors greater than 2.", "A system with a disk.", "A system with physical memory.", "A system with a logical processor.", "A system with a disk size greater than 1GB.", "A system with a physical memory size greater than 2GB.", "A system with a number of logical processors greater than 2.", "The system must be running a 32-bit or 64-bit operating system (inferred from the context).", "The system must have the necessary resources to run the malware (inferred from the context).", "The system must have a network connection (inferred from the context, as the malware communicates with a C2 server).", "The system must have a process manager (inferred from the context, as the malware checks for processes running on the system).", "The system must have a debugger (inferred from the context, as the malware checks for debuggers running on the system).", "The system must have a virtualization or sandbox environment (inferred from the context, as the malware is designed to evade these environments)."], "post-conditions": ["The malware will exit if any of the sandbox detection checks fail.", "The malware will not continue execution if the number of logical processors is less than or equal to 2.", "The malware will not continue execution if the disk size, physical memory size, or number of logical processors are not sufficient.", "The malware will not continue execution if it detects processes running on a system that indicate it is being reverse engineered or debugged.", "The malware will not continue execution if it detects any indication that the process is running in an automated analysis environment.", "The malware will not continue execution if it detects any error during the execution of the payload data.", "The malware will not continue execution if it detects any error during the communication with the command and control server.", "Logs of the sandbox detection checks.", "Files created by the malware, such as dllhost.exe.", "Network connections to the command and control server.", "Logs of the communication with the command and control server.", "Files created by the malware, such as configuration files.", "Registry keys modified by the malware.", "Files deleted or modified by the malware.", "Network connections to the malware's command and control server.", "Logs of the malware's execution, such as process creation and termination logs.", "Files created by the malware, such as plugin files."], "indicators": []}, {"id": "86d62e6d-e3f3-4ef4-971f-1a650462c526", "name": "Virtualization/Sandbox Evasion: User Activity Based Checks as used by Goofy Guineapig", "description": "Goofy Guineapig performs User Activity Based Checks to evade sandbox environments by monitoring running processes for indicators of reverse engineering or debugging. \nHere's how it works:\n\nProcess Name Scanning: Goofy Guineapig examines the names of all running processes on the infected system. \nKeyword Detection: It specifically looks for process names containing the strings \"dbg\", \"debug\", or \"ida\". These strings are commonly associated with debugging tools like IDA Pro, debuggers, and similar software used by security researchers.\nExecution Halt: If Goofy Guineapig detects any process with these keywords, it interprets this as a sign that it is being analyzed in a controlled environment and will immediately terminate its own execution.\n\nThis technique aims to prevent the malware from being analyzed and understood by security researchers who might be using these tools. \nLet me know if you have any other questions about Goofy Guineapig or malware analysis techniques! ", "mitre_technique": {"id": "T1497.002", "name": "Virtualization/sandbox evasion: user activity based checks", "description": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."}, "pre-conditions": ["The system has processes running.", "The system has a name for each running process.", "The system has a physical memory size exceeding 2GB.", "The system has a disk size exceeding 1GB.", "The system is not being reverse engineered.", "The system is not being debugged.", "The system does not have a debugger running.", "The system does not have other analysis tools running.", "Environment: A system with processes running, a physical memory size exceeding 2GB, and a disk size exceeding 1GB.", "Tools: None directly stated, but the system must have a way to check process names and system properties.", "Connectivity: None directly stated.", "Resources: None directly stated, but the system must have enough resources to run the checks.", "Availability of the Goofy Guineapig malware.", "The system must be able to execute the malware.", "The system must be able to load the Goofy Guineapig plugins.", "The system must be able to communicate with the tcplog.com server (HTTPS) or use raw TCP socket communications."], "post-conditions": ["The malware will not continue execution if any process containing the string 'dbg', 'debug', or 'ida' is running.", "The malware will not continue execution if any of the checks fail, including disk size, physical memory size, and number of logical processors.", "The malware will exit if the number of logical processors does not exceed 2.", "The malware will impersonate the user associated with the session ID.", "An instance of the legitimate dllhost.exe process will be created in the suspended state.", "Command data will be written into the process memory.", "The thread context will be changed to point at the new data and the thread will be resumed.", "The malware will check for processes running on a system which indicate that it is being reverse engineered or debugged.", "The malware will check the properties of the infected machine, as well as the running processes and system time.", "The malware will collect information about the infected machine or run additional plugins.", "Logs of system checks, including disk size, physical memory size, and number of logical processors.", "Logs of process checks, including running processes and system time.", "Creation of a legitimate dllhost.exe process in the suspended state.", "Writing of command data into the process memory.", "Changes to the thread context.", "Network connections for command and control communications over HTTPS.", "Files created by the malware, including configuration files and plugin files.", "Modification of system time.", "Creation of a new dllhost.exe process to execute the payload data.", "Logs of user impersonation."], "indicators": ["The file 'tmp.bat' is located in the directory 'C:\\ProgramData\\GoogleUpdate\\GoogleUpdate'.", "A HTTP request with the User-Agent header 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36' was made."]}, {"id": "a1b24a19-eb41-4c95-b908-1d7c2f3788a6", "name": "Obfuscated Files or Information: Software Packing as used by Goofy Guineapig", "description": "Goofy Guineapig is obfuscated by being UPX packed. This means its code is compressed and encrypted, making it harder to analyze and understand. \nFurthermore, it is packaged within a legitimate NSIS installer. This disguises the malicious nature of the payload, making it more likely to be accepted by users who might otherwise avoid downloading suspicious files. \nLet me know if you have any other actions you'd like explained! ", "mitre_technique": {"id": "T1027.002", "name": "Obfuscated files or information: software packing", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."}, "pre-conditions": ["The malware Goofy Guineapig is present in the system.", "The malware Goofy Guineapig has been executed.", "The system has a legitimate NSIS installer.", "The system has a UPX packer.", "The system has a legitimate executable GoogleUpdate.exe.", "The system has a legitimate FireFox NSIS installation package.", "The system has a legitimate FireFox executable.", "The system has a physical memory size exceeding 2GB.", "The system has a disk size exceeding 1GB.", "The system has a legitimate Windows operating system.", "Environment: Windows operating system.", "Tools: UPX packer, NSIS installer, GoogleUpdate.exe, FireFox executable.", "Connectivity: None.", "Resources: Physical memory size exceeding 2GB, disk size exceeding 1GB.", "Availability of legitimate software: NSIS installer, GoogleUpdate.exe, FireFox executable.", "Availability of malware: Goofy Guineapig.", "Availability of system resources: physical memory size exceeding 2GB, disk size exceeding 1GB."], "post-conditions": ["Malware infection", "Data exfiltration", "Command and control (C2) communications over HTTPS", "Defence evasion techniques implemented", "Malicious DLL sideloaded by legitimate executable", "Malware masquerading as legitimate processes", "Malicious files dropped alongside legitimate files", "Malware checking for automated analysis environment", "Malware checking for physical memory size and disk size", "Malware implementing anti-sandbox/anti-VM techniques", "Malicious DLL file created in system directory", "Malicious executable file created in system directory", "Network connections to C2 server over HTTPS", "Logs of malware activity in Windows Event Viewer", "Files created in %TEMP% directory", "Registry keys modified to enable malware functionality", "System configuration files modified to enable malware functionality", "Network traffic logs showing C2 communications", "Files created in %APPDATA% directory", "System files modified to enable malware persistence"], "indicators": ["The file 'Firefox-latest.exe' has a MD5 hash of 'a21dec89611368313e138480b3c94835'.", "The file 'Firefox-latest.exe' has a SHA-1 hash of '2b8aab068ef15cb05789da320b7099932a0a4166'.", "The file 'Firefox-latest.exe' has a SHA-256 hash of '19cef7f32e42cc674f7c76be3a5c691c543f4e018486c29153e7dde1a48af34c'.", "The file 'setup-stub.exe' has a MD5 hash of '180e0bb4b570c215bfe7abdf209402aa'.", "The file 'setup-stub.exe' has a SHA-1 hash of '6f5c07c50ce4976ddb3879ce65d3b2f96693dc4c'.", "The file 'setup-stub.exe' has a SHA-256 hash of '97f66bcd7d73917a8b59d9a1dcac21a58936bcafa91e757a9dfb8e5c320af40f56'.", "The file 'Goopdate.dll' has a MD5 hash of 'f98537517212068d0c57968876fc8204'.", "The file 'Goopdate.dll' has a SHA-1 hash of '7961930d13cb8d5056db64b6749356915fb4c272'.", "The file 'Goopdate.dll' has a SHA-256 hash of '12a29373c1f493f7757b755099bd e4770c310af3fde376176b6d792cd1c5e150'.", "The file 'config.dat' has a MD5 hash of '3dc1096e73db4886fb66ed9413ca994c'.", "The file 'config.dat' has a SHA-1 hash of '628ce6721b97fa12590356712fbffc5ae030781ce'.", "The file 'config.dat' has a SHA-256 hash of '3a1af09a0250c602569d458e79db90a45e305b76d8423b81eeeca14c69847b81c'."]}, {"id": "698beefd-440f-477a-9ede-cbb7386fc4a7", "name": "Deobfuscate/Decode Files or Information as used by Goofy Guineapig", "description": "Deobfuscation Action in Goofy Guineapig\nGoofy Guineapig utilizes two primary methods for obfuscating stack-based strings within its binary:\n\n\nSingle-Byte XOR:  This technique involves applying a bitwise XOR operation with a fixed key to each byte of the string. The result is a scrambled representation of the original string. To recover the original string, the same XOR operation with the same key must be applied to the obfuscated bytes.\n\n\nSingle-Byte Subtraction:  Similar to XOR, this method uses subtraction with a fixed key to modify each byte of the string.  The result is a shifted representation of the original string.  Like XOR, the original string can be recovered by applying the inverse operation (addition) with the same key.\n\n\nAction Performance:\nThe deobfuscation process is likely triggered during the execution of Goofy Guineapig.  The malware may:\n\nParse the binary:  Goofy Guineapig analyzes its own code to identify the obfuscated strings.\nApply the inverse operation:  It then applies the appropriate inverse operation (XOR or subtraction) using the corresponding key to reveal the original strings.\nUtilize the strings:  The deobfuscated strings are then used for various purposes, such as:\nEstablishing communication with the Command and Control (C2) server:  The strings might contain the C2 server address or other communication parameters.\nIdentifying system information:  The strings could hold queries for retrieving system details like usernames, operating system version, or network configurations.\nExecuting commands:  The strings might represent commands to be executed on the infected system.\n\n\n\nNote: The specific implementation details of the deobfuscation process and the keys used are likely unique to each Goofy Guineapig variant.", "mitre_technique": {"id": "T1140", "name": "Deobfuscate/decode files or information", "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system."}, "pre-conditions": ["The malware Goofy Guineapig is present on the system.", "The malware Goofy Guineapig is running on the system.", "The system has a process running that contains the string \u2018dbg\u2019, \u2018debug\u2019, or \u2018ida\u2019.", "The system has a process running that indicates it is being reverse engineered or debugged.", "The system has a legitimate NSIS installer.", "The system has a file with a single-byte XOR or subtraction obfuscation.", "The system has a file with RC4 encryption.", "The system has a file with one-byte XOR obfuscation with the key 0x59.", "Environment: A system with a malware analysis environment or a sandbox.", "Tools: A malware analysis tool, such as a disassembler or a debugger, and a tool for decoding or deobfuscating files, such as a XOR decoder.", "Connectivity: None.", "Resources: A system with sufficient resources to run the malware analysis tool and the malware itself.", "Availability of the malware: The malware Goofy Guineapig must be available for analysis.", "Knowledge of the malware's behavior: The analyst must have knowledge of the malware's behavior and the techniques used to obfuscate or encode the files.", "Availability of the tools: The tools required to decode or deobfuscate the files must be available and accessible to the analyst."], "post-conditions": ["The malware is able to communicate with its command and control server over HTTPS.", "The malware is able to communicate with its command and control server over UDP using the KCP protocol.", "The malware is able to impersonate a legitimate process (dllhost.exe).", "The malware is able to execute payload data in a suspended state process.", "The malware is able to change the thread context to point at the new data.", "The malware is able to resume the thread and execute the payload data.", "The malware is able to delete files from the original file path.", "The malware is able to restart the GoogleUpdate.exe process from the ProgramData directory.", "The malware is able to delete itself.", "The malware is able to check the name of each running process on the machine.", "The malware is able to prevent execution if a process containing the string 'dbg', 'debug', or 'ida' is running.", "Log files of the malware's communication with its command and control server.", "Files created by the malware (e.g. dllhost.exe process).", "Network connections to the command and control server.", "Files deleted by the malware (e.g. GoogleUpdate.exe and Goopdate.dll).", "Batch script files created by the malware.", "RC4 encrypted files embedded in the shellcode.", "One-byte XOR obfuscated configuration strings.", "Embedded configuration strings in the binary.", "Process memory modifications made by the malware.", "Suspended state processes created by the malware.", "Thread context changes made by the malware.", "Log files of the malware's execution and deletion."], "indicators": ["The file 'Firefox-latest.exe' has a MD5 hash of 'a21dec89611368313e138480b3c94835'.", "The file 'Firefox-latest.exe' has a SHA-1 hash of '2b8aab068ef15cb05789da320b7099932a0a4166'.", "The file 'Firefox-latest.exe' has a SHA-256 hash of '19cef7f32e42cc674f7c76be3a5c691c543f4e018486c29153e7dde1a48af34c'.", "The file 'setup-stub.exe' has a MD5 hash of '180e0bb4b570c215bfe7abdf209402aa'.", "The file 'setup-stub.exe' has a SHA-1 hash of '6f5c07c50ce4976ddb3879ce65d3b2f96693dc4c'.", "The file 'setup-stub.exe' has a SHA-256 hash of '97f66bcd d73917a8b59d9a1dcac21a58936bca f91e757a9dfb8e5c320af40f56'.", "The file 'Goopdate.dll' has a MD5 hash of 'f98537517212068d0c57968876fc8204'.", "The file 'Goopdate.dll' has a SHA-1 hash of '7961930d13cb8d5056db64b6749356915fb4c272'.", "The file 'Goopdate.dll' has a SHA-256 hash of '12a29373c1f493f7757b755099bd e4770c310af3fde376176b6d792cd1c5e150'.", "The file 'config.dat' has a MD5 hash of '3dc1096e73db4886fb66ed9413ca994c'.", "The file 'config.dat' has a SHA-1 hash of '628ce6721b97fa12590356712fbfc5ae030781ce'.", "The file 'config.dat' has a SHA-256 hash of '3a1af09a0250c602569d458e79db90a45e305b76d8423b81eeeca14c69847b81c'."]}, {"id": "22901e5d-2930-44fd-ba8f-2f6ed182836b", "name": "Hide Artifacts: Hidden Window as used by Goofy Guineapig", "description": "Goofy Guineapig hides artifacts by using a technique called process hollowing on the legitimate process dllhost.exe. \nHere's how it works:\n\nInfection: Goofy Guineapig injects its malicious code into a running instance of dllhost.exe.\nHollowing: The malicious code then replaces the original dllhost.exe code with its own, effectively \"hollowing out\" the legitimate process.\nHidden Execution:  Since the process is now running Goofy Guineapig's code, it operates hidden from view, as it's disguised as a legitimate dllhost.exe process. \n\nThis allows Goofy Guineapig to execute its malicious activities without raising immediate suspicion. ", "mitre_technique": {"id": "T1564.003", "name": "Hide artifacts: hidden window", "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks."}, "pre-conditions": ["The Goofy Guineapig malware is present in the system.", "The system has a legitimate dllhost.exe process.", "The system has a legitimate GoogleUpdate.exe executable.", "The system has a legitimate Firefox installation package.", "The system has a hidden directory, ProgramData, by default.", "The system has a legitimate NSIS installer.", "The system has a legitimate FireFox NSIS installation package.", "The system has a legitimate url.dll binary.", "The system has a legitimate rundll32.exe binary.", "The system has a legitimate dllhost.exe binary.", "Environment: Windows operating system.", "Tools: None explicitly stated, but the following tools are inferred to be available:", "Connectivity: None explicitly stated, but the following connectivity is inferred to be available:", "Resources:", "The system must have the necessary permissions to create and hide processes."], "post-conditions": ["Malicious DLL loaded into the legitimate dllhost.exe process.", "Malicious DLL injected into the legitimate dllhost.exe process.", "Malicious DLL sideloaded by the legitimate GoogleUpdate.exe process.", "Malicious code loaded directly into the GoogleUpdate.exe process.", "KEYPLUG samples identified communicating with two different C&C domains.", "Malicious FireFox NSIS installation package dropped alongside legitimate FireFox files.", "Malicious DLL loaded into the legitimate executable installed by the Goofy Guineapig loader.", "Process hollowing performed on the dllhost.exe binary.", "Logs of the malicious DLL loading into the dllhost.exe process.", "Files created by the malicious FireFox NSIS installation package.", "Network connections to the two C&C domains used by KEYPLUG samples.", "Logs of the malicious DLL injection into the dllhost.exe process.", "Files created by the legitimate executable installed by the Goofy Guineapig loader.", "Logs of the malicious DLL sideloaded by the GoogleUpdate.exe process.", "Network connections to the C2 server used by the Goofy Guineapig loader.", "Malicious code loaded into the GoogleUpdate.exe process.", "Logs of the process hollowing performed on the dllhost.exe binary.", "Files created by the KEYPLUG samples."], "indicators": ["Path: C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat"]}, {"id": "1e3f6c8d-818d-4688-81bf-06f84c3412be", "name": "Indicator Removal on Host: File Deletion as used by Goofy Guineapig", "description": "Goofy Guineapig performs file deletion as follows:\n\nInitial Execution: The malware first runs from the directory where it was downloaded.\nFile Relocation: It then moves the malicious files (including itself) to a directory that appears legitimate. This likely aims to avoid detection by security tools that might focus on known malicious locations.\nDeletion: Finally, Goofy Guineapig deletes the original files from the initial download directory, effectively cleaning up its tracks. \n\nThis tactic helps the malware remain hidden and avoid detection by security software that might be monitoring known malicious directories. ", "mitre_technique": {"id": "T1070.010", "name": "Indicator removal: relocate malware", "description": "Once a payload is delivered, adversaries may reproduce copies of the same malware on the victim system to remove evidence of their presence and/or avoid defenses. Copying malware payloads to new locations may also be combined with File Deletion to cleanup older artifacts."}, "pre-conditions": ["The malware Goofy Guineapig is initially run in the location to which it is downloaded.", "The files are moved to a legitimate looking directory.", "The initial download location exists.", "The files to be deleted are present in the initial download location.", "The ProgramData directory exists.", "The persistence mechanism has been installed.", "The malicious files are copied to the ProgramData directory.", "The extracted Firefox files directory exists.", "Environment: Windows operating system.", "Tools: Batch script, UPX packed NSIS installer, Goopdate.dll DLL.", "Connectivity: None.", "Resources:", "The malware Goofy Guineapig is installed and running."], "post-conditions": ["Malicious files are copied to the ProgramData directory.", "Malicious files are deleted from the initial download location.", "Persistence mechanism is installed.", "Command and control communications occur over HTTPS.", "Defence evasion techniques are implemented.", "Sandbox detection checks are performed.", "Malicious files are removed from the directory containing the extracted Firefox files.", "Initial directory to which the files were downloaded will only contain the files the recipient likely intended to download.", "Malicious files will only be present in the ProgramData directory.", "GoogleUpdate.exe process is restarted from the ProgramData directory.", "Logs of command and control communications over HTTPS.", "Files in the ProgramData directory.", "Deleted files in the initial download location.", "Persistence mechanism installed in the system.", "Logs of defence evasion techniques.", "Logs of sandbox detection checks.", "Network connections to C&C domains.", "Files in the directory containing the extracted Firefox files.", "Logs of GoogleUpdate.exe process restart.", "Network connections to hxxps://static.tcplog.com:4443 and hxxps://139.59.116.0:4443."], "indicators": ["The file 'Firefox-latest.exe' was deleted.", "The file 'setup-stub.exe' was deleted.", "The file 'Goopdate.dll' was deleted.", "The file 'config.dat' was deleted."]}, {"id": "06685a26-3cc2-472c-8e1f-a4aa60da4859", "name": "Hijack Execution Flow: DLL Side-Loading as used by Goofy Guineapig", "description": "Here's a breakdown of how Goofy Guineapig hijacks execution flow using DLL side-loading:\n1. The Setup:\n\nLegitimate Executable Installation: The Goofy Guineapig loader installs a legitimate executable (in this case, GoogleUpdate.exe) as part of a seemingly normal installation process. This executable is often signed, making it appear trustworthy.\nMalicious DLL Placement:  Simultaneously, the loader installs a malicious DLL (the \"Goofy Guineapig\" DLL) in a location that is accessible to the legitimate executable.\n\n2. The Hijack:\n\nExecution Flow: When the legitimate executable (e.g., GoogleUpdate.exe) is run, the operating system loads any DLLs specified in its dependencies.\nSide-Loading:  The malicious DLL is included in the legitimate executable's dependencies, either directly or through a clever manipulation of the executable's structure.\nDLL Injection: As the legitimate executable loads, the malicious DLL is injected into its memory space. This effectively gives the malicious code control over the legitimate process.\n\n3. The Consequences:\n\nCommand and Control: The malicious DLL can now communicate with a command-and-control (C2) server, allowing the attacker to remotely control the infected system.\nData Exfiltration: The malicious DLL can steal sensitive information from the infected system and send it back to the attacker.\nFurther Malicious Activity: The attacker can use the compromised process to install additional malware, launch attacks, or perform other malicious actions.\n\nKey Points:\n\nStealth: DLL side-loading is a stealthy technique because the malicious code is hidden within a legitimate process.\nTrust:  The attacker exploits the trust users have in legitimate software to gain a foothold on their systems.\nPersistence:  Goofy Guineapig's use of a Windows service ensures that the malicious DLL remains loaded even after the user logs off or restarts their computer.\n\nLet me know if you have any other questions.", "mitre_technique": {"id": "T1574.002", "name": "Hijack execution flow: dll side-loading", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s)."}, "pre-conditions": ["A legitimate executable is installed.", "A malicious DLL is loaded by the legitimate executable.", "The legitimate executable is installed by the Goofy Guineapig loader.", "The malicious DLL is sideloaded by the legitimate, signed, executable GoogleUpdate.exe.", "The Goofy Guineapig loader is present in the system.", "The malicious DLL is bundled in a UPX packed NSIS installer.", "The NSIS installer is a trojanised Firefox installer.", "The Goofy Guineapig loader checks if it is running from the location C:\\\\ProgramData \\\\GoogleUpdate.", "A service is started for persistence if the Goofy Guineapig loader is not running from the location C:\\\\ProgramData \\\\GoogleUpdate.", "The legitimate executable and the malicious DLL are present in the system.", "Windows operating system.", "Presence of the Goofy Guineapig loader.", "Presence of a legitimate executable.", "Presence of a malicious DLL.", "Presence of a UPX packed NSIS installer.", "Presence of a trojanised Firefox installer.", "Connectivity to the internet for C2 communication.", "Presence of a legitimate, signed, executable GoogleUpdate.exe.", "Ability to install and run the NSIS installer.", "Ability to sideload the malicious DLL into the legitimate executable.", "Ability to create a Windows service for persistence.", "Presence of the rundll32.exe and url.dll system binaries."], "post-conditions": ["Persistence of a malicious DLL in the system.", "Creation of a Windows service for persistence.", "Hijacking of legitimate executable processes.", "Loading of malicious DLL by legitimate executable.", "Masquerading as legitimate processes.", "Trojanisation of a legitimate Firefox NSIS installation package.", "Sideloaded malicious DLL by legitimate, signed, executable.", "Communication over non-standard HTTPS port 4443.", "Process hollowing on dllhost.exe binary.", "Execution of malicious DLL through rundll32.exe and url.dll.", "Malicious DLL files in system directories.", "Windows service created for persistence.", "Logs of hijacked legitimate executable processes.", "Files created by legitimate executable with malicious DLL loaded.", "Network connections to static.tcplog.com.", "Network connections to moziila.net and hxxp://\\x00refox.com.cn.", "Files created by NSIS installer with trojanised Firefox.", "Logs of process hollowing on dllhost.exe binary.", "Logs of execution of malicious DLL through rundll32.exe and url.dll.", "Files created by legitimate executable with malicious DLL sideloaded.", "Certificate belonging to KgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgL (Founder Technology Group Corporation) used for signing malicious loader.", "Logs of communication over non-standard HTTPS port 4443."], "indicators": ["The file 'Goopdate.dll' was observed.", "The file 'config.dat' was observed."]}, {"id": "dd8fd4c7-eaa0-4805-830b-c973088ee404", "name": "Process Injection: Process Hollowing as used by Goofy Guineapig", "description": "Goofy Guineapig performs process hollowing on the dllhost.exe binary by:\n\nDownloading malicious content: Goofy Guineapig downloads malicious code from its Command and Control (C2) server.\nHollowing the process: It then uses process hollowing techniques to replace the legitimate code within the dllhost.exe process with its own malicious payload. This effectively injects the downloaded content into the running dllhost.exe process.\n\nEssentially, Goofy Guineapig takes over an existing, legitimate process (dllhost.exe) and replaces its original functionality with its own malicious code. ", "mitre_technique": {"id": "T1055", "name": "Process injection", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process."}, "pre-conditions": ["The Goofy Guineapig malware is present on the system.", "The dllhost.exe process is present on the system.", "The Goofy Guineapig malware has the capability to perform process hollowing.", "The Goofy Guineapig malware has the capability to inject content into the dllhost.exe process.", "The Goofy Guineapig malware has the capability to download content from the C2 server.", "The C2 server is reachable over HTTPS.", "The Goofy Guineapig malware has the necessary permissions to create and manipulate processes.", "Environment: Windows operating system.", "Tools: None explicitly stated, but the Goofy Guineapig malware is assumed to have the necessary capabilities.", "Connectivity: HTTPS connectivity to the C2 server.", "Resources: System memory and CPU resources to create and manipulate processes.", "Availability of the dllhost.exe process on the system.", "Availability of the Goofy Guineapig malware on the system.", "Necessary permissions to create and manipulate processes."], "post-conditions": ["The legitimate dllhost.exe process is created in the suspended state and executes the payload data.", "A legitimate executable is installed by the Goofy Guineapig loader, alongside a malicious DLL which will be loaded by the legitimate executable.", "The process dllhost.exe is created hidden.", "The disk size, physical memory size, and number of logical processors are checked, and execution is terminated if any of the checks fail.", "Process hollowing is performed on the dllhost.exe binary, injecting content downloaded by the C2.", "The persistence mechanism utilises rundll32.exe and url.dll to execute the legitimate binary which will load the malicious DLL.", "Information about the infected machine is sent in each C2 packet, as an obfuscated \u2018Authorization\u2019 string in the HTTP header.", "HTTPS is used for C2 communications.", "A payload executable appears to run under a legitimate process path and name in process listings.", "The CPU timestamp counter is read and saved, then read and saved again immediately.", "A global structure is used to store the handle of the spawned process.", "A named pipe is created where the name of the pipe is the computer name MD5 hashed twice.", "Logs of the legitimate dllhost.exe process creation and execution.", "Files installed by the Goofy Guineapig loader, including the malicious DLL.", "Hidden dllhost.exe process.", "Logs of the disk size, physical memory size, and number of logical processors checks.", "Process hollowing logs on the dllhost.exe binary.", "Logs of the persistence mechanism utilising rundll32.exe and url.dll.", "HTTP headers with obfuscated \u2018Authorization\u2019 strings in C2 packets.", "HTTPS connections for C2 communications.", "Process listings showing the payload executable running under a legitimate process path and name.", "Logs of the CPU timestamp counter reads and saves.", "Global structure logs storing the handle of the spawned process.", "Named pipe created with the computer name MD5 hashed twice as its name.", "Malicious loaders hosted on hxxps://download-ssl.moziila.net.", "Reuse of the KEYPLUG malware and loader used by APT41."], "indicators": ["Path: C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat", "User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36"]}, {"id": "c9b455b5-a090-4f06-b1a7-ff113bc228b7", "name": "Signed Binary Proxy Execution: Rundll32 as used by Goofy Guineapig", "description": "Goofy Guineapig uses the rundll32.exe utility and the url.dll library to achieve persistence. \nHere's how it works:\n\nLeveraging rundll32.exe: rundll32.exe is a legitimate Windows tool used to execute functions within DLL files. \nUsing url.dll:  Goofy Guineapig instructs rundll32.exe to load and execute functions from the url.dll library.\nLoading the Malicious DLL:  Within url.dll, Goofy Guineapig has embedded code that specifies the path to the malicious DLL it wants to load.\nPersistence: When the system starts, rundll32.exe is triggered, executing the Goofy Guineapig code within url.dll, ultimately loading the malicious DLL into memory. This ensures the malware persists even after a reboot.\n\nEssentially, Goofy Guineapig disguises its malicious DLL loading process by leveraging legitimate system tools and libraries, making it harder to detect. ", "mitre_technique": {"id": "T1218.011", "name": "System binary proxy execution: rundll32", "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction})."}, "pre-conditions": ["A legitimate signed executable is installed.", "A malicious DLL is loaded by the legitimate executable.", "The legitimate executable is configured to load the malicious DLL.", "The malicious DLL is sideloaded by the legitimate executable.", "The legitimate executable is running with sufficient privileges.", "The malicious DLL is present in the system's memory.", "The system's process hollowing functionality is available.", "The system's DLL loading mechanism is functional.", "The system's rundll32.exe binary is available.", "The system's url.dll binary is available.", "Environment: Windows operating system.", "Tools: None explicitly stated, but the following are inferred:", "Connectivity: None explicitly stated, but the following are inferred:", "Resources:", "Additional requirements:"], "post-conditions": ["Persistence of malicious DLL through Windows service.", "Creation of hidden processes (dllhost.exe).", "Process hollowing on dllhost.exe.", "Injection of content downloaded by C2 into dllhost.exe.", "Execution of malicious DLL through legitimate executable (GoogleUpdate.exe).", "Sideloaded malicious DLL through legitimate executable (GoogleUpdate.exe).", "Trojanisation of legitimate FireFox NSIS installation package.", "Creation of non-standard HTTPS port (4443) for communication.", "RC4 encrypted DLL and shellcode left behind.", "Hidden dllhost.exe processes.", "Process hollowing logs.", "Injected content in dllhost.exe memory.", "Rundll32.exe and url.dll execution logs.", "Sideloaded malicious DLL through GoogleUpdate.exe.", "FireFox NSIS installation package modification logs.", "Non-standard HTTPS port (4443) creation logs.", "RC4 encrypted DLL and shellcode files.", "Windows service logs for persistence mechanism.", "Network connections to C2 over HTTPS."], "indicators": ["Path: C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat"]}], "pre-conditions": ["The malicious files are bundled in a UPX packed NSIS installer.", "The NSIS installer is a trojanised Firefox installer.", "The legitimate signed executable file GoogleUpdate.exe is available.", "The malicious DLL Goopdate.dll is loaded by GoogleUpdate.exe.", "The environment is Windows-based.", "The system has a ProgramData directory.", "The system has a GoogleUpdate directory.", "The system has a Firefox installation.", "The system has a legitimate certificate belonging to KgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgL (Founder Technology Group Corporation) available.", "Environment: Windows-based system with a ProgramData directory, GoogleUpdate directory, and Firefox installation.", "Tools: NSIS installer, GoogleUpdate.exe, Goopdate.dll, and a legitimate certificate belonging to KgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgL (Founder Technology Group Corporation).", "Connectivity: Internet connectivity to access hxxp://moziila.net and hxxp://\\x00refox.com.cn.", "Resources: Availability of a legitimate certificate belonging to KgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgL (Founder Technology Group Corporation) and a trojanised Firefox installer.", "The system must be able to load the malicious DLL Goopdate.dll by the legitimate signed executable file GoogleUpdate.exe.", "The system time register is checked twice.", "The system time register is checked for a delay of more than 100 milliseconds.", "The system time register is checked for a delay of less than or equal to 100 milliseconds.", "The system time register is checked for a delay of less than 100 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than or equal to 200 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than 200 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than or equal to 500 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than 500 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than or equal to 1000 milliseconds.", "The system time register is checked for a delay of more than 100 milliseconds and less than 1000 milliseconds.", "A system with a time register.", "A system with a time register that can be checked.", "A system with a time register that can be checked for a delay.", "A system with a time register that can be checked for a delay of more than 100 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than or equal to 200 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than 200 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than or equal to 500 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than 500 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than or equal to 1000 milliseconds.", "A system with a time register that can be checked for a delay of more than 100 milliseconds and less than 1000 milliseconds.", "A system with a physical memory size exceeding 2GB.", "A system with a disk size exceeding 1GB.", "A system with a physical memory size exceeding 2GB and a disk size exceeding 1GB.", "A system with a physical memory size exceeding 2GB or a disk size exceeding 1GB.", "A system with a physical memory size exceeding 2GB and a disk size exceeding 1GB, and a time register that can be checked for a delay of more than 100 milliseconds.", "A system with a time register.", "A system with a physical memory size exceeding 2GB.", "A system with a disk size exceeding 1GB.", "The system has a disk.", "The system has physical memory.", "The system has a logical processor.", "The system has a disk size greater than 1GB.", "The system has a physical memory size greater than 2GB.", "The system has a number of logical processors greater than 2.", "A system with a disk.", "A system with physical memory.", "A system with a logical processor.", "A system with a disk size greater than 1GB.", "A system with a physical memory size greater than 2GB.", "A system with a number of logical processors greater than 2.", "The system must be running a 32-bit or 64-bit operating system (inferred from the context).", "The system must have the necessary resources to run the malware (inferred from the context).", "The system must have a network connection (inferred from the context, as the malware communicates with a C2 server).", "The system must have a process manager (inferred from the context, as the malware checks for processes running on the system).", "The system must have a debugger (inferred from the context, as the malware checks for debuggers running on the system).", "The system must have a virtualization or sandbox environment (inferred from the context, as the malware is designed to evade these environments).", "The system has processes running.", "The system has a name for each running process.", "The system has a physical memory size exceeding 2GB.", "The system has a disk size exceeding 1GB.", "The system is not being reverse engineered.", "The system is not being debugged.", "The system does not have a debugger running.", "The system does not have other analysis tools running.", "Environment: A system with processes running, a physical memory size exceeding 2GB, and a disk size exceeding 1GB.", "Tools: None directly stated, but the system must have a way to check process names and system properties.", "Connectivity: None directly stated.", "Resources: None directly stated, but the system must have enough resources to run the checks.", "Availability of the Goofy Guineapig malware.", "The system must be able to execute the malware.", "The system must be able to load the Goofy Guineapig plugins.", "The system must be able to communicate with the tcplog.com server (HTTPS) or use raw TCP socket communications.", "The malware Goofy Guineapig is present in the system.", "The malware Goofy Guineapig has been executed.", "The system has a legitimate NSIS installer.", "The system has a UPX packer.", "The system has a legitimate executable GoogleUpdate.exe.", "The system has a legitimate FireFox NSIS installation package.", "The system has a legitimate FireFox executable.", "The system has a physical memory size exceeding 2GB.", "The system has a disk size exceeding 1GB.", "The system has a legitimate Windows operating system.", "Environment: Windows operating system.", "Tools: UPX packer, NSIS installer, GoogleUpdate.exe, FireFox executable.", "Connectivity: None.", "Resources: Physical memory size exceeding 2GB, disk size exceeding 1GB.", "Availability of legitimate software: NSIS installer, GoogleUpdate.exe, FireFox executable.", "Availability of malware: Goofy Guineapig.", "Availability of system resources: physical memory size exceeding 2GB, disk size exceeding 1GB.", "The malware Goofy Guineapig is present on the system.", "The malware Goofy Guineapig is running on the system.", "The system has a process running that contains the string \u2018dbg\u2019, \u2018debug\u2019, or \u2018ida\u2019.", "The system has a process running that indicates it is being reverse engineered or debugged.", "The system has a legitimate NSIS installer.", "The system has a file with a single-byte XOR or subtraction obfuscation.", "The system has a file with RC4 encryption.", "The system has a file with one-byte XOR obfuscation with the key 0x59.", "Environment: A system with a malware analysis environment or a sandbox.", "Tools: A malware analysis tool, such as a disassembler or a debugger, and a tool for decoding or deobfuscating files, such as a XOR decoder.", "Connectivity: None.", "Resources: A system with sufficient resources to run the malware analysis tool and the malware itself.", "Availability of the malware: The malware Goofy Guineapig must be available for analysis.", "Knowledge of the malware's behavior: The analyst must have knowledge of the malware's behavior and the techniques used to obfuscate or encode the files.", "Availability of the tools: The tools required to decode or deobfuscate the files must be available and accessible to the analyst.", "The Goofy Guineapig malware is present in the system.", "The system has a legitimate dllhost.exe process.", "The system has a legitimate GoogleUpdate.exe executable.", "The system has a legitimate Firefox installation package.", "The system has a hidden directory, ProgramData, by default.", "The system has a legitimate NSIS installer.", "The system has a legitimate FireFox NSIS installation package.", "The system has a legitimate url.dll binary.", "The system has a legitimate rundll32.exe binary.", "The system has a legitimate dllhost.exe binary.", "Environment: Windows operating system.", "Tools: None explicitly stated, but the following tools are inferred to be available:", "Connectivity: None explicitly stated, but the following connectivity is inferred to be available:", "Resources:", "The system must have the necessary permissions to create and hide processes.", "The malware Goofy Guineapig is initially run in the location to which it is downloaded.", "The files are moved to a legitimate looking directory.", "The initial download location exists.", "The files to be deleted are present in the initial download location.", "The ProgramData directory exists.", "The persistence mechanism has been installed.", "The malicious files are copied to the ProgramData directory.", "The extracted Firefox files directory exists.", "Environment: Windows operating system.", "Tools: Batch script, UPX packed NSIS installer, Goopdate.dll DLL.", "Connectivity: None.", "Resources:", "The malware Goofy Guineapig is installed and running.", "A legitimate executable is installed.", "A malicious DLL is loaded by the legitimate executable.", "The legitimate executable is installed by the Goofy Guineapig loader.", "The malicious DLL is sideloaded by the legitimate, signed, executable GoogleUpdate.exe.", "The Goofy Guineapig loader is present in the system.", "The malicious DLL is bundled in a UPX packed NSIS installer.", "The NSIS installer is a trojanised Firefox installer.", "The Goofy Guineapig loader checks if it is running from the location C:\\\\ProgramData \\\\GoogleUpdate.", "A service is started for persistence if the Goofy Guineapig loader is not running from the location C:\\\\ProgramData \\\\GoogleUpdate.", "The legitimate executable and the malicious DLL are present in the system.", "Windows operating system.", "Presence of the Goofy Guineapig loader.", "Presence of a legitimate executable.", "Presence of a malicious DLL.", "Presence of a UPX packed NSIS installer.", "Presence of a trojanised Firefox installer.", "Connectivity to the internet for C2 communication.", "Presence of a legitimate, signed, executable GoogleUpdate.exe.", "Ability to install and run the NSIS installer.", "Ability to sideload the malicious DLL into the legitimate executable.", "Ability to create a Windows service for persistence.", "Presence of the rundll32.exe and url.dll system binaries.", "The Goofy Guineapig malware is present on the system.", "The dllhost.exe process is present on the system.", "The Goofy Guineapig malware has the capability to perform process hollowing.", "The Goofy Guineapig malware has the capability to inject content into the dllhost.exe process.", "The Goofy Guineapig malware has the capability to download content from the C2 server.", "The C2 server is reachable over HTTPS.", "The Goofy Guineapig malware has the necessary permissions to create and manipulate processes.", "Environment: Windows operating system.", "Tools: None explicitly stated, but the Goofy Guineapig malware is assumed to have the necessary capabilities.", "Connectivity: HTTPS connectivity to the C2 server.", "Resources: System memory and CPU resources to create and manipulate processes.", "Availability of the dllhost.exe process on the system.", "Availability of the Goofy Guineapig malware on the system.", "Necessary permissions to create and manipulate processes.", "A legitimate signed executable is installed.", "A malicious DLL is loaded by the legitimate executable.", "The legitimate executable is configured to load the malicious DLL.", "The malicious DLL is sideloaded by the legitimate executable.", "The legitimate executable is running with sufficient privileges.", "The malicious DLL is present in the system's memory.", "The system's process hollowing functionality is available.", "The system's DLL loading mechanism is functional.", "The system's rundll32.exe binary is available.", "The system's url.dll binary is available.", "Environment: Windows operating system.", "Tools: None explicitly stated, but the following are inferred:", "Connectivity: None explicitly stated, but the following are inferred:", "Resources:", "Additional requirements:"], "post-conditions": ["Persistence as a Windows service", "Malicious files in the ProgramData directory", "Hidden directory in the ProgramData directory", "Malicious DLL loaded by a legitimate executable", "Command and control communications over HTTPS", "Defence evasion techniques implemented", "Masquerading as a legitimate Firefox service", "Signed malicious loader using a legitimate certificate", "Malicious files deleted from the initial download directory", "Malicious files only visible in the ProgramData directory", "Windows service logs", "Malicious files in the ProgramData directory", "Hidden directory in the ProgramData directory", "Logs of malicious DLL loading", "Network connections for command and control communications", "Logs of defence evasion techniques", "Logs of masquerading as a legitimate Firefox service", "Certificate logs for signed malicious loader", "Batch script logs", "Logs of malicious files deletion", "Network connections for malicious loader download", "Logs of malicious files execution", "System process logs for persistence", "Logs of process hollowing on dllhost.exe", "Logs of UPX packed NSIS installer execution", "The malware will not continue execution if the disk size is less than 1GB.", "The malware will not continue execution if the physical memory size is less than 2GB.", "The malware will not continue execution if the number of logical processors is less than a certain threshold.", "The malware will not continue execution if the time difference between two values is more than 100ms.", "The malware will not continue execution if a debugger is running.", "The malware will not continue execution if other analysis tools are running.", "The malware will not continue execution if the machine is being reverse engineered or debugged.", "The malware will not continue execution if any process containing the string 'dbg', 'debug', or 'ida' is running.", "Logs of system time checks.", "Logs of disk size checks.", "Logs of physical memory size checks.", "Logs of logical processor checks.", "Logs of time difference checks.", "Logs of debugger checks.", "Logs of analysis tool checks.", "Logs of reverse engineering checks.", "Logs of process checks.", "Network connections to command and control servers over HTTPS.", "Files containing configuration for the malware.", "Files containing embedded configuration for the binary.", "Files containing defence evasion techniques.", "Files containing anti-sandbox/anti-VM techniques.", "Files containing anti-dynamic analysis techniques.", "Files containing anti-static analysis techniques.", "Files containing logs of defence evasion techniques.", "Files containing logs of anti-sandbox/anti-VM techniques.", "Files containing logs of anti-dynamic analysis techniques.", "Files containing logs of anti-static analysis techniques.", "The malware will exit if any of the sandbox detection checks fail.", "The malware will not continue execution if the number of logical processors is less than or equal to 2.", "The malware will not continue execution if the disk size, physical memory size, or number of logical processors are not sufficient.", "The malware will not continue execution if it detects processes running on a system that indicate it is being reverse engineered or debugged.", "The malware will not continue execution if it detects any indication that the process is running in an automated analysis environment.", "The malware will not continue execution if it detects any error during the execution of the payload data.", "The malware will not continue execution if it detects any error during the communication with the command and control server.", "Logs of the sandbox detection checks.", "Files created by the malware, such as dllhost.exe.", "Network connections to the command and control server.", "Logs of the communication with the command and control server.", "Files created by the malware, such as configuration files.", "Registry keys modified by the malware.", "Files deleted or modified by the malware.", "Network connections to the malware's command and control server.", "Logs of the malware's execution, such as process creation and termination logs.", "Files created by the malware, such as plugin files.", "The malware will not continue execution if any process containing the string 'dbg', 'debug', or 'ida' is running.", "The malware will not continue execution if any of the checks fail, including disk size, physical memory size, and number of logical processors.", "The malware will exit if the number of logical processors does not exceed 2.", "The malware will impersonate the user associated with the session ID.", "An instance of the legitimate dllhost.exe process will be created in the suspended state.", "Command data will be written into the process memory.", "The thread context will be changed to point at the new data and the thread will be resumed.", "The malware will check for processes running on a system which indicate that it is being reverse engineered or debugged.", "The malware will check the properties of the infected machine, as well as the running processes and system time.", "The malware will collect information about the infected machine or run additional plugins.", "Logs of system checks, including disk size, physical memory size, and number of logical processors.", "Logs of process checks, including running processes and system time.", "Creation of a legitimate dllhost.exe process in the suspended state.", "Writing of command data into the process memory.", "Changes to the thread context.", "Network connections for command and control communications over HTTPS.", "Files created by the malware, including configuration files and plugin files.", "Modification of system time.", "Creation of a new dllhost.exe process to execute the payload data.", "Logs of user impersonation.", "Malware infection", "Data exfiltration", "Command and control (C2) communications over HTTPS", "Defence evasion techniques implemented", "Malicious DLL sideloaded by legitimate executable", "Malware masquerading as legitimate processes", "Malicious files dropped alongside legitimate files", "Malware checking for automated analysis environment", "Malware checking for physical memory size and disk size", "Malware implementing anti-sandbox/anti-VM techniques", "Malicious DLL file created in system directory", "Malicious executable file created in system directory", "Network connections to C2 server over HTTPS", "Logs of malware activity in Windows Event Viewer", "Files created in %TEMP% directory", "Registry keys modified to enable malware functionality", "System configuration files modified to enable malware functionality", "Network traffic logs showing C2 communications", "Files created in %APPDATA% directory", "System files modified to enable malware persistence", "The malware is able to communicate with its command and control server over HTTPS.", "The malware is able to communicate with its command and control server over UDP using the KCP protocol.", "The malware is able to impersonate a legitimate process (dllhost.exe).", "The malware is able to execute payload data in a suspended state process.", "The malware is able to change the thread context to point at the new data.", "The malware is able to resume the thread and execute the payload data.", "The malware is able to delete files from the original file path.", "The malware is able to restart the GoogleUpdate.exe process from the ProgramData directory.", "The malware is able to delete itself.", "The malware is able to check the name of each running process on the machine.", "The malware is able to prevent execution if a process containing the string 'dbg', 'debug', or 'ida' is running.", "Log files of the malware's communication with its command and control server.", "Files created by the malware (e.g. dllhost.exe process).", "Network connections to the command and control server.", "Files deleted by the malware (e.g. GoogleUpdate.exe and Goopdate.dll).", "Batch script files created by the malware.", "RC4 encrypted files embedded in the shellcode.", "One-byte XOR obfuscated configuration strings.", "Embedded configuration strings in the binary.", "Process memory modifications made by the malware.", "Suspended state processes created by the malware.", "Thread context changes made by the malware.", "Log files of the malware's execution and deletion.", "Malicious DLL loaded into the legitimate dllhost.exe process.", "Malicious DLL injected into the legitimate dllhost.exe process.", "Malicious DLL sideloaded by the legitimate GoogleUpdate.exe process.", "Malicious code loaded directly into the GoogleUpdate.exe process.", "KEYPLUG samples identified communicating with two different C&C domains.", "Malicious FireFox NSIS installation package dropped alongside legitimate FireFox files.", "Malicious DLL loaded into the legitimate executable installed by the Goofy Guineapig loader.", "Process hollowing performed on the dllhost.exe binary.", "Logs of the malicious DLL loading into the dllhost.exe process.", "Files created by the malicious FireFox NSIS installation package.", "Network connections to the two C&C domains used by KEYPLUG samples.", "Logs of the malicious DLL injection into the dllhost.exe process.", "Files created by the legitimate executable installed by the Goofy Guineapig loader.", "Logs of the malicious DLL sideloaded by the GoogleUpdate.exe process.", "Network connections to the C2 server used by the Goofy Guineapig loader.", "Malicious code loaded into the GoogleUpdate.exe process.", "Logs of the process hollowing performed on the dllhost.exe binary.", "Files created by the KEYPLUG samples.", "Malicious files are copied to the ProgramData directory.", "Malicious files are deleted from the initial download location.", "Persistence mechanism is installed.", "Command and control communications occur over HTTPS.", "Defence evasion techniques are implemented.", "Sandbox detection checks are performed.", "Malicious files are removed from the directory containing the extracted Firefox files.", "Initial directory to which the files were downloaded will only contain the files the recipient likely intended to download.", "Malicious files will only be present in the ProgramData directory.", "GoogleUpdate.exe process is restarted from the ProgramData directory.", "Logs of command and control communications over HTTPS.", "Files in the ProgramData directory.", "Deleted files in the initial download location.", "Persistence mechanism installed in the system.", "Logs of defence evasion techniques.", "Logs of sandbox detection checks.", "Network connections to C&C domains.", "Files in the directory containing the extracted Firefox files.", "Logs of GoogleUpdate.exe process restart.", "Network connections to hxxps://static.tcplog.com:4443 and hxxps://139.59.116.0:4443.", "Persistence of a malicious DLL in the system.", "Creation of a Windows service for persistence.", "Hijacking of legitimate executable processes.", "Loading of malicious DLL by legitimate executable.", "Masquerading as legitimate processes.", "Trojanisation of a legitimate Firefox NSIS installation package.", "Sideloaded malicious DLL by legitimate, signed, executable.", "Communication over non-standard HTTPS port 4443.", "Process hollowing on dllhost.exe binary.", "Execution of malicious DLL through rundll32.exe and url.dll.", "Malicious DLL files in system directories.", "Windows service created for persistence.", "Logs of hijacked legitimate executable processes.", "Files created by legitimate executable with malicious DLL loaded.", "Network connections to static.tcplog.com.", "Network connections to moziila.net and hxxp://\\x00refox.com.cn.", "Files created by NSIS installer with trojanised Firefox.", "Logs of process hollowing on dllhost.exe binary.", "Logs of execution of malicious DLL through rundll32.exe and url.dll.", "Files created by legitimate executable with malicious DLL sideloaded.", "Certificate belonging to KgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgLKgL (Founder Technology Group Corporation) used for signing malicious loader.", "Logs of communication over non-standard HTTPS port 4443.", "The legitimate dllhost.exe process is created in the suspended state and executes the payload data.", "A legitimate executable is installed by the Goofy Guineapig loader, alongside a malicious DLL which will be loaded by the legitimate executable.", "The process dllhost.exe is created hidden.", "The disk size, physical memory size, and number of logical processors are checked, and execution is terminated if any of the checks fail.", "Process hollowing is performed on the dllhost.exe binary, injecting content downloaded by the C2.", "The persistence mechanism utilises rundll32.exe and url.dll to execute the legitimate binary which will load the malicious DLL.", "Information about the infected machine is sent in each C2 packet, as an obfuscated \u2018Authorization\u2019 string in the HTTP header.", "HTTPS is used for C2 communications.", "A payload executable appears to run under a legitimate process path and name in process listings.", "The CPU timestamp counter is read and saved, then read and saved again immediately.", "A global structure is used to store the handle of the spawned process.", "A named pipe is created where the name of the pipe is the computer name MD5 hashed twice.", "Logs of the legitimate dllhost.exe process creation and execution.", "Files installed by the Goofy Guineapig loader, including the malicious DLL.", "Hidden dllhost.exe process.", "Logs of the disk size, physical memory size, and number of logical processors checks.", "Process hollowing logs on the dllhost.exe binary.", "Logs of the persistence mechanism utilising rundll32.exe and url.dll.", "HTTP headers with obfuscated \u2018Authorization\u2019 strings in C2 packets.", "HTTPS connections for C2 communications.", "Process listings showing the payload executable running under a legitimate process path and name.", "Logs of the CPU timestamp counter reads and saves.", "Global structure logs storing the handle of the spawned process.", "Named pipe created with the computer name MD5 hashed twice as its name.", "Malicious loaders hosted on hxxps://download-ssl.moziila.net.", "Reuse of the KEYPLUG malware and loader used by APT41.", "Persistence of malicious DLL through Windows service.", "Creation of hidden processes (dllhost.exe).", "Process hollowing on dllhost.exe.", "Injection of content downloaded by C2 into dllhost.exe.", "Execution of malicious DLL through legitimate executable (GoogleUpdate.exe).", "Sideloaded malicious DLL through legitimate executable (GoogleUpdate.exe).", "Trojanisation of legitimate FireFox NSIS installation package.", "Creation of non-standard HTTPS port (4443) for communication.", "RC4 encrypted DLL and shellcode left behind.", "Hidden dllhost.exe processes.", "Process hollowing logs.", "Injected content in dllhost.exe memory.", "Rundll32.exe and url.dll execution logs.", "Sideloaded malicious DLL through GoogleUpdate.exe.", "FireFox NSIS installation package modification logs.", "Non-standard HTTPS port (4443) creation logs.", "RC4 encrypted DLL and shellcode files.", "Windows service logs for persistence mechanism.", "Network connections to C2 over HTTPS."]}, {"id": "f2074436-fd61-49af-a068-6241c3ba227f", "attack_steps": [{"id": "bafcffe2-a6ec-452a-84a9-b3326fbebc66", "name": "System Information Discovery as used by Goofy Guineapig", "description": "Goofy Guineapig performs System Information Discovery by collecting various pieces of information about the infected machine and sending them to its Command and Control (C2) server. \nHere's how it's done:\n\n\nData Collection: Goofy Guineapig gathers data about the infected system using a combination of methods:\n\nCOM and WMI: It leverages COM (Component Object Model) to access Windows Management Instrumentation (WMI), which provides information about the operating system and installed software. This is how it obtains the \"Operating system caption\" and \"Antivirus product display name\".\nWindows APIs: It utilizes various Windows APIs to collect other system details like adapter information, host and hostname, and computer name.\n\n\n\nObfuscation: The collected information is then obfuscated and encoded into an \"Authorization\" string within the HTTP header of each communication sent to the C2 server. This makes it harder to detect and analyze the transmitted data.\n\n\nTransmission:  Goofy Guineapig transmits this obfuscated \"Authorization\" string with each C2 communication, effectively sending the system information to its controllers.\n\n\nLet me know if you have any other questions about Goofy Guineapig's tactics or techniques. ", "mitre_technique": {"id": "T1082", "name": "System information discovery", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."}, "pre-conditions": ["The malware Goofy Guineapig is loaded on the infected machine.", "The infected machine has a Windows operating system.", "The infected machine has antivirus software installed.", "The infected machine has network adapters.", "The infected machine has a host name.", "The infected machine has a computer name.", "The infected machine has a COM interface.", "The infected machine has WMI information available.", "The infected machine has relevant Windows APIs available.", "The infected machine has the ability to access the internet.", "A Windows operating system.", "Antivirus software.", "Network adapters.", "A host name.", "A computer name.", "A COM interface.", "WMI information.", "Relevant Windows APIs.", "Internet connectivity.", "The ability to access the internet.", "The malware Goofy Guineapig.", "The ability to execute plugins or process hollowing dllhost.exe.", "HTTPS protocol for C2 communications.", "TCP socket communications.", "The ability to collect and send information about the infected machine."], "post-conditions": ["The infected machine's operating system caption is sent to the C2 server.", "The infected machine's antivirus product display name is sent to the C2 server.", "The infected machine's adapters information is sent to the C2 server.", "The infected machine's host and host name are sent to the C2 server.", "The infected machine's computer name is sent to the C2 server.", "The C2 server receives the collected information from the infected machine.", "The C2 server stores the collected information.", "The C2 server uses the collected information for further malicious activities.", "The infected machine's system time is checked for indication of automated analysis environment.", "The infected machine's running processes are checked for indication of automated analysis environment.", "The infected machine's properties are checked for indication of automated analysis environment.", "The infected machine's defence evasion techniques are implemented.", "The infected machine's command and control communications occur over HTTPS.", "The infected machine's configuration is embedded in the binary.", "The infected machine's defence evasion techniques are implemented throughout execution.", "Logs of C2 server receiving collected information from infected machine.", "Files containing collected information on C2 server.", "Network connections between infected machine and C2 server.", "Files containing embedded configuration in binary on infected machine.", "Logs of defence evasion techniques implemented on infected machine.", "Files created by defence evasion techniques on infected machine.", "Network connections for UDP and direct socket communications on infected machine.", "Logs of command and control communications over HTTPS on infected machine.", "Files containing MD5 hash of concatenated adapter information and host name on C2 server.", "Logs of system time checks on infected machine.", "Logs of running process checks on infected machine.", "Logs of property checks on infected machine.", "Files created by COM to access WMI information on infected machine.", "Files created by relevant Windows APIs on infected machine.", "Logs of process hollowing dllhost.exe on infected machine."], "indicators": ["The file 'config.dat' was located at 'C:\\ProgramData\\GoogleUpdate\\GoogleUpdate'.", "The User Agent 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36' was used."]}], "pre-conditions": ["The malware Goofy Guineapig is loaded on the infected machine.", "The infected machine has a Windows operating system.", "The infected machine has antivirus software installed.", "The infected machine has network adapters.", "The infected machine has a host name.", "The infected machine has a computer name.", "The infected machine has a COM interface.", "The infected machine has WMI information available.", "The infected machine has relevant Windows APIs available.", "The infected machine has the ability to access the internet.", "A Windows operating system.", "Antivirus software.", "Network adapters.", "A host name.", "A computer name.", "A COM interface.", "WMI information.", "Relevant Windows APIs.", "Internet connectivity.", "The ability to access the internet.", "The malware Goofy Guineapig.", "The ability to execute plugins or process hollowing dllhost.exe.", "HTTPS protocol for C2 communications.", "TCP socket communications.", "The ability to collect and send information about the infected machine."], "post-conditions": ["The infected machine's operating system caption is sent to the C2 server.", "The infected machine's antivirus product display name is sent to the C2 server.", "The infected machine's adapters information is sent to the C2 server.", "The infected machine's host and host name are sent to the C2 server.", "The infected machine's computer name is sent to the C2 server.", "The C2 server receives the collected information from the infected machine.", "The C2 server stores the collected information.", "The C2 server uses the collected information for further malicious activities.", "The infected machine's system time is checked for indication of automated analysis environment.", "The infected machine's running processes are checked for indication of automated analysis environment.", "The infected machine's properties are checked for indication of automated analysis environment.", "The infected machine's defence evasion techniques are implemented.", "The infected machine's command and control communications occur over HTTPS.", "The infected machine's configuration is embedded in the binary.", "The infected machine's defence evasion techniques are implemented throughout execution.", "Logs of C2 server receiving collected information from infected machine.", "Files containing collected information on C2 server.", "Network connections between infected machine and C2 server.", "Files containing embedded configuration in binary on infected machine.", "Logs of defence evasion techniques implemented on infected machine.", "Files created by defence evasion techniques on infected machine.", "Network connections for UDP and direct socket communications on infected machine.", "Logs of command and control communications over HTTPS on infected machine.", "Files containing MD5 hash of concatenated adapter information and host name on C2 server.", "Logs of system time checks on infected machine.", "Logs of running process checks on infected machine.", "Logs of property checks on infected machine.", "Files created by COM to access WMI information on infected machine.", "Files created by relevant Windows APIs on infected machine.", "Logs of process hollowing dllhost.exe on infected machine."]}, {"id": "81ec6bbd-1a94-4dd7-915d-3bb7833e9cdd", "attack_steps": [{"id": "d001443c-2c0d-4821-b844-eec3653d4253", "name": "Application Layer Protocol: Web Protocols as used by Goofy Guineapig", "description": "Goofy Guineapig uses the HTTPS protocol for its communication with its Command and Control (C2) server.  \nThis means it encrypts its data using SSL/TLS, making it more difficult to intercept and analyze the communication. ", "mitre_technique": {"id": "T1071.001", "name": "Application layer protocol: web protocols", "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."}, "pre-conditions": ["The machine has a physical memory size exceeding 2GB.", "The disk is more than 1GB in size.", "A debugger is not running.", "Other analysis tools are not running.", "The machine is not in a sandbox environment.", "The machine has a network connection.", "The HTTPS protocol is available.", "The HTTP protocol is available.", "The TCP protocol is available.", "The IP address of the machine is known.", "Environment: A Windows machine with a physical memory size exceeding 2GB and a disk size more than 1GB.", "Tools: A debugger (not running), analysis tools (not running), and a sandbox detection tool.", "Connectivity: A network connection to the internet.", "Resources: The HTTPS protocol, the HTTP protocol, the TCP protocol, and the IP address of the machine.", "Availability of the following domains: static.tcplog.com, download-ssl.moziila.net.", "Availability of the following ports: 4443.", "The machine must not be in a sandbox environment.", "The machine must have a physical memory size exceeding 2GB and a disk size more than 1GB."], "post-conditions": ["Malware infection of the machine", "Collection of system information", "Transmission of system information to C2 server", "Establishment of C2 communication over HTTPS", "Potential sandbox detection evasion", "Reuse of malware and loader by APT41", "Hosting of malicious loaders on compromised server", "Modification of system configuration to enable KCP protocol", "Logs of system information collection", "Files containing MD5 hashes of system information", "Network connections to C2 server over HTTPS", "Network connections to C2 server over UDP (using KCP protocol)", "Files containing hardcoded configuration strings", "Logs of C2 communication", "Files containing obfuscated 'Authorization' strings", "Network connections to compromised server hosting malicious loaders", "Files containing MD5 hashes of adapter information and host name", "Logs of sandbox detection evasion techniques", "Files containing modified system configuration to enable KCP protocol", "Network connections to download-ssl.moziila.net (compromised server)"], "indicators": ["A URL was observed: HTTPS://static.tcplog.com.", "A User Agent string was observed: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36."]}, {"id": "672208d3-14a1-481f-af7f-564246e62e70", "name": "Fallback Channels as used by Goofy Guineapig", "description": "Goofy Guineapig utilizes several fallback channels for communication when its primary HTTPS connection over port 4443 is unavailable or blocked. \nHere's how it works:\n\n\nUDP: Goofy Guineapig can establish communication using the User Datagram Protocol (UDP). This protocol is connectionless and offers faster transmission speeds but lacks reliability and guaranteed delivery.\n\n\nKCP:  Goofy Guineapig can also use the KCP (Kylix Crypto Protocol) for communication. KCP is a fast and reliable protocol designed for low-latency, high-throughput applications. It offers features like congestion control and packet loss recovery, making it suitable for scenarios where network conditions are unpredictable.\n\n\nDirect Socket Communications:  Goofy Guineapig has the capability to perform direct socket communications. This allows it to establish a raw connection with a Command and Control (C2) server without relying on established protocols like UDP or KCP. The specific details of these direct socket communications, such as the ports used, are likely determined by the embedded configuration string.\n\n\nThe choice of fallback channel is likely determined dynamically based on factors like network availability, latency, and the specific configuration of the malware.\nLet me know if you have any other questions about Goofy Guineapig or malware analysis in general. ", "mitre_technique": {"id": "T1008", "name": "Fallback channels", "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds."}, "pre-conditions": ["An embedded configuration string is present.", "The embedded configuration string contains UDP rather than HTTP (S).", "The embedded configuration string is hardcoded in the binary under a single byte XOR with the key 0x59.", "The binary is executed.", "The binary is running on a machine with a network connection.", "The binary has access to the KCP protocol.", "The binary has access to UDP protocol.", "The binary has access to the pipe character.", "Environment: A Windows machine with a network connection.", "Tools: None directly stated, but the binary is required.", "Connectivity: A network connection is required.", "Resources: Access to the KCP protocol, UDP protocol, and the pipe character.", "Availability of the binary with the embedded configuration string.", "Availability of the single byte XOR key 0x59.", "Availability of the HTTPS port 4443.", "Availability of the static.tcplog.com domain."], "post-conditions": ["Command and control communications occur over HTTPS.", "Functionality to support UDP and direct socket communications is present.", "The backdoor supports multiple communications methods, including HTTP, HTTPS, and KCP.", "Command and control communications occur over HTTPS with no proxy and communications occur over port 4443.", "Communications occur using HTTPS GET and POST requests.", "The binary also supports HTTP, UDP communications (using the KCP protocol), and raw TCP socket communications.", "Session enumeration occurs, searching for logon sessions on the infected machine.", "The malware checks the name of each running process on the machine and terminates if a process containing 'dbg', 'debug', or 'ida' is found.", "Embedded configuration string containing UDP rather than HTTP (S) in the binary.", "Temporary files created during the execution of the temp.bat script.", "Logs of HTTPS GET and POST requests.", "Network connections over port 4443.", "Logs of session enumeration, including logon sessions and associated usernames and client protocol types.", "Files created or modified by the malware, including configuration files or logs.", "Network connections over UDP using the KCP protocol.", "Logs of raw TCP socket communications.", "Temporary files created during the execution of the malware, including files used for self-deletion.", "Files created or modified by the malware, including files used for debugging or analysis."], "indicators": ["The URL HTTPS://static.tcplog.com was observed.", "The file tmp.bat was located at C:\\ProgramData\\GoogleUpdate\\GoogleUpdate\\tmp.bat."]}, {"id": "cf19834b-7266-4604-b03a-f91647644c87", "name": "Non-Standard Port as used by Goofy Guineapig", "description": "Goofy Guineapig establishes communication with its Command and Control (C2) server over the non-standard HTTPS port 4443.  \nThis deviates from the standard HTTPS port (443) and is likely done to evade detection by security tools that might be monitoring common ports. ", "mitre_technique": {"id": "T1571", "name": "Non-standard port", "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data."}, "pre-conditions": ["The embedded configuration string contains a non-standard port number.", "The embedded configuration string contains the string 'HTTPS' or 'http'.", "The embedded configuration string contains the string 'UDP' or 'udp'.", "The physical memory size of the machine exceeds 2GB.", "The disk is more than 1GB in size.", "A Windows service is present.", "A legitimate signed executable is loaded.", "The malware is running on a machine with a physical memory size exceeding 2GB and a disk size exceeding 1GB.", "Environment: Windows operating system.", "Tools: None explicitly stated, but likely requires a debugger or analysis tool to inspect the malware's configuration.", "Connectivity: None explicitly stated, but likely requires network connectivity to communicate over the non-standard port.", "Resources: None explicitly stated, but likely requires sufficient system resources to run the malware and perform communication over the non-standard port.", "Availability of the malware binary with the embedded configuration string.", "Availability of a legitimate signed executable to load the malware.", "Presence of a Windows service to maintain persistence.", "Sufficient disk space to store the malware and its configuration.", "Sufficient physical memory to run the malware and perform communication over the non-standard port."], "post-conditions": ["Malware persistence using a Windows service.", "Malware communication over non-standard HTTPS port 4443.", "Malware communication over UDP using the KCP protocol.", "Malware communication over direct socket connections.", "Malware evasion techniques implemented.", "Malware anti-sandbox/anti-VM techniques implemented.", "Malware configuration string hardcoded in the binary.", "Malware communication with C2 domains.", "Windows service logs.", "Network connections to static.tcplog.com:4443.", "Network connections to hxxps://139.59.116.0:4443.", "Files created by the malware.", "Registry entries created by the malware.", "Logs of malware communication over UDP and KCP protocol.", "Logs of malware communication over direct socket connections.", "Logs of malware evasion techniques.", "Logs of malware anti-sandbox/anti-VM techniques.", "Configuration string hardcoded in the binary."], "indicators": []}], "pre-conditions": ["The machine has a physical memory size exceeding 2GB.", "The disk is more than 1GB in size.", "A debugger is not running.", "Other analysis tools are not running.", "The machine is not in a sandbox environment.", "The machine has a network connection.", "The HTTPS protocol is available.", "The HTTP protocol is available.", "The TCP protocol is available.", "The IP address of the machine is known.", "Environment: A Windows machine with a physical memory size exceeding 2GB and a disk size more than 1GB.", "Tools: A debugger (not running), analysis tools (not running), and a sandbox detection tool.", "Connectivity: A network connection to the internet.", "Resources: The HTTPS protocol, the HTTP protocol, the TCP protocol, and the IP address of the machine.", "Availability of the following domains: static.tcplog.com, download-ssl.moziila.net.", "Availability of the following ports: 4443.", "The machine must not be in a sandbox environment.", "The machine must have a physical memory size exceeding 2GB and a disk size more than 1GB.", "An embedded configuration string is present.", "The embedded configuration string contains UDP rather than HTTP (S).", "The embedded configuration string is hardcoded in the binary under a single byte XOR with the key 0x59.", "The binary is executed.", "The binary is running on a machine with a network connection.", "The binary has access to the KCP protocol.", "The binary has access to UDP protocol.", "The binary has access to the pipe character.", "Environment: A Windows machine with a network connection.", "Tools: None directly stated, but the binary is required.", "Connectivity: A network connection is required.", "Resources: Access to the KCP protocol, UDP protocol, and the pipe character.", "Availability of the binary with the embedded configuration string.", "Availability of the single byte XOR key 0x59.", "Availability of the HTTPS port 4443.", "Availability of the static.tcplog.com domain.", "The embedded configuration string contains a non-standard port number.", "The embedded configuration string contains the string 'HTTPS' or 'http'.", "The embedded configuration string contains the string 'UDP' or 'udp'.", "The physical memory size of the machine exceeds 2GB.", "The disk is more than 1GB in size.", "A Windows service is present.", "A legitimate signed executable is loaded.", "The malware is running on a machine with a physical memory size exceeding 2GB and a disk size exceeding 1GB.", "Environment: Windows operating system.", "Tools: None explicitly stated, but likely requires a debugger or analysis tool to inspect the malware's configuration.", "Connectivity: None explicitly stated, but likely requires network connectivity to communicate over the non-standard port.", "Resources: None explicitly stated, but likely requires sufficient system resources to run the malware and perform communication over the non-standard port.", "Availability of the malware binary with the embedded configuration string.", "Availability of a legitimate signed executable to load the malware.", "Presence of a Windows service to maintain persistence.", "Sufficient disk space to store the malware and its configuration.", "Sufficient physical memory to run the malware and perform communication over the non-standard port."], "post-conditions": ["Malware infection of the machine", "Collection of system information", "Transmission of system information to C2 server", "Establishment of C2 communication over HTTPS", "Potential sandbox detection evasion", "Reuse of malware and loader by APT41", "Hosting of malicious loaders on compromised server", "Modification of system configuration to enable KCP protocol", "Logs of system information collection", "Files containing MD5 hashes of system information", "Network connections to C2 server over HTTPS", "Network connections to C2 server over UDP (using KCP protocol)", "Files containing hardcoded configuration strings", "Logs of C2 communication", "Files containing obfuscated 'Authorization' strings", "Network connections to compromised server hosting malicious loaders", "Files containing MD5 hashes of adapter information and host name", "Logs of sandbox detection evasion techniques", "Files containing modified system configuration to enable KCP protocol", "Network connections to download-ssl.moziila.net (compromised server)", "Command and control communications occur over HTTPS.", "Functionality to support UDP and direct socket communications is present.", "The backdoor supports multiple communications methods, including HTTP, HTTPS, and KCP.", "Command and control communications occur over HTTPS with no proxy and communications occur over port 4443.", "Communications occur using HTTPS GET and POST requests.", "The binary also supports HTTP, UDP communications (using the KCP protocol), and raw TCP socket communications.", "Session enumeration occurs, searching for logon sessions on the infected machine.", "The malware checks the name of each running process on the machine and terminates if a process containing 'dbg', 'debug', or 'ida' is found.", "Embedded configuration string containing UDP rather than HTTP (S) in the binary.", "Temporary files created during the execution of the temp.bat script.", "Logs of HTTPS GET and POST requests.", "Network connections over port 4443.", "Logs of session enumeration, including logon sessions and associated usernames and client protocol types.", "Files created or modified by the malware, including configuration files or logs.", "Network connections over UDP using the KCP protocol.", "Logs of raw TCP socket communications.", "Temporary files created during the execution of the malware, including files used for self-deletion.", "Files created or modified by the malware, including files used for debugging or analysis.", "Malware persistence using a Windows service.", "Malware communication over non-standard HTTPS port 4443.", "Malware communication over UDP using the KCP protocol.", "Malware communication over direct socket connections.", "Malware evasion techniques implemented.", "Malware anti-sandbox/anti-VM techniques implemented.", "Malware configuration string hardcoded in the binary.", "Malware communication with C2 domains.", "Windows service logs.", "Network connections to static.tcplog.com:4443.", "Network connections to hxxps://139.59.116.0:4443.", "Files created by the malware.", "Registry entries created by the malware.", "Logs of malware communication over UDP and KCP protocol.", "Logs of malware communication over direct socket connections.", "Logs of malware evasion techniques.", "Logs of malware anti-sandbox/anti-VM techniques.", "Configuration string hardcoded in the binary."]}]